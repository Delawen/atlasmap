var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/injectables/ApiHttpXsrfTokenExtractor.html",[0,1.842,1,2.674]],["body/injectables/ApiHttpXsrfTokenExtractor.html",[0,3.343,1,4.484,2,3.421,3,0.142,4,0.142,5,0.122,6,0.215,7,0.111,8,5.683,9,4.278,10,2.311,11,6.302,12,5.683,13,6.302,14,5.445,15,5.221,16,6.382,17,5.824,18,4.825,19,6.572,20,3.231,21,1.092,22,0.4,23,0.792,24,0.717,25,4.825,26,0.203,27,0.619,28,1.232,29,1.485,30,0.619,31,6.572,32,0.249,33,5.451,34,0.504,35,0.014,36,0.496,37,3.343,38,5.451,39,0.4,40,0.698,41,4.744,42,5.824,43,5.824,44,6.302,45,5.252,46,3.421,47,3.957,48,1.832,49,0.759,50,0.823,51,0.199,52,0.313,53,1.689,54,6.302,55,4.825,56,3.93,57,3.223,58,4.744,59,5.252,60,5.252,61,0.311,62,3.653,63,4.744,64,4.744,65,3.93,66,3.93,67,4.744,68,4.744,69,2.41,70,3.421,71,3.05,72,4.744,73,4.744,74,4.744,75,4.278,76,2.758,77,3.653,78,4.744,79,5.824,80,0.74,81,4.744,82,4.278,83,4.744,84,4.744,85,3.93,86,4.744,87,4.744,88,0.009,89,0.011,90,0.009]],["title/interceptors/ApiXsrfInterceptor.html",[56,2.877,62,2.674]],["body/interceptors/ApiXsrfInterceptor.html",[0,3.328,1,3.616,3,0.14,4,0.14,5,0.121,6,0.214,7,0.11,8,5.658,9,4.235,10,2.288,11,6.274,12,5.658,13,6.274,14,5.426,15,5.198,16,6.322,17,4.696,18,3.891,19,6.274,20,2.605,21,0.88,22,0.382,23,0.789,24,0.715,25,3.891,26,0.201,27,0.615,28,1.228,29,1.479,30,0.615,31,4.696,32,0.248,34,0.499,35,0.014,36,0.4,37,3.328,39,0.399,40,0.691,41,4.696,42,5.788,43,6.549,44,6.849,45,5.22,46,3.387,47,4.263,48,1.813,49,0.751,50,0.814,51,0.198,52,0.311,53,1.678,54,6.274,55,5.426,56,4.795,57,3.933,58,5.788,59,5.658,60,5.658,61,0.411,62,4.457,63,5.788,64,6.274,65,3.891,66,3.891,67,4.696,68,4.696,69,2.386,70,3.387,71,3.02,72,4.696,73,4.696,74,4.696,75,4.235,76,2.73,77,3.616,78,4.696,79,5.788,80,0.736,81,4.696,82,4.235,83,4.696,84,4.696,85,3.891,86,4.696,87,4.696,88,0.009,89,0.011,90,0.009,91,5.396,92,6.651,93,5.396,94,0.605,95,0.264,96,0.605,97,5.396]],["title/components/AppComponent.html",[98,0.179,99,0.843]],["body/components/AppComponent.html",[3,0.142,4,0.142,5,0.123,7,0.111,21,1.095,35,0.014,39,0.29,40,0.701,51,0.163,52,0.314,61,0.414,88,0.009,89,0.011,90,0.009,98,0.326,99,1.598,100,1.578,101,1.334,102,1.334,103,4.764,104,1.242,105,1.738,106,1.542,107,1.767,108,5.839,109,1.706,110,1.199,111,1.634,112,1.578,113,1.157,114,1.842,115,1.334,116,1.334,117,1.199,118,1.334,119,1.157,120,1.334,121,1.157,122,1.334,123,1.334,124,1.157,125,1.199,126,0.709,127,1.89,128,1.157,129,1.334,130,1.116,131,1.137,132,1.157,133,1.334,134,1.157,135,1.334,136,1.157,137,1.334,138,1.116,139,1.842,140,1.116,141,1.287,142,1.656,143,1.334,144,1.199,145,1.334,146,1.157,147,1.157,148,1.116,149,1.334,150,1.116,151,1.199,152,1.334,153,1.157,154,0.791,155,1.157,156,1.076,157,1.334,158,1.157,159,1.334,160,1.157,161,1.334,162,1.157,163,1.157,164,1.634,165,1.157,166,1.076,167,1.334,168,1.157,169,1.334,170,1.157,171,1.523,172,1.334,173,1.157,174,1.095,175,1.076,176,1.634,177,1.116,178,1.157,179,1.634,180,1.157,181,1.157,182,1.199,183,1.157,184,1.157,185,1.334,186,1.157,187,1.242,188,1.287,189,1.116,190,1.287,191,1.334]],["title/modules/AppRoutingModule.html",[192,2.505,193,2.674]],["body/modules/AppRoutingModule.html",[3,0.161,4,0.161,5,0.139,7,0.095,35,0.014,39,0.405,40,0.794,51,0.215,52,0.29,80,0.738,88,0.01,89,0.012,90,0.01,98,0.325,130,1.559,131,1.051,132,1.31,154,0.603,193,4.843,194,3.891,195,4.865,196,4.865,197,5.672,198,6.289,199,6.658,200,4.865,201,5.394,202,4.865,203,5.394,204,3.195,205,6.198,206,5.672,207,5.394,208,4.469,209,4.469,210,4.469]],["title/components/ClassNameComponent.html",[98,0.179,119,0.843]],["body/components/ClassNameComponent.html",[3,0.11,4,0.11,5,0.095,6,0.241,7,0.125,15,4.105,21,0.929,22,0.341,23,0.732,24,0.663,26,0.158,27,0.526,28,1.049,29,1.264,30,0.526,32,0.3,34,0.682,35,0.014,36,0.422,37,2.628,39,0.391,40,0.543,49,0.895,50,0.64,51,0.126,52,0.375,53,1.437,61,0.462,88,0.007,89,0.009,90,0.007,94,0.721,95,0.387,96,0.721,98,0.289,99,0.896,100,1.339,101,1.033,102,1.033,104,0.962,105,1.716,106,1.161,107,1.033,109,1.339,110,0.928,111,1.387,112,1.339,113,0.896,114,1.674,115,1.033,116,1.033,117,0.928,118,1.033,119,1.452,120,1.033,121,0.896,122,1.033,123,1.033,124,0.896,125,0.928,126,0.704,127,1.746,128,0.896,129,1.033,130,0.864,131,0.965,132,0.896,133,1.033,134,0.896,135,1.033,136,0.896,137,1.033,138,0.864,139,1.674,140,0.864,141,0.997,142,1.505,143,1.033,144,0.928,145,1.033,146,0.896,147,0.896,148,0.864,149,1.033,150,0.864,151,0.928,152,1.033,153,0.896,154,0.755,155,0.896,156,0.833,157,1.033,158,0.896,159,1.033,160,0.896,161,1.033,162,0.896,163,0.896,164,1.387,165,0.896,166,1.264,167,1.033,168,0.896,169,1.033,170,0.896,171,1.292,172,1.033,173,0.896,174,0.929,175,0.833,176,1.387,177,0.864,178,0.896,179,1.387,180,0.896,181,0.896,182,0.928,183,0.896,184,0.896,185,1.033,186,0.896,187,0.962,188,0.997,189,0.864,190,0.997,191,1.033,211,7.05,212,3.689,213,2.725,214,1.292,215,5.693,216,4.459,217,4.035,218,2.418,219,6.428,220,6.428,221,6.428,222,5.693,223,2.913,224,3.025,225,2.913,226,4.955,227,5.98,228,1.622,229,5.693,230,5.693,231,4.239,232,1.778,233,0.629,234,4.239,235,2.697,236,4.105,237,3.263,238,5.594,239,0.952,240,4.239,241,4.239,242,4.955,243,4.239,244,4.239,245,4.239,246,0.662,247,4.239,248,1.725,249,5.693,250,4.239,251,4.239,252,4.239,253,4.468,254,4.239,255,1.957,256,2.252,257,1.658,258,1.658,259,1.658,260,1.373,261,3.057,262,1.957,263,2.841,264,4.239,265,4.239,266,2.661,267,0.566,268,4.239,269,3.057,270,5.393,271,3.025,272,2.142,273,2.749,274,3.025,275,5.693]],["title/components/CollapsableHeaderComponent.html",[98,0.179,121,0.843]],["body/components/CollapsableHeaderComponent.html",[3,0.131,4,0.131,5,0.113,6,0.225,7,0.122,21,1.039,22,0.267,23,0.514,24,0.465,26,0.187,30,0.589,32,0.273,34,0.589,35,0.014,36,0.518,39,0.267,40,0.644,51,0.149,52,0.297,60,4.996,61,0.419,88,0.008,89,0.011,90,0.008,94,0.564,95,0.312,96,0.564,98,0.314,99,1.063,100,1.497,101,1.226,102,1.226,104,1.142,105,1.732,106,1.298,107,1.226,109,1.497,110,1.102,111,1.551,112,1.497,113,1.063,114,1.788,115,1.226,116,1.226,117,1.102,118,1.226,119,1.063,120,1.226,121,1.551,122,1.844,123,1.226,124,1.063,125,1.102,126,0.697,127,1.844,128,1.063,129,1.226,130,1.026,131,1.079,132,1.063,133,1.226,134,1.063,135,1.226,136,1.063,137,1.226,138,1.026,139,1.788,140,1.026,141,1.183,142,1.607,143,1.226,144,1.102,145,1.226,146,1.063,147,1.063,148,1.026,149,1.226,150,1.026,151,1.102,152,1.226,153,1.063,154,0.78,155,1.063,156,0.989,157,1.226,158,1.063,159,1.226,160,1.063,161,1.226,162,1.063,163,1.063,164,1.551,165,1.063,166,0.989,167,1.226,168,1.063,169,1.226,170,1.063,171,1.445,172,1.226,173,1.063,174,1.039,175,0.989,176,1.551,177,1.026,178,1.063,179,1.551,180,1.063,181,1.063,182,1.102,183,1.063,184,1.063,185,1.226,186,1.063,187,1.142,188,1.183,189,1.026,190,1.183,191,1.226,214,1.445,232,1.572,233,0.559,267,0.85,276,3.081,277,5.459,278,4.378,279,6.366,280,5.76,281,4.996,282,2.395,283,6.078,284,6.589,285,5.031,286,5.031,287,5.031,288,4.996,289,3.533,290,5.031,291,1.701,292,6.983,293,4.378,294,3.562,295,4.378,296,3.949,297,3.158]],["title/components/ConstantFieldEditComponent.html",[98,0.179,124,0.843]],["body/components/ConstantFieldEditComponent.html",[3,0.101,4,0.101,5,0.087,6,0.236,7,0.123,21,0.873,22,0.413,23,0.547,24,0.704,26,0.144,27,0.495,28,1.001,30,0.495,32,0.295,34,0.664,35,0.014,36,0.491,39,0.381,40,0.496,49,0.539,50,0.585,51,0.115,52,0.25,53,1.351,61,0.396,88,0.006,89,0.009,90,0.006,94,0.601,95,0.381,96,0.601,98,0.276,99,0.819,100,1.259,101,0.944,102,0.944,104,0.879,105,1.708,106,1.091,107,0.944,109,1.259,110,0.848,111,1.304,112,1.259,113,0.819,114,1.612,115,0.944,116,0.944,117,0.848,118,0.944,119,0.819,120,0.944,121,0.819,122,0.944,123,0.944,124,1.399,125,1.668,126,0.74,127,1.692,128,0.819,129,0.944,130,0.79,131,0.907,132,0.819,133,0.944,134,0.819,135,0.944,136,0.819,137,0.944,138,0.79,139,1.612,140,0.79,141,0.911,142,1.449,143,0.944,144,0.848,145,0.944,146,0.819,147,0.819,148,0.79,149,0.944,150,0.79,151,0.848,152,0.944,153,0.819,154,0.741,155,0.819,156,0.762,157,0.944,158,0.819,159,0.944,160,0.819,161,0.944,162,0.819,163,0.819,164,1.304,165,0.819,166,0.762,167,0.944,168,0.819,169,0.944,170,0.819,171,1.215,172,0.944,173,0.819,174,0.873,175,0.762,176,1.304,177,1.572,178,0.819,179,1.304,180,0.819,181,0.819,182,0.848,183,0.819,184,0.819,185,0.944,186,0.819,187,0.879,188,0.911,189,0.79,190,0.911,191,0.944,213,2.601,214,1.215,216,4.354,217,3.851,223,2.806,224,2.844,225,2.806,227,5.76,232,1.21,233,0.581,235,2.613,236,3.86,237,3.176,239,0.92,246,0.538,248,1.577,255,1.788,256,2.058,257,1.515,258,1.515,259,1.515,260,1.255,262,1.788,263,4.111,266,2.431,267,0.984,269,2.793,274,3.516,298,6.928,299,2.431,300,2.708,301,3.587,302,5.638,303,5.339,304,4.815,305,5.194,306,4.202,307,3.371,308,3.873,309,5.76,310,3.04,311,3.873,312,3.873,313,1.048,314,4.202,315,4.154,316,5.194,317,4.435,318,4.659,319,3.36,320,2.014,321,4.202,322,3.371,323,3.04,324,1.206,325,3.04,326,2.793,327,4.659,328,3.04,329,3.04,330,3.04,331,2.793,332,1.96,333,4.815,334,3.04,335,5.339,336,3.371,337,4.659,338,2.708,339,2.793,340,4.659,341,4.659,342,2.793,343,6.135,344,2.793,345,3.04,346,3.04,347,3.04,348,3.04,349,3.873,350,3.873,351,3.371,352,2.596,353,4.659,354,4.659,355,4.02,356,3.195,357,4.202,358,4.202,359,3.587,360,2.996,361,2.996,362,2.844,363,3.703,364,3.703,365,4.202,366,3.587,367,4.202,368,4.202,369,4.202,370,4.202,371,5.89]],["title/components/DataMapperAppComponent.html",[98,0.179,128,0.843]],["body/components/DataMapperAppComponent.html",[3,0.079,4,0.079,5,0.101,6,0.236,7,0.126,21,0.736,22,0.161,23,0.548,24,0.496,26,0.113,27,0.417,28,1.081,30,0.417,32,0.294,34,0.548,35,0.014,36,0.226,37,1.407,39,0.412,40,0.39,48,1.024,49,0.747,50,0.46,51,0.091,52,0.211,53,1.138,61,0.339,69,1.348,88,0.005,89,0.007,90,0.005,94,0.342,95,0.371,96,0.342,98,0.241,99,0.644,100,1.06,101,1.099,102,0.743,104,0.692,105,1.68,106,0.919,107,0.743,109,1.06,110,0.668,111,1.099,112,1.06,113,0.644,114,1.445,115,0.743,116,0.743,117,0.668,118,0.743,119,0.644,120,0.743,121,0.644,122,0.743,123,0.743,124,0.644,125,0.988,126,0.659,127,1.542,128,1.254,129,0.743,130,0.621,131,1.401,132,0.644,133,0.743,134,1.401,135,0.743,136,1.401,137,0.743,138,0.621,139,1.445,140,0.621,141,0.717,142,1.299,143,0.743,144,0.668,145,0.743,146,0.644,147,1.449,148,1.209,149,0.743,150,0.621,151,0.668,152,0.743,153,1.449,154,0.75,155,0.644,156,0.599,157,0.743,158,0.644,159,0.743,160,0.644,161,0.743,162,0.644,163,0.644,164,1.099,165,0.644,166,0.599,167,0.743,168,0.644,169,0.743,170,0.644,171,1.023,172,0.743,173,0.644,174,1.081,175,1.166,176,1.099,177,1.209,178,0.644,179,1.308,180,0.644,181,0.644,182,0.988,183,0.644,184,1.449,185,0.743,186,0.644,187,0.692,188,0.717,189,0.621,190,0.717,191,0.743,214,1.023,228,0.769,233,0.556,246,0.396,248,2.866,255,1.407,259,1.764,260,1.461,267,0.792,271,2.396,291,1.308,296,2.392,300,3.001,362,1.619,372,4.51,373,6.227,374,2.653,375,2.478,376,2.852,377,4.51,378,4.51,379,4.51,380,4.51,381,4.51,382,5.368,383,4.51,384,2.082,385,3.508,386,4.671,387,4.671,388,5.368,389,5.368,390,5.368,391,5.368,392,4.656,393,4.969,394,3.597,395,3.003,396,5.368,397,4.656,398,3.319,399,2.738,400,5.162,401,2.653,402,3.744,403,4.51,404,3.048,405,3.048,406,3.048,407,3.048,408,3.048,409,4.51,410,3.048,411,4.51,412,3.048,413,4.51,414,3.048,415,3.048,416,3.048,417,3.364,418,4.51,419,3.048,420,4.213,421,3.048,422,4.51,423,3.048,424,4.51,425,3.048,426,4.51,427,3.048,428,3.048,429,4.51,430,3.048,431,3.048,432,3.048,433,2.653,434,2.392,435,2.653,436,2.392,437,1.542,438,2.392,439,1.802,440,3.048,441,3.048,442,3.048,443,3.048,444,3.048,445,3.048,446,3.048,447,2.523,448,2.042,449,1.542,450,3.048,451,3.048,452,3.048,453,0.736,454,3.048,455,3.048,456,3.048,457,3.048,458,3.048,459,2.198,460,3.048,461,1.147,462,3.048,463,3.048,464,3.022,465,3.048,466,3.048,467,3.048,468,3.048,469,3.048,470,3.925,471,3.048,472,0.769,473,2.198,474,1.542,475,3.048,476,2.392,477,2.392,478,2.392,479,2.198,480,3.87,481,2.198,482,4.596,483,2.198,484,3.252,485,2.042,486,2.198,487,2.198,488,1.913,489,2.198,490,2.198,491,1.619,492,1.913,493,2.198,494,2.198,495,2.198,496,2.198,497,3.252,498,2.198,499,2.198,500,2.198,501,2.198,502,2.198,503,2.198,504,1.913,505,2.042,506,2.198,507,2.198,508,2.198,509,2.198,510,3.048,511,3.048,512,3.048,513,3.048,514,3.048,515,3.048,516,3.048,517,3.048,518,3.048,519,3.048,520,3.048,521,3.048,522,3.048,523,3.048,524,5.368,525,4.51,526,3.048,527,3.048,528,7.192,529,4.656,530,1.802,531,6.259,532,4.671,533,3.048,534,6.331,535,3.048,536,3.048,537,3.048,538,3.87,539,3.048,540,4.51,541,2.738,542,3.048,543,3.048,544,3.048,545,5.162,546,4.51,547,5.368,548,3.925,549,5.368,550,3.048,551,3.048,552,3.048,553,3.048,554,3.048,555,8.091,556,6.859,557,4.969,558,3.597,559,2.653,560,5.51,561,3.048,562,6.331,563,2.591,564,5.368,565,3.048,566,3.048,567,3.048,568,3.048,569,3.048,570,4.51,571,4.51,572,4.51,573,3.048,574,4.51,575,3.048,576,3.048,577,3.048,578,3.048,579,3.048,580,3.048,581,3.048,582,3.048,583,6.629,584,3.048,585,3.048,586,3.048,587,6.331,588,6.331,589,1.706,590,3.048,591,3.048,592,3.508,593,3.048,594,2.653,595,3.048,596,5.368,597,4.51,598,3.048,599,4.51,600,3.048,601,5.932,602,2.667,603,3.925,604,1.706,605,4.51,606,3.048,607,3.048,608,3.048,609,2.653,610,3.048,611,5.932,612,4.51,613,5.932,614,4.51,615,5.932,616,3.925,617,4.51,618,3.925,619,5.932,620,5.932,621,3.539,622,4.51,623,2.653,624,3.048,625,3.048,626,2.653,627,5.368,628,3.048,629,1.802,630,3.048,631,3.048]],["title/components/DataMapperAppExampleHostComponent.html",[98,0.179,130,0.813]],["body/components/DataMapperAppExampleHostComponent.html",[3,0.118,4,0.118,5,0.101,6,0.209,7,0.121,21,0.97,26,0.169,27,0.55,28,0.739,30,0.55,32,0.247,34,0.419,35,0.014,39,0.421,40,0.58,49,0.828,50,0.683,51,0.134,52,0.31,53,1.501,61,0.403,71,2.533,80,0.462,88,0.007,89,0.01,90,0.007,94,0.508,95,0.291,96,0.508,98,0.299,99,0.957,100,1.398,101,1.103,102,1.103,104,1.027,105,1.723,106,1.212,107,1.103,109,1.562,110,0.992,111,1.449,112,1.398,113,0.957,114,1.718,115,1.103,116,1.103,117,0.992,118,1.103,119,0.957,120,1.103,121,0.957,122,1.103,123,1.103,124,0.957,125,0.992,126,0.682,127,1.785,128,1.49,129,1.103,130,1.438,131,1.333,132,1.62,133,1.103,134,0.957,135,1.103,136,0.957,137,1.103,138,0.923,139,1.718,140,0.923,141,1.065,142,1.545,143,1.103,144,0.992,145,1.103,146,0.957,147,0.957,148,0.923,149,1.103,150,0.923,151,0.992,152,1.103,153,0.957,154,0.772,155,0.957,156,0.89,157,1.103,158,0.957,159,1.103,160,0.957,161,1.103,162,0.957,163,0.957,164,1.449,165,0.957,166,0.89,167,1.103,168,0.957,169,1.103,170,0.957,171,1.35,172,1.103,173,0.957,174,0.97,175,0.89,176,1.449,177,0.923,178,0.957,179,1.449,180,0.957,181,0.957,182,0.992,183,0.957,184,0.957,185,1.103,186,0.957,187,1.027,188,1.065,189,0.923,190,1.065,191,1.103,202,5.536,204,2.001,224,3.747,228,1.143,233,0.397,246,0.397,248,1.843,255,2.09,267,0.794,319,3.733,375,3.066,376,2.405,399,3.256,474,2.29,632,3.94,633,4.288,634,4.169,635,2.703,636,3.927,637,5.672,638,5.947,639,6.641,640,4.527,641,4.72,642,5.947,643,4.527,644,5.947,645,2.29,646,2.186,647,3.264,648,3.985,649,4.288,650,3.264,651,4.527,652,3.553,653,3.264,654,3.264,655,4.527,656,4.527,657,1.919,658,4.288,659,3.94,660,2.677,661,4.527,662,5.947,663,4.527,664,4.527,665,4.527,666,3.553,667,2.842,668,2.677,669,4.527,670,4.527,671,3.517,672,4.527,673,4.527,674,4.527,675,4.527,676,4.527,677,4.527,678,4.527,679,4.527,680,4.527,681,3.553,682,4.527,683,3.553,684,4.527,685,3.553,686,4.527,687,3.553,688,4.668,689,3.553,690,4.527,691,4.527,692,4.527,693,4.527,694,4.527,695,4.527,696,4.527,697,3.553,698,3.264,699,1.579,700,3.553,701,3.553,702,3.264,703,3.553,704,4.527,705,2.842,706,3.553,707,3.94,708,4.527,709,3.553,710,3.553,711,3.264,712,4.527,713,3.94,714,4.527,715,4.527,716,4.527]],["title/components/DataMapperErrorComponent.html",[98,0.179,134,0.843]],["body/components/DataMapperErrorComponent.html",[3,0.09,4,0.09,5,0.078,6,0.24,7,0.126,20,3.862,21,0.809,22,0.387,23,0.681,24,0.617,26,0.129,27,0.458,28,1.285,29,1.137,30,0.458,32,0.3,34,0.712,35,0.014,37,1.603,39,0.367,40,0.445,48,1.167,49,0.805,50,0.524,51,0.103,52,0.232,53,1.251,61,0.396,88,0.006,89,0.008,90,0.006,94,0.649,95,0.369,96,0.649,98,0.26,99,0.734,100,1.166,101,0.846,102,0.846,104,0.788,105,1.696,106,1.011,107,0.846,109,1.166,110,0.76,111,1.208,112,1.166,113,0.734,114,1.536,115,0.846,116,0.846,117,0.76,118,0.846,119,0.734,120,0.846,121,0.734,122,0.846,123,0.846,124,0.734,125,0.76,126,0.641,127,1.625,128,0.734,129,0.846,130,0.708,131,1.391,132,0.734,133,0.846,134,1.333,135,0.846,136,0.734,137,0.846,138,0.708,139,1.536,140,0.708,141,0.816,142,1.687,143,0.846,144,0.76,145,0.846,146,0.734,147,0.734,148,0.708,149,0.846,150,0.708,151,0.76,152,0.846,153,0.734,154,0.723,155,0.734,156,0.683,157,0.846,158,0.734,159,0.846,160,0.734,161,0.846,162,0.734,163,0.734,164,1.208,165,0.734,166,0.683,167,0.846,168,0.734,169,0.846,170,0.734,171,1.125,172,0.846,173,0.734,174,1.32,175,1.24,176,1.208,177,0.708,178,0.734,179,1.208,180,0.734,181,0.734,182,0.76,183,0.734,184,0.734,185,0.846,186,0.734,187,0.788,188,0.816,189,0.708,190,0.816,191,0.846,214,1.125,232,2.167,233,0.661,239,0.608,246,0.661,259,1.358,260,1.125,267,0.662,270,4.95,282,1.865,289,3.509,291,1.409,313,1.006,320,1.865,373,6.348,375,2.669,376,3.072,394,3.874,398,3.529,399,2.911,417,3.072,447,1.943,453,0.566,618,5.489,635,2.353,645,1.756,646,1.676,717,3.022,718,4.957,719,5.032,720,4.093,721,5.032,722,5.782,723,5.782,724,6.306,725,4.226,726,6.306,727,6.306,728,5.489,729,4.547,730,4.957,731,4.957,732,4.957,733,6.306,734,3.874,735,3.472,736,3.472,737,3.472,738,4.957,739,3.472,740,2.01,741,3.472,742,5.489,743,3.693,744,2.567,745,5.489,746,3.958,747,3.472,748,4.314,749,5.443,750,3.472,751,3.472,752,4.957,753,3.472,754,2.725,755,4.957,756,3.472,757,6.306,758,2.567,759,6.306,760,4.957,761,4.957,762,3.891,763,4.957,764,4.957,765,2.932,766,5.489,767,4.957,768,3.472,769,2.932,770,4.957,771,4.957,772,3.575,773,3.472,774,3.472,775,3.472,776,3.891,777,3.472,778,3.472,779,3.472,780,3.472,781,3.472,782,3.472,783,1.211,784,1.125,785,1.845,786,4.314,787,3.472,788,2.053,789,3.022,790,3.472,791,6.306,792,2.327,793,3.944,794,3.472,795,1.413,796,2.179,797,2.327,798,3.472,799,3.472,800,2.725,801,1.494,802,5.782,803,3.022,804,3.022,805,3.022,806,3.472,807,3.472,808,3.472,809,3.472,810,3.472,811,3.472,812,3.472,813,3.472,814,4.314,815,4.957,816,4.957]],["title/classes/DataMapperInitializationModel.html",[52,0.186,817,2.877]],["body/classes/DataMapperInitializationModel.html",[3,0.083,4,0.083,5,0.072,6,0.242,7,0.124,10,1.36,21,0.902,22,0.426,23,0.795,24,0.719,25,2.312,26,0.119,27,0.511,28,0.523,29,1.087,32,0.302,35,0.014,36,0.613,39,0.406,40,0.411,49,0.94,51,0.164,52,0.284,61,0.183,70,3.47,71,1.794,80,0.775,88,0.005,89,0.008,90,0.005,95,0.383,125,0.702,154,0.312,182,0.702,204,1.418,216,2.768,218,2.432,228,1.534,233,0.411,237,3.53,239,0.94,246,0.567,253,2.517,257,1.831,261,4.383,262,1.48,267,1.089,273,1.548,313,1.132,319,2.013,324,1.271,332,2.368,352,2.149,393,4.339,397,2.517,420,3.674,634,2.938,635,1.905,636,2.768,641,3.47,645,1.622,646,1.548,647,2.312,648,3.704,649,2.312,650,2.312,653,2.312,658,2.312,668,1.896,671,1.896,681,2.517,683,2.517,685,2.517,687,2.517,688,2.517,697,4.771,698,4.383,699,1.118,700,2.517,701,2.517,702,2.312,703,2.517,709,2.517,710,2.517,711,2.312,734,2.149,740,0.809,743,2.797,784,1.039,801,1.411,817,4.383,818,0.838,819,2.517,820,4.811,821,4.811,822,4.811,823,4.811,824,4.811,825,4.811,826,4.811,827,4.811,828,4.811,829,4.811,830,4.811,831,4.811,832,4.811,833,4.811,834,4.811,835,4.811,836,4.811,837,4.811,838,4.811,839,4.811,840,4.811,841,4.681,842,1.395,843,3.207,844,3.207,845,3.207,846,3.207,847,3.207,848,3.207,849,3.207,850,3.207,851,4.074,852,3.207,853,3.207,854,3.207,855,3.207,856,3.207,857,3.207,858,3.207,859,3.207,860,3.207,861,3.207,862,3.207,863,3.207,864,3.207,865,3.207,866,3.207,867,2.791,868,3.137,869,2.791,870,2.013,871,3.137,872,2.619,873,3.269,874,3.269,875,2.517,876,2.517,877,2.768,878,2.517,879,2.791,880,2.791,881,2.791,882,2.013,883,2.791,884,2.791,885,2.791,886,2.791,887,2.791,888,2.791,889,3.47,890,1.622,891,2.517,892,2.517,893,2.517,894,2.517,895,4.074,896,2.027,897,2.791,898,2.791,899,2.791,900,2.791,901,2.791,902,2.791,903,2.791,904,2.791,905,4.074,906,1.548,907,2.149,908,2.517,909,2.791,910,2.517,911,2.517,912,2.791,913,2.149,914,2.517,915,2.517,916,2.791,917,2.791,918,2.791,919,2.791,920,2.791,921,2.791,922,2.791,923,2.791,924,2.791,925,2.791,926,1.48,927,2.791,928,2.791,929,2.791,930,2.149,931,2.791,932,2.149,933,2.791,934,2.791,935,2.791,936,2.791,937,2.791,938,2.517,939,2.791,940,2.791,941,4.074,942,2.791,943,1.418,944,2.791,945,5.29,946,2.791,947,2.791,948,2.517,949,2.791,950,2.517,951,2.791,952,2.791,953,2.791,954,2.517,955,2.791,956,2.791,957,2.791,958,5.29,959,2.791,960,5.626,961,2.791,962,2.791,963,2.791,964,2.791,965,2.791,966,2.791,967,4.074,968,2.791,969,2.791,970,2.791,971,2.791,972,4.074,973,2.791,974,2.791,975,2.791,976,2.791,977,2.791,978,2.791,979,5.874,980,4.811,981,2.312,982,4.074,983,2.013,984,2.791,985,4.339,986,2.791,987,4.811,988,4.074,989,2.791,990,2.791,991,2.791,992,4.074,993,2.791,994,2.791,995,2.791,996,2.791,997,2.791,998,4.074,999,4.074,1000,2.791,1001,4.383,1002,4.074,1003,4.074,1004,2.791,1005,2.791,1006,1.896,1007,2.013,1008,2.312,1009,2.517,1010,2.791,1011,2.619,1012,3.674,1013,4.67,1014,2.791,1015,2.791,1016,1.622,1017,2.791,1018,2.312,1019,1.48,1020,1.794,1021,2.791,1022,2.791,1023,2.791,1024,2.791,1025,2.791,1026,4.811,1027,4.811,1028,2.791,1029,2.791,1030,2.791,1031,2.791,1032,3.375,1033,2.791,1034,2.791,1035,2.517,1036,2.791,1037,2.149,1038,2.791,1039,2.791,1040,2.791,1041,2.791]],["title/modules/DataMapperModule.html",[192,2.505,1042,2.674]],["body/modules/DataMapperModule.html",[1,3.747,3,0.085,4,0.085,5,0.106,6,0.141,7,0.073,22,0.173,30,0.302,32,0.122,34,0.302,35,0.014,39,0.444,40,0.419,45,3.728,46,2.054,49,0.455,50,0.494,51,0.238,52,0.153,62,3.747,69,1.446,71,1.831,80,0.694,88,0.005,89,0.008,90,0.005,110,0.717,119,1.518,121,1.436,124,1.518,126,0.615,128,1.625,130,1.601,131,1.04,132,0.691,134,1.436,136,1.436,138,1.386,140,1.465,144,1.489,146,1.518,147,1.436,150,1.465,153,1.436,155,1.436,156,0.643,158,1.436,160,1.436,162,1.436,163,1.436,165,1.436,166,0.643,168,1.518,170,1.436,171,0.743,173,1.436,174,0.912,175,1.498,177,1.553,178,1.518,180,1.436,181,1.518,183,1.518,184,1.436,186,1.436,189,1.386,192,2.981,193,4.555,194,2.054,197,4.816,203,2.847,208,3.425,209,4.032,210,4.032,237,1.446,256,1.738,257,1.858,260,1.539,262,1.51,267,0.437,272,1.787,277,2.359,313,0.494,332,1.655,433,2.847,434,2.568,436,2.568,437,3.548,438,4.816,464,2.192,473,2.359,474,1.655,476,2.568,477,2.568,478,2.568,479,2.359,480,4.032,481,2.359,482,4.699,483,2.359,484,3.425,485,2.192,486,2.359,487,2.359,488,2.054,489,2.359,490,2.359,491,1.738,492,2.054,493,2.359,494,2.359,495,2.359,496,2.359,497,3.425,498,2.359,499,2.359,500,2.359,501,2.359,502,2.359,503,2.359,504,2.054,505,2.192,506,2.359,507,2.359,508,2.359,509,2.359,633,4.698,634,4.597,635,2.981,636,4.33,641,4.597,645,2.403,646,2.293,647,3.425,648,4.366,649,3.425,650,3.425,652,3.728,653,2.359,769,1.935,868,3.183,870,2.981,871,2.192,872,1.831,873,1.935,874,4.248,875,2.568,876,2.568,877,4.248,878,2.568,889,2.054,896,1.381,1019,1.51,1042,5.703,1043,2.054,1044,4.424,1045,2.847,1046,2.847,1047,2.847,1048,2.847,1049,2.847,1050,4.555,1051,3.728,1052,3.425,1053,2.568,1054,4.75,1055,4.75,1056,5.592,1057,5.592,1058,3.272,1059,2.847,1060,6.103,1061,4.75,1062,3.272,1063,4.75,1064,2.359,1065,3.272,1066,4.134,1067,3.272,1068,4.75,1069,4.134,1070,4.75,1071,2.847,1072,4.75,1073,3.272,1074,3.272,1075,3.272,1076,3.272,1077,3.272,1078,5.592,1079,5.592,1080,3.272,1081,3.272,1082,4.698,1083,3.272,1084,3.272,1085,3.272,1086,7.689,1087,2.847,1088,4.75,1089,3.272,1090,3.272,1091,3.272,1092,3.272,1093,3.425,1094,4.75,1095,3.272,1096,2.568,1097,3.272,1098,3.272,1099,3.272,1100,4.134,1101,2.847,1102,2.359,1103,2.847,1104,2.568,1105,3.272,1106,3.272,1107,3.272,1108,3.272,1109,4.75,1110,4.75,1111,2.568,1112,0.918,1113,1.185,1114,2.847,1115,3.272,1116,3.272,1117,3.272,1118,2.192,1119,3.272,1120,2.847,1121,3.272,1122,3.728,1123,2.847,1124,3.728,1125,2.847,1126,3.728,1127,2.847,1128,3.728,1129,2.847,1130,3.728,1131,2.847,1132,3.728,1133,2.847,1134,3.272,1135,4.134,1136,4.75,1137,3.728]],["title/classes/DataMapperUtil.html",[52,0.186,1138,1.764]],["body/classes/DataMapperUtil.html",[3,0.112,4,0.149,5,0.178,6,0.236,7,0.121,10,1.819,22,0.412,23,0.586,24,0.531,26,0.241,27,0.531,30,0.531,32,0.293,34,0.711,35,0.014,36,0.615,39,0.227,51,0.127,52,0.2,61,0.456,76,3.641,77,3.845,80,0.66,88,0.007,89,0.009,90,0.007,94,0.862,95,0.385,96,0.862,131,1.344,204,2.537,232,1.793,239,0.704,246,0.504,267,0.767,272,2.159,324,1.357,356,2.071,453,1.055,472,1.083,529,3.367,563,2.771,602,3.393,699,2.742,772,4.138,801,2.169,818,1.122,842,1.742,896,2.424,1138,2.537,1139,6.901,1140,3.093,1141,6.466,1142,6.466,1143,5.739,1144,5.541,1145,5.739,1146,4.994,1147,5.739,1148,5.739,1149,5.739,1150,5.739,1151,5.739,1152,5.739,1153,4.29,1154,5.739,1155,4.29,1156,4.29,1157,5.739,1158,4.29,1159,4.29,1160,3.367,1161,4.29,1162,5.739,1163,5.739,1164,4.29,1165,3.093,1166,4.29,1167,2.4,1168,5.739,1169,6.171,1170,4.29,1171,3.845,1172,4.994,1173,4.994,1174,2.701,1175,5.628,1176,5.189,1177,4.29,1178,4.29,1179,5.628,1180,5.739,1181,5.419,1182,4.29,1183,4.504,1184,4.29,1185,5.739,1186,4.29,1187,3.733,1188,2.875,1189,4.29,1190,4.29,1191,4.29,1192,3.733,1193,2.875,1194,3.733,1195,5.739,1196,4.29,1197,5.739,1198,5.739,1199,4.994,1200,4.994,1201,7.197,1202,5.739,1203,5.648,1204,7.197,1205,4.29,1206,4.994,1207,4.994,1208,5.739,1209,4.994,1210,5.739,1211,5.739,1212,4.504,1213,4.29,1214,4.29,1215,4.29,1216,4.29,1217,4.663,1218,4.663,1219,5.739,1220,5.739,1221,4.29,1222,5.739,1223,4.29,1224,4.29,1225,4.29,1226,4.29,1227,3.367,1228,4.29,1229,1.746,1230,4.29,1231,4.29,1232,4.29,1233,6.466,1234,4.29,1235,5.739,1236,4.29,1237,3.367]],["title/components/DocumentFieldDetailComponent.html",[98,0.179,138,0.813]],["body/components/DocumentFieldDetailComponent.html",[3,0.107,4,0.071,5,0.112,6,0.239,7,0.124,21,1.076,22,0.422,23,0.277,24,0.251,26,0.101,27,0.382,28,0.816,29,0.983,30,0.462,32,0.298,34,0.714,35,0.014,36,0.55,39,0.376,40,0.347,49,0.696,50,0.409,51,0.08,52,0.193,61,0.427,75,2.127,80,0.778,88,0.004,89,0.008,90,0.008,94,0.797,95,0.373,96,0.797,98,0.225,99,0.573,100,0.971,101,0.66,102,0.66,104,0.615,105,1.665,106,0.842,107,0.66,108,2.358,109,0.971,110,0.593,111,1.006,112,0.971,113,0.573,114,1.362,115,0.66,116,0.66,117,0.593,118,0.66,119,0.573,120,0.66,121,0.573,122,0.66,123,0.66,124,1.393,125,1.095,126,0.734,127,1.466,128,0.573,129,0.66,130,0.552,131,0.7,132,0.573,133,0.66,134,0.573,135,0.66,136,0.573,137,0.66,138,1.42,139,1.362,140,0.552,141,0.637,142,1.225,143,0.66,144,0.593,145,0.66,146,1.393,147,1.182,148,0.552,149,0.66,150,0.552,151,0.593,152,0.66,153,0.573,154,0.677,155,0.573,156,0.533,157,0.66,158,0.573,159,0.66,160,0.573,161,0.66,162,0.573,163,0.573,164,1.006,165,0.573,166,0.812,167,0.66,168,0.573,169,0.66,170,0.573,171,0.937,172,0.66,173,0.573,174,0.673,175,0.533,176,1.006,177,1.344,178,0.573,179,1.006,180,0.573,181,1.393,182,1.095,183,0.573,184,0.573,185,0.66,186,0.573,187,0.615,188,0.637,189,0.552,190,0.637,191,0.66,214,0.937,228,0.684,232,2.339,233,0.669,235,1.881,239,0.854,246,0.579,248,1.68,255,1.251,258,1.06,259,1.06,260,0.878,262,1.251,267,0.978,274,1.44,280,4.389,281,3.24,282,1.553,288,3.24,289,3.523,291,1.466,293,2.358,294,4.321,295,2.358,296,2.127,297,1.701,300,2.53,313,0.409,315,1.701,332,1.371,338,2.53,342,1.954,344,2.977,345,3.24,348,4.389,392,3.925,395,2.798,434,2.127,453,0.816,470,2.358,474,1.371,529,3.24,531,2.358,532,2.358,541,1.251,604,2.31,621,4.389,657,1.149,666,3.24,705,2.591,746,1.701,792,1.816,793,1.602,801,0.816,943,1.198,1013,1.816,1037,1.816,1064,1.954,1082,3.606,1238,6.992,1239,1.816,1240,2.977,1241,2.977,1242,5.001,1243,5.001,1244,4.352,1245,3.593,1246,3.593,1247,4.128,1248,3.593,1249,5.592,1250,5.592,1251,4.128,1252,5.592,1253,5.592,1254,5.592,1255,5.592,1256,5.592,1257,5.592,1258,3.593,1259,4.128,1260,3.593,1261,3.24,1262,2.45,1263,2.709,1264,4.867,1265,4.128,1266,3.593,1267,2.358,1268,2.709,1269,2.127,1270,2.358,1271,3.593,1272,2.709,1273,3.593,1274,4.867,1275,2.709,1276,4.128,1277,2.709,1278,3.593,1279,2.358,1280,2.709,1281,2.709,1282,2.709,1283,4.128,1284,2.709,1285,2.709,1286,2.709,1287,2.709,1288,2.709,1289,2.709,1290,4.352,1291,2.709,1292,2.709,1293,4.128,1294,2.591,1295,4.128,1296,4.128,1297,5.592,1298,4.128,1299,4.128,1300,4.128,1301,2.709,1302,4.128,1303,2.709,1304,3.593,1305,2.358,1306,2.657,1307,4.128,1308,2.127,1309,4.128,1310,2.709,1311,2.709,1312,2.709,1313,1.44,1314,1.816,1315,2.709,1316,2.709,1317,2.709,1318,2.709,1319,6.594,1320,2.709,1321,3.593,1322,2.358,1323,2.709,1324,2.709,1325,2.709,1326,4.352,1327,2.709,1328,2.358,1329,2.358,1330,2.709,1331,2.709,1332,2.358,1333,2.709,1334,2.358,1335,2.709,1336,2.709,1337,2.709,1338,2.127,1339,2.358,1340,2.358,1341,2.358,1342,2.358,1343,4.724,1344,5.001,1345,5.519,1346,3.24,1347,4.032,1348,4.128,1349,2.709,1350,2.709,1351,4.128,1352,4.128,1353,4.128,1354,2.709,1355,2.591,1356,2.709,1357,2.709,1358,2.709,1359,2.358,1360,1.816,1361,3.593,1362,5.001,1363,2.127,1364,2.358,1365,2.709,1366,5.592,1367,4.128,1368,2.709,1369,5.001,1370,2.358,1371,2.709,1372,2.709,1373,4.572,1374,2.709,1375,2.358,1376,2.358,1377,1.816,1378,2.127,1379,2.709,1380,4.867,1381,4.352,1382,2.709,1383,2.709,1384,2.709,1385,2.709,1386,2.709,1387,2.709,1388,2.709,1389,1.44,1390,1.816,1391,1.701,1392,1.816,1393,2.709,1394,5.001,1395,2.709,1396,2.977,1397,3.593,1398,2.766,1399,2.766,1400,5.238,1401,4.128,1402,5.238,1403,2.709,1404,3.351,1405,1.816,1406,3.351,1407,4.128,1408,4.249,1409,2.709,1410,3.593,1411,4.128,1412,2.709,1413,4.128,1414,2.709,1415,2.709,1416,2.709,1417,1.816,1418,2.766,1419,5.592,1420,2.709,1421,2.709,1422,2.709,1423,2.709,1424,2.709,1425,3.593,1426,2.766,1427,2.552,1428,2.709,1429,1.954,1430,1.816,1431,1.816,1432,2.709,1433,2.709,1434,2.709,1435,2.709,1436,2.709,1437,2.358,1438,2.709,1439,2.709,1440,2.591,1441,5.592]],["title/classes/DocumentInitializationModel.html",[52,0.186,889,2.505]],["body/classes/DocumentInitializationModel.html",[3,0.09,4,0.09,5,0.077,6,0.231,7,0.119,10,2.445,21,0.941,22,0.43,23,0.353,24,0.32,25,2.493,26,0.129,27,0.533,28,0.564,29,1.134,32,0.287,35,0.014,36,0.612,39,0.411,40,0.443,49,0.964,51,0.171,52,0.294,61,0.329,70,2.17,71,1.934,80,0.786,88,0.006,89,0.008,90,0.006,95,0.383,125,0.757,154,0.336,182,0.757,204,1.528,216,2.923,218,2.682,228,1.247,233,0.434,237,3.562,239,0.96,246,0.584,253,2.713,257,1.933,261,5.141,262,1.596,267,1.072,273,1.669,313,1.15,319,2.17,324,1.309,332,2.918,352,2.317,393,2.713,397,2.713,420,2.713,634,3.102,635,2.012,636,2.923,641,3.621,645,1.749,646,1.669,647,2.493,648,3.865,649,2.493,650,2.493,653,2.493,658,2.493,668,2.044,671,2.044,681,2.713,683,2.713,685,2.713,687,2.713,688,2.713,697,3.879,698,3.564,699,1.206,700,2.713,701,2.713,702,2.493,703,2.713,709,2.713,710,2.713,711,2.493,734,2.317,740,0.872,743,2.918,784,1.12,801,1.489,817,4.159,818,0.904,819,2.713,820,3.009,821,3.009,822,3.009,823,3.009,824,3.009,825,3.009,826,3.009,827,3.009,828,3.009,829,3.009,830,3.009,831,3.009,832,3.009,833,3.009,834,3.009,835,3.009,836,3.009,837,3.009,838,3.009,839,3.009,840,3.009,842,0.872,851,3.009,867,3.009,868,3.312,869,3.009,870,2.17,871,3.312,872,2.765,873,4.095,874,3.411,875,2.713,876,2.713,877,2.923,878,2.713,879,3.009,880,3.009,881,3.009,882,2.17,883,3.009,884,3.009,885,3.009,886,3.009,887,3.009,888,3.009,889,3.951,890,2.918,891,4.527,892,4.527,893,4.527,894,4.527,895,5.478,896,2.073,897,3.009,898,3.009,899,3.009,900,3.009,901,3.009,902,3.009,903,3.009,904,3.009,905,4.301,906,1.669,907,2.317,908,2.713,909,3.009,910,2.713,911,2.713,912,3.009,913,2.317,914,2.713,915,2.713,916,3.009,917,3.009,918,3.009,919,3.009,920,3.009,921,3.009,922,3.009,923,3.009,924,3.009,925,3.009,926,1.596,927,3.009,928,3.009,929,3.009,930,2.317,931,3.009,932,2.317,933,3.009,934,3.009,935,3.009,936,3.009,937,3.009,938,2.713,939,3.009,940,3.009,941,4.301,942,3.009,943,1.528,944,3.009,945,5.478,946,3.009,947,3.009,948,2.713,949,3.009,950,2.713,951,3.009,952,3.009,953,3.009,954,2.713,955,3.009,956,3.009,957,3.009,958,5.478,959,3.009,960,5.795,961,3.009,962,3.009,963,3.009,964,3.009,965,3.009,966,3.009,967,4.301,968,3.009,969,3.009,970,3.009,971,3.009,972,4.301,973,3.009,974,3.009,975,3.009,976,3.009,977,3.009,978,3.009,979,6.027,980,5.02,981,2.493,982,4.301,983,2.17,984,3.009,985,4.527,986,3.009,987,5.02,988,4.301,989,3.009,990,3.009,991,3.009,992,4.301,993,3.009,994,3.009,995,3.009,996,3.009,997,3.009,998,4.301,999,4.301,1000,3.009,1001,4.538,1002,4.301,1003,4.301,1004,3.009,1005,3.009,1006,2.044,1007,2.17,1008,2.493,1009,2.713,1010,3.009,1011,2.765,1012,3.879,1013,4.778,1014,3.009,1015,3.009,1016,1.749,1017,3.009,1018,2.493,1019,1.596,1020,1.934,1021,3.009,1022,3.009,1023,3.009,1024,3.009,1025,3.009,1026,5.02,1027,5.02,1028,3.009,1029,3.009,1030,3.009,1031,3.009,1032,3.564,1033,3.009,1034,3.009,1035,2.713,1036,3.009,1037,2.317,1038,3.009,1039,3.009,1040,3.009,1041,3.009,1442,3.457,1443,3.457,1444,3.457,1445,3.457,1446,3.457,1447,3.457,1448,3.457,1449,3.457,1450,3.457,1451,3.457,1452,3.457,1453,3.457]],["title/components/EmptyModalBodyComponent.html",[98,0.179,140,0.813]],["body/components/EmptyModalBodyComponent.html",[3,0.107,4,0.145,5,0.092,6,0.188,7,0.112,20,1.991,21,0.912,22,0.336,26,0.153,28,1.158,29,0.811,30,0.517,32,0.208,34,0.517,35,0.014,36,0.306,39,0.376,40,0.528,48,1.385,49,0.778,50,0.622,51,0.188,52,0.296,53,1.599,61,0.362,76,2.086,80,0.647,88,0.007,89,0.009,90,0.007,95,0.273,98,0.319,99,0.871,100,1.314,101,1.004,102,1.004,104,0.936,105,1.715,106,1.139,107,1.004,109,1.314,110,0.903,111,1.361,112,1.314,113,0.871,114,1.655,115,1.004,116,1.004,117,0.903,118,1.004,119,0.871,120,1.004,121,0.871,122,1.004,123,1.004,124,0.871,125,0.903,126,0.668,127,1.73,128,0.871,129,1.004,130,0.84,131,0.947,132,0.871,133,1.004,134,0.871,135,1.004,136,0.871,137,1.004,138,0.84,139,1.655,140,1.447,141,1.49,142,1.691,143,1.004,144,0.903,145,1.004,146,0.871,147,0.871,148,0.84,149,1.004,150,0.84,151,0.903,152,1.004,153,0.871,154,0.751,155,0.871,156,0.811,157,1.004,158,0.871,159,1.004,160,0.871,161,1.004,162,0.871,163,0.871,164,1.361,165,0.871,166,0.811,167,1.004,168,0.871,169,1.004,170,0.871,171,1.268,172,1.004,173,0.871,174,1.034,175,1.246,176,1.361,177,1.139,178,0.871,179,1.361,180,0.871,181,0.871,182,0.903,183,0.871,184,0.871,185,1.004,186,0.871,187,0.936,188,0.969,189,0.84,190,0.969,191,1.004,213,3.01,214,0.936,223,3.01,225,3.01,233,0.642,235,2.556,239,0.833,246,0.642,260,1.336,267,1.017,289,2.086,291,1.855,313,0.956,376,2.969,384,1.903,385,2.438,394,2.763,398,2.307,402,3.304,417,3.367,447,3.801,448,2.763,449,2.827,530,2.438,657,1.748,720,2.969,740,1.599,743,2.086,784,1.336,788,3.304,1019,1.903,1229,1.678,1306,2.969,1313,2.191,1454,3.748,1455,2.588,1456,4.029,1457,4.123,1458,3.588,1459,4.552,1460,4.974,1461,4.385,1462,2.969,1463,3.236,1464,2.191,1465,2.763,1466,2.763,1467,3.236,1468,3.236,1469,3.748,1470,3.236,1471,3.236,1472,2.086,1473,2.763,1474,2.763,1475,3.236,1476,3.744,1477,2.763,1478,2.763,1479,2.763,1480,2.763,1481,3.236,1482,3.236,1483,3.236,1484,3.236,1485,3.236,1486,4.974,1487,4.385,1488,3.236,1489,3.236,1490,3.236,1491,3.236,1492,3.236,1493,4.385,1494,4.247,1495,3.236,1496,3.236,1497,3.236,1498,4.385,1499,3.236,1500,4.974,1501,4.974,1502,3.236,1503,3.236,1504,3.236,1505,3.236,1506,3.236,1507,4.385,1508,3.236,1509,4.385,1510,3.236,1511,4.385,1512,3.236,1513,3.236,1514,3.236,1515,3.236,1516,3.236,1517,3.236,1518,3.236,1519,2.763,1520,3.744,1521,2.763,1522,3.236,1523,3.236,1524,2.763,1525,3.236,1526,3.236,1527,4.385,1528,4.385,1529,3.236,1530,3.236,1531,3.236,1532,3.236,1533,3.236,1534,2.763,1535,2.973,1536,3.236,1537,2.763]],["title/classes/EnumValue.html",[52,0.186,1538,3.132]],["body/classes/EnumValue.html",[3,0.103,4,0.103,5,0.089,6,0.184,7,0.095,21,0.646,22,0.44,24,0.366,26,0.147,27,0.502,28,0.646,32,0.202,35,0.014,36,0.608,39,0.288,51,0.161,52,0.254,61,0.4,80,0.816,88,0.007,89,0.009,90,0.007,95,0.304,126,0.732,166,0.778,204,1.75,216,2.341,218,1.489,228,0.999,233,0.477,237,2.403,239,0.959,246,0.721,257,1.548,262,1.828,263,4.846,267,1.082,272,1.489,283,3.445,313,1.091,324,1.068,332,2.003,352,2.653,359,3.642,453,1.09,461,2.786,488,4.193,818,1.035,842,1.566,896,2.103,906,1.911,913,3.642,932,2.653,1011,2.215,1174,2.427,1361,3.445,1377,2.653,1391,2.485,1400,3.445,1402,3.445,1538,4.871,1539,3.445,1540,6.206,1541,3.959,1542,3.959,1543,3.959,1544,3.959,1545,3.445,1546,2.653,1547,3.445,1548,3.445,1549,3.445,1550,3.959,1551,3.445,1552,3.959,1553,2.341,1554,3.959,1555,3.959,1556,3.959,1557,3.959,1558,3.959,1559,3.107,1560,3.107,1561,3.959,1562,3.445,1563,3.445,1564,5.401,1565,4.73,1566,3.959,1567,3.959,1568,3.959,1569,5.242,1570,3.107,1571,3.959,1572,3.959,1573,3.445,1574,6.565,1575,3.959,1576,3.959,1577,5.435,1578,3.959,1579,3.959,1580,5.435,1581,1.489,1582,3.959,1583,3.959,1584,2.855,1585,3.959,1586,3.445,1587,3.959,1588,2.341,1589,3.959,1590,3.959,1591,3.959,1592,3.107,1593,3.959,1594,5.341,1595,3.959,1596,3.959,1597,3.959,1598,3.959,1599,5.435,1600,3.959,1601,4.73,1602,3.297,1603,3.959,1604,6.206,1605,5.435,1606,6.446,1607,3.959,1608,3.959,1609,3.959,1610,3.445,1611,4.265,1612,5.435,1613,4.265,1614,4.73,1615,3.959,1616,5.435,1617,3.959,1618,5.401,1619,3.959,1620,3.959,1621,5.435,1622,3.959,1623,3.959,1624,3.959,1625,1.548,1626,3.445,1627,3.107,1628,3.959,1629,3.959,1630,3.959,1631,3.959,1632,3.959,1633,3.959,1634,3.959,1635,3.959,1636,3.959,1637,3.959,1638,6.206,1639,3.445,1640,3.445,1641,3.959,1642,3.959,1643,3.959,1644,3.959,1645,5.435,1646,3.445,1647,3.959,1648,3.445,1649,3.959,1650,5.435,1651,3.445,1652,3.959,1653,4.73]],["title/injectables/ErrorHandlerService.html",[0,1.842,635,1.624]],["body/injectables/ErrorHandlerService.html",[0,2.075,2,1.904,3,0.079,4,0.079,5,0.068,6,0.235,7,0.121,10,2.805,20,3.195,22,0.398,23,0.547,24,0.664,26,0.113,27,0.415,28,1.281,30,0.415,32,0.296,34,0.713,35,0.014,36,0.562,39,0.335,40,0.389,48,1.019,49,0.422,50,0.458,51,0.09,52,0.142,61,0.401,70,2.821,80,0.459,88,0.005,89,0.007,90,0.005,94,0.789,95,0.363,96,0.789,126,0.641,142,1.54,154,0.76,166,0.883,174,1.258,232,1.404,233,0.681,239,0.551,246,0.266,267,0.405,272,2.646,313,0.458,317,3.011,324,1.052,417,2.844,453,0.495,485,3.011,491,1.612,602,4.688,635,2.693,666,4.959,699,2.064,705,4.154,720,4.445,725,3.966,740,2.063,742,3.911,743,2.708,744,2.974,765,2.657,783,2.204,784,0.983,788,4.05,795,1.235,800,2.381,801,2.119,890,2.994,896,1.556,1016,2.273,1112,1.973,1113,1.098,1187,3.911,1322,3.911,1332,5.151,1427,3.098,1431,3.011,1462,4.065,1469,1.794,1613,3.527,1654,6.9,1655,2.64,1656,3.911,1657,6.271,1658,2.616,1659,3.017,1660,5.151,1661,6.617,1662,4.494,1663,3.911,1664,3.911,1665,4.494,1666,2.014,1667,2.708,1668,5.499,1669,5.918,1670,4.494,1671,4.494,1672,4.494,1673,5.179,1674,4.494,1675,4.494,1676,5.918,1677,4.494,1678,6.617,1679,4.494,1680,4.494,1681,5.353,1682,5.353,1683,5.353,1684,4.494,1685,5.918,1686,5.918,1687,5.918,1688,5.918,1689,4.494,1690,4.494,1691,4.494,1692,4.494,1693,4.494,1694,4.494,1695,5.151,1696,5.918,1697,3.034,1698,3.034,1699,1.905,1700,5.353,1701,3.034,1702,4.494,1703,3.034,1704,4.494,1705,3.034,1706,3.034,1707,4.494,1708,3.034,1709,4.556,1710,3.034,1711,3.527,1712,4.494,1713,4.494,1714,3.527,1715,4.645,1716,4.494,1717,4.494,1718,4.494,1719,2.576,1720,3.034,1721,2.787,1722,4.494,1723,5.52,1724,3.034,1725,4.494,1726,3.034,1727,4.234,1728,4.494,1729,3.034,1730,4.494,1731,6.319,1732,3.034,1733,5.151,1734,4.494,1735,4.494,1736,4.494,1737,3.034,1738,4.494,1739,3.034,1740,4.494,1741,4.494,1742,4.494,1743,3.034,1744,3.527,1745,6.617,1746,4.494,1747,3.011,1748,3.011,1749,3.034,1750,3.034,1751,3.034,1752,3.034,1753,5.167,1754,3.034,1755,4.494,1756,5.151,1757,3.011,1758,3.034,1759,3.034,1760,4.494,1761,4.494,1762,3.034,1763,3.034,1764,2.64,1765,3.034,1766,3.034,1767,3.034,1768,3.527,1769,1.794,1770,5.918,1771,2.64,1772,6.617,1773,3.034,1774,2.64,1775,3.034,1776,6.617,1777,3.034,1778,5.918,1779,3.034,1780,3.034,1781,3.034,1782,6.319,1783,4.494,1784,3.86,1785,3.911,1786,3.034,1787,2.64,1788,4.494,1789,3.034,1790,3.034,1791,3.034,1792,4.494,1793,3.034,1794,1.341,1795,3.034,1796,3.034,1797,3.034]],["title/classes/ErrorInfo.html",[52,0.186,740,1.007]],["body/classes/ErrorInfo.html",[3,0.187,4,0.14,5,0.121,6,0.245,7,0.126,22,0.285,23,0.55,24,0.498,26,0.2,27,0.614,28,1.283,32,0.306,35,0.014,36,0.557,39,0.285,51,0.223,52,0.252,61,0.307,88,0.009,89,0.011,90,0.009,94,0.604,95,0.405,96,0.604,126,0.678,154,0.751,174,1.083,228,1.358,453,1.083,602,4.446,705,4.168,740,1.676,758,2.703,783,2.511,818,1.407,842,1.358,896,2.094,1112,2.021,1174,2.817,1261,5.212,1472,3.643,1627,4.225,1657,5.212,1659,2.931,1666,2.709,1719,2.709,1721,2.931,1723,5.652,1798,4.225,1799,7.201,1800,7.201,1801,6.64,1802,7.201,1803,6.64,1804,6.64,1805,5.383,1806,5.383,1807,2.817,1808,5.383,1809,5.383,1810,5.383,1811,5.383,1812,5.383,1813,5.383,1814,5.383,1815,5.383,1816,3.379,1817,3.643,1818,5.779,1819,5.779,1820,5.779,1821,5.212,1822,6.64,1823,5.383,1824,5.383]],["title/modules/ExampleAppModule.html",[192,2.505,1825,2.877]],["body/modules/ExampleAppModule.html",[3,0.145,4,0.145,5,0.152,7,0.085,35,0.014,39,0.429,40,0.712,46,3.492,51,0.165,52,0.26,69,2.46,88,0.009,89,0.011,90,0.009,99,1.75,106,1.134,110,1.219,117,1.813,192,3.492,194,3.492,197,5.318,198,4.842,200,4.367,201,4.842,208,4.886,209,4.012,210,5.269,464,3.728,473,4.012,474,2.815,476,4.367,477,4.367,478,4.367,479,4.012,480,5.269,481,4.012,482,5.378,483,4.012,484,4.886,485,3.728,486,4.012,487,4.012,488,3.492,489,4.012,490,4.012,491,2.956,492,3.492,493,4.012,494,4.012,495,4.012,496,4.012,497,4.886,498,4.012,499,4.012,500,4.012,501,4.012,502,4.012,503,4.012,504,3.492,505,3.728,506,4.012,507,4.012,508,4.012,509,4.012,633,4.886,652,4.367,769,3.29,1019,2.568,1042,5.224,1043,3.492,1044,5.269,1051,5.318,1052,4.012,1059,4.842,1064,4.012,1066,5.897,1069,5.897,1071,4.842,1314,3.728,1825,5.97,1826,4.842,1827,4.842,1828,5.564,1829,4.842,1830,5.564,1831,5.564,1832,6.776,1833,5.564,1834,5.564,1835,5.564,1836,5.564]],["title/classes/Examples.html",[52,0.186,654,2.877]],["body/classes/Examples.html",[3,0.16,4,0.16,5,0.138,6,0.214,7,0.11,23,0.629,24,0.569,26,0.229,27,0.666,32,0.229,35,0.014,51,0.183,52,0.288,88,0.01,89,0.012,90,0.01,654,5.191,668,4.257,702,5.501,818,1.61,896,2.218,1837,5.358,1838,6.265,1839,7.199,1840,7.199,1841,7.199,1842,5.191,1843,7.199,1844,8.114,1845,8.114,1846,6.265,1847,8.114,1848,7.199,1849,5.65,1850,6.157]],["title/classes/ExpressionNode.html",[52,0.186,1851,2.505]],["body/classes/ExpressionNode.html",[3,0.065,4,0.139,5,0.056,6,0.19,7,0.098,22,0.416,23,0.255,24,0.231,26,0.263,27,0.358,28,1.08,29,0.762,30,0.358,32,0.228,34,0.439,35,0.014,36,0.589,39,0.307,48,0.838,49,0.661,50,0.377,51,0.172,52,0.271,61,0.142,80,0.818,88,0.004,89,0.006,90,0.004,94,0.28,95,0.262,96,0.28,126,0.596,148,0.509,154,0.564,228,0.63,233,0.34,246,0.562,272,1.458,273,1.205,291,0.944,313,0.377,320,1.458,324,1.391,338,1.96,384,1.789,439,2.291,449,1.262,453,1.295,461,1.787,472,2.065,491,1.326,541,2.956,558,4.934,563,1.205,589,1.396,592,1.475,635,1.016,645,1.262,646,1.205,657,1.643,660,1.475,667,2.432,699,2.467,740,0.63,744,1.577,783,0.87,785,1.326,795,1.577,801,2.132,818,0.652,842,1.753,890,1.262,896,1.686,943,1.103,1016,1.96,1112,1.627,1167,3.583,1174,0.976,1188,1.672,1193,2.596,1229,2.179,1262,1.016,1427,1.058,1440,1.566,1462,2.059,1553,3.166,1581,0.939,1588,2.291,1625,2.094,1658,1.103,1659,1.577,1666,0.939,1667,1.96,1699,1.643,1719,0.939,1721,1.577,1747,1.672,1748,3.183,1769,3.166,1794,1.713,1807,2.4,1816,1.566,1851,4.266,1852,1.672,1853,4.424,1854,3.183,1855,3.861,1856,4.617,1857,4.617,1858,4.617,1859,2.794,1860,3.874,1861,3.861,1862,2.495,1863,2.495,1864,2.495,1865,2.495,1866,1.799,1867,4.019,1868,5.363,1869,5.664,1870,1.799,1871,5.08,1872,2.596,1873,2.794,1874,4.399,1875,1.799,1876,1.799,1877,1.799,1878,1.799,1879,4.889,1880,1.799,1881,1.799,1882,1.475,1883,1.799,1884,1.799,1885,1.799,1886,1.799,1887,1.475,1888,1.799,1889,1.799,1890,1.799,1891,1.799,1892,1.799,1893,1.799,1894,1.799,1895,1.799,1896,1.799,1897,2.794,1898,1.799,1899,2.794,1900,1.799,1901,3.425,1902,1.799,1903,1.799,1904,1.799,1905,4.901,1906,4.18,1907,4.18,1908,3.861,1909,1.799,1910,1.799,1911,3.914,1912,1.799,1913,2.794,1914,3.861,1915,1.799,1916,5.411,1917,5.009,1918,4.424,1919,5.08,1920,3.425,1921,1.799,1922,1.799,1923,4.18,1924,1.799,1925,3.425,1926,2.794,1927,1.799,1928,4.772,1929,4.18,1930,5.249,1931,1.799,1932,3.425,1933,1.799,1934,2.794,1935,2.794,1936,3.861,1937,2.794,1938,2.432,1939,2.794,1940,4.18,1941,2.596,1942,2.596,1943,1.799,1944,1.799,1945,1.799,1946,4.772,1947,2.794,1948,4.617,1949,1.799,1950,3.425,1951,4.622,1952,2.794,1953,4.424,1954,1.799,1955,5.18,1956,3.861,1957,2.794,1958,2.794,1959,2.432,1960,3.425,1961,2.794,1962,2.794,1963,1.799,1964,2.794,1965,2.794,1966,3.861,1967,2.794,1968,2.794,1969,3.183,1970,1.799,1971,1.799,1972,1.799,1973,1.799,1974,1.799,1975,3.425,1976,1.799,1977,4.18,1978,1.799,1979,4.424,1980,3.166,1981,4.424,1982,3.425,1983,2.193,1984,3.183,1985,3.425,1986,1.799,1987,5.18,1988,5.18,1989,4.424,1990,3.425,1991,1.799,1992,4.617,1993,1.799,1994,4.424,1995,1.799,1996,1.799,1997,3.425,1998,1.799,1999,3.425,2000,3.425,2001,3.425,2002,1.799,2003,1.799,2004,2.794,2005,2.794,2006,2.794,2007,1.799,2008,1.799,2009,5.249,2010,2.794,2011,1.799,2012,1.799,2013,1.799,2014,1.799,2015,1.96,2016,1.475,2017,2.168,2018,1.672,2019,1.799,2020,1.799,2021,1.799,2022,1.799,2023,1.799,2024,1.566,2025,1.799,2026,2.059,2027,1.799,2028,1.799,2029,1.799,2030,2.794,2031,1.672,2032,1.799,2033,1.799,2034,2.794,2035,3.861,2036,3.861,2037,1.799,2038,1.799,2039,3.425,2040,1.799,2041,2.794,2042,2.794,2043,1.799,2044,4.772,2045,2.794,2046,1.799,2047,1.799,2048,1.799,2049,2.794,2050,1.799,2051,2.794,2052,1.799,2053,1.799,2054,1.326,2055,1.799,2056,1.799,2057,1.672,2058,1.262,2059,1.799,2060,1.799,2061,1.799,2062,1.799,2063,1.799,2064,2.794,2065,1.799,2066,2.794]],["title/classes/ExpressionUpdatedEvent.html",[52,0.186,1867,2.505]],["body/classes/ExpressionUpdatedEvent.html",[3,0.066,4,0.14,5,0.056,6,0.16,7,0.082,22,0.417,26,0.264,27,0.361,28,1.084,29,0.768,32,0.178,35,0.014,36,0.581,39,0.309,48,0.848,49,0.666,50,0.381,51,0.173,52,0.272,61,0.144,80,0.818,88,0.004,89,0.006,90,0.004,94,0.283,95,0.285,96,0.654,126,0.598,148,0.514,154,0.567,228,0.637,233,0.343,246,0.564,272,1.47,273,1.218,291,0.952,313,0.381,320,1.47,324,1.395,338,1.977,384,2.845,439,2.311,449,1.276,453,1.292,461,1.799,472,2.067,491,1.34,541,2.967,558,4.946,563,1.218,589,1.411,592,1.492,635,1.027,645,1.276,646,1.218,657,1.656,660,1.492,667,2.452,699,2.474,740,0.637,744,1.59,783,0.88,785,1.34,795,1.59,801,2.138,818,0.659,842,1.818,890,1.276,896,1.391,943,1.115,1016,1.977,1112,1.635,1167,3.597,1174,0.987,1188,1.69,1193,2.618,1229,2.192,1262,1.027,1427,1.069,1440,1.583,1462,2.076,1553,2.311,1581,0.949,1588,2.311,1625,2.107,1658,1.115,1659,1.59,1666,0.949,1667,1.977,1699,1.656,1709,2.817,1719,0.949,1721,1.59,1747,1.69,1748,3.205,1769,3.185,1794,1.727,1807,2.411,1816,1.583,1851,4.453,1852,1.69,1853,2.817,1854,1.69,1855,1.819,1856,3.448,1857,3.883,1858,3.883,1859,1.819,1861,3.448,1866,1.819,1867,4.169,1868,5.503,1869,5.748,1870,1.819,1871,5.085,1872,2.618,1873,2.817,1874,4.408,1875,1.819,1876,1.819,1877,1.819,1878,1.819,1879,4.896,1880,1.819,1881,1.819,1882,1.492,1883,1.819,1884,1.819,1885,1.819,1886,1.819,1887,1.492,1888,1.819,1889,1.819,1890,1.819,1891,1.819,1892,1.819,1893,1.819,1894,1.819,1895,1.819,1896,1.819,1897,2.817,1898,1.819,1899,2.817,1900,1.819,1901,3.448,1902,1.819,1903,1.819,1904,1.819,1905,4.917,1906,4.201,1907,4.201,1908,3.883,1909,1.819,1910,1.819,1911,3.928,1912,1.819,1913,2.817,1914,3.883,1915,1.819,1916,5.422,1917,5.024,1918,4.444,1919,5.085,1920,3.448,1921,1.819,1922,1.819,1923,4.201,1924,1.819,1925,3.448,1926,2.817,1927,1.819,1928,4.79,1929,4.201,1930,5.262,1931,1.819,1932,3.448,1933,1.819,1934,2.817,1935,2.817,1936,3.883,1937,2.817,1938,2.452,1939,2.817,1940,4.201,1941,2.618,1942,2.618,1943,1.819,1944,1.819,1945,1.819,1946,4.79,1947,2.817,1948,4.635,1949,1.819,1950,3.448,1951,4.633,1952,2.817,1953,4.444,1954,1.819,1955,5.194,1956,3.883,1957,2.817,1958,2.817,1959,2.452,1960,3.448,1961,2.817,1962,2.817,1963,1.819,1964,2.817,1965,2.817,1966,3.883,1967,2.817,1968,2.817,1969,3.205,1970,1.819,1971,1.819,1972,1.819,1973,1.819,1974,1.819,1975,3.448,1976,1.819,1977,4.201,1978,1.819,1979,4.444,1980,3.185,1981,4.444,1982,3.448,1983,2.208,1984,3.205,1985,3.448,1986,1.819,1987,5.194,1988,5.194,1989,4.444,1990,3.448,1991,1.819,1992,4.635,1993,1.819,1994,4.444,1995,1.819,1996,1.819,1997,3.448,1998,1.819,1999,3.448,2000,3.448,2001,3.448,2002,1.819,2003,1.819,2004,2.817,2005,2.817,2006,2.817,2007,1.819,2008,1.819,2009,5.262,2010,2.817,2011,1.819,2012,1.819,2013,1.819,2014,1.819,2015,1.977,2016,1.492,2017,2.186,2018,1.69,2019,1.819,2020,1.819,2021,1.819,2022,1.819,2023,1.819,2024,1.583,2025,1.819,2026,2.076,2027,1.819,2028,1.819,2029,1.819,2030,2.817,2031,1.69,2032,1.819,2033,1.819,2034,2.817,2035,3.883,2036,3.883,2037,1.819,2038,1.819,2039,3.448,2040,1.819,2041,2.817,2042,2.817,2043,1.819,2044,4.79,2045,2.817,2046,1.819,2047,1.819,2048,1.819,2049,2.817,2050,1.819,2051,2.817,2052,1.819,2053,1.819,2054,1.34,2055,1.819,2056,1.819,2057,1.69,2058,1.276,2059,1.819,2060,1.819,2061,1.819,2062,1.819,2063,1.819,2064,2.817,2065,1.819,2066,2.817,2067,2.522,2068,2.522,2069,3.907]],["title/classes/FieldAction.html",[52,0.186,2070,1.692]],["body/classes/FieldAction.html",[3,0.127,4,0.127,5,0.11,6,0.232,7,0.119,22,0.398,23,0.704,24,0.722,26,0.182,27,0.578,30,0.578,32,0.286,34,0.637,35,0.014,36,0.616,51,0.223,52,0.339,57,2.892,61,0.459,69,2.162,80,0.767,88,0.008,89,0.01,90,0.008,94,0.773,95,0.382,96,0.773,126,0.429,233,0.605,239,0.6,246,0.693,291,1.191,320,1.84,324,1.428,355,2.736,356,2.361,360,2.736,361,2.736,362,2.598,363,2.736,364,2.736,453,1.225,472,1.234,629,2.892,818,1.278,896,2.004,943,2.162,1174,2.445,1229,2.545,1389,3.988,1546,4.189,1602,2.598,1711,4.907,1817,2.474,2070,3.255,2071,4.898,2072,3.069,2073,4.969,2074,6.252,2075,6.252,2076,4.615,2077,4.89,2078,4.079,2079,4.89,2080,4.89,2081,4.508,2082,4.89,2083,4.508,2084,4.89,2085,5.237,2086,4.508,2087,4.89,2088,3.856,2089,3.697,2090,3.322,2091,3.697,2092,3.697,2093,3.697,2094,4.189,2095,3.526,2096,3.069,2097,3.069,2098,2.892,2099,3.526,2100,2.736,2101,3.526,2102,3.526,2103,3.526,2104,3.924,2105,2.892,2106,3.526,2107,4.508,2108,3.526,2109,3.526,2110,4.508,2111,3.526,2112,3.697,2113,3.526,2114,3.322,2115,3.526,2116,3.526,2117,3.526,2118,4.508,2119,3.526,2120,3.526,2121,4.508,2122,3.526,2123,3.526,2124,3.526,2125,3.526]],["title/classes/FieldActionArgument.html",[52,0.186,2088,2.233]],["body/classes/FieldActionArgument.html",[3,0.132,4,0.132,5,0.114,6,0.225,7,0.116,22,0.402,23,0.775,24,0.727,26,0.189,27,0.591,32,0.274,35,0.014,36,0.611,51,0.225,52,0.344,57,2.998,61,0.449,69,2.242,80,0.775,88,0.008,89,0.011,90,0.008,95,0.385,126,0.445,233,0.561,239,0.622,246,0.71,291,1.235,320,1.908,324,1.492,355,2.837,356,2.448,360,2.837,361,2.837,362,2.694,363,2.837,364,2.837,453,1.238,472,1.28,629,2.998,818,1.326,896,1.474,943,2.242,1174,2.741,1229,2.604,1389,3.399,1546,4.932,1602,2.694,1817,2.565,2070,3.12,2071,4.763,2072,3.183,2073,3.656,2076,4.487,2078,3.724,2081,3.656,2083,3.656,2085,4.613,2086,3.656,2088,4.118,2089,4.352,2090,3.399,2091,3.783,2092,3.783,2093,3.783,2094,4.287,2095,3.656,2096,3.183,2097,3.183,2098,2.998,2099,3.656,2100,2.837,2101,3.656,2102,3.656,2103,3.656,2104,4.015,2105,2.998,2106,3.656,2107,4.613,2108,3.656,2109,3.656,2110,4.613,2111,3.656,2112,3.783,2113,3.656,2114,3.399,2115,3.656,2116,3.656,2117,3.656,2118,4.613,2119,3.656,2120,3.656,2121,4.613,2122,3.656,2123,3.656,2124,3.656,2125,3.656,2126,5.07,2127,5.07,2128,5.07,2129,5.07]],["title/classes/FieldActionArgumentValue.html",[52,0.186,2076,2.36]],["body/classes/FieldActionArgumentValue.html",[3,0.135,4,0.135,5,0.116,6,0.21,7,0.108,22,0.405,23,0.723,24,0.731,26,0.193,27,0.6,32,0.241,35,0.014,36,0.611,51,0.227,52,0.347,57,3.066,61,0.451,69,2.292,80,0.78,88,0.009,89,0.011,90,0.009,95,0.347,126,0.455,233,0.569,239,0.636,246,0.708,291,1.263,320,1.95,324,1.459,355,2.901,356,2.503,360,2.901,361,2.901,362,2.755,363,2.901,364,2.901,453,1.246,472,1.308,629,3.066,818,1.355,896,1.507,943,2.292,1174,2.537,1229,2.64,1389,3.447,1546,4.347,1602,2.755,1817,2.623,2070,3.145,2071,4.444,2072,3.254,2073,3.738,2076,4.608,2078,3.762,2081,3.738,2083,3.738,2085,4.678,2086,3.738,2088,3.962,2089,3.836,2090,3.447,2091,3.836,2092,3.836,2093,3.836,2094,4.347,2095,3.738,2096,3.254,2097,3.254,2098,3.066,2099,3.738,2100,2.901,2101,3.738,2102,3.738,2103,3.738,2104,4.072,2105,3.066,2106,3.738,2107,4.678,2108,3.738,2109,3.738,2110,4.678,2111,3.738,2112,3.836,2113,3.738,2114,3.447,2115,3.738,2116,3.738,2117,3.738,2118,4.678,2119,3.738,2120,3.738,2121,4.678,2122,3.738,2123,3.738,2124,3.738,2125,3.738,2130,5.184,2131,5.184]],["title/classes/FieldActionDefinition.html",[52,0.186,2078,2.12]],["body/classes/FieldActionDefinition.html",[3,0.124,4,0.124,5,0.107,6,0.24,7,0.123,22,0.395,23,0.779,24,0.727,26,0.177,27,0.569,30,0.569,32,0.298,34,0.569,35,0.014,36,0.613,51,0.221,52,0.336,57,4.027,61,0.457,69,2.108,80,0.761,88,0.008,89,0.01,90,0.008,94,0.69,95,0.392,96,0.69,126,0.418,156,0.937,233,0.598,239,0.754,246,0.681,291,1.161,320,1.794,324,1.464,355,2.668,356,2.302,360,2.668,361,2.668,362,2.533,363,2.668,364,2.668,453,1.215,472,1.203,629,4.027,818,1.246,896,1.386,943,2.108,1174,2.663,1229,2.928,1389,3.268,1546,4.821,1602,2.533,1817,2.412,2070,3.233,2071,5.062,2072,2.993,2073,3.438,2076,4.404,2078,3.822,2081,3.438,2083,3.438,2085,4.435,2086,3.438,2088,4.167,2089,3.637,2090,3.822,2091,3.637,2092,3.637,2093,3.637,2094,4.122,2095,4.91,2096,4.274,2097,4.274,2098,3.637,2099,4.435,2100,2.668,2101,3.438,2102,3.438,2103,3.438,2104,3.861,2105,2.819,2106,3.438,2107,4.435,2108,3.438,2109,3.438,2110,4.435,2111,4.435,2112,3.637,2113,3.438,2114,3.268,2115,3.438,2116,3.438,2117,3.438,2118,4.435,2119,3.438,2120,3.438,2121,4.435,2122,3.438,2123,3.438,2124,3.438,2125,3.438,2132,6.151,2133,6.151,2134,4.768,2135,4.768,2136,4.768,2137,4.768,2138,4.768,2139,4.768,2140,4.768,2141,4.768,2142,4.768,2143,4.768]],["title/injectables/FieldActionService.html",[0,1.842,874,2.36]],["body/injectables/FieldActionService.html",[0,1.864,2,1.652,3,0.068,4,0.183,5,0.059,6,0.23,7,0.118,10,1.712,14,3.542,18,1.898,22,0.434,23,0.607,24,0.549,26,0.098,27,0.58,28,1.322,29,0.966,30,0.373,32,0.286,34,0.681,35,0.014,36,0.573,37,1.864,39,0.373,40,0.337,46,1.652,47,2.905,48,0.884,49,0.684,50,0.397,51,0.078,52,0.123,55,1.898,61,0.415,80,0.801,85,3.972,88,0.004,89,0.01,90,0.004,94,0.791,95,0.39,96,0.791,106,0.537,126,0.717,154,0.772,156,1.448,174,0.801,218,2.801,228,1.019,233,0.354,239,0.948,246,0.619,258,1.03,267,0.984,270,3.169,313,1.16,320,2.072,324,1.233,355,1.473,356,1.271,360,1.473,361,1.473,362,1.399,363,1.473,364,1.473,366,3.981,453,0.659,472,1.24,492,2.534,538,2.911,563,1.949,635,2.242,646,1.271,658,2.911,671,3.257,699,1.408,734,2.706,740,0.664,783,0.918,784,0.853,796,2.534,801,2.192,842,0.664,868,3.691,870,1.652,871,3.691,874,2.388,926,1.864,1011,3.325,1020,3.325,1112,2.127,1113,0.953,1144,3.542,1160,3.169,1176,2.911,1217,1.898,1218,1.898,1227,4.323,1262,2.811,1338,4.323,1389,1.399,1390,3.691,1456,1.898,1581,1.848,1625,2.846,1659,1.643,1666,0.99,1709,1.898,1715,3.169,1719,0.99,1721,1.643,1768,2.066,1794,1.785,1874,3.257,1983,1.215,2015,2.043,2058,2.043,2078,4.266,2088,2.259,2090,4.057,2098,3.513,2100,2.259,2144,6.729,2145,2.291,2146,4.168,2147,4.912,2148,4.038,2149,4.038,2150,4.038,2151,5.508,2152,5.508,2153,4.038,2154,5.508,2155,4.038,2156,4.038,2157,4.038,2158,4.038,2159,4.038,2160,5.508,2161,2.632,2162,4.794,2163,2.632,2164,4.038,2165,2.632,2166,4.038,2167,5.71,2168,5.508,2169,4.038,2170,4.038,2171,2.706,2172,4.038,2173,6.527,2174,2.632,2175,4.628,2176,5.508,2177,5.508,2178,4.038,2179,6.735,2180,2.632,2181,3.169,2182,2.632,2183,2.632,2184,4.038,2185,2.632,2186,5.508,2187,2.632,2188,4.038,2189,2.632,2190,3.855,2191,4.038,2192,2.632,2193,3.169,2194,4.038,2195,2.632,2196,3.855,2197,2.706,2198,4.038,2199,6.735,2200,2.632,2201,5.171,2202,5.508,2203,6.735,2204,4.038,2205,2.632,2206,5.508,2207,2.632,2208,3.514,2209,3.514,2210,4.038,2211,2.632,2212,2.632,2213,4.275,2214,4.794,2215,4.794,2216,4.794,2217,3.514,2218,2.632,2219,2.632,2220,1.652,2221,1.332,2222,4.038,2223,4.038,2224,2.632,2225,2.632,2226,4.038,2227,4.038,2228,4.038,2229,5.508,2230,4.038,2231,2.632,2232,4.038,2233,3.514,2234,4.038,2235,2.632,2236,4.038,2237,5.508,2238,2.632,2239,2.911,2240,3.514,2241,3.169,2242,2.911,2243,2.632,2244,2.632,2245,2.632,2246,2.632,2247,2.632,2248,2.291,2249,2.291,2250,2.632,2251,4.038,2252,2.632,2253,2.632,2254,3.169,2255,2.066,2256,2.632,2257,2.066,2258,2.066,2259,1.898,2260,2.632,2261,2.632,2262,2.632,2263,3.169,2264,4.912,2265,2.632,2266,2.632,2267,4.038,2268,2.632,2269,2.632,2270,2.632,2271,2.291,2272,2.632,2273,2.632,2274,2.632,2275,2.291,2276,2.291,2277,2.291,2278,2.291,2279,2.632,2280,2.291,2281,2.291,2282,2.632,2283,4.038,2284,2.632,2285,4.038,2286,2.632,2287,4.038,2288,3.514,2289,2.291,2290,2.632,2291,2.632,2292,2.632,2293,2.632,2294,2.632,2295,2.632,2296,2.632,2297,2.632,2298,2.632,2299,2.632,2300,2.632,2301,2.632,2302,2.632,2303,2.632,2304,2.632,2305,2.632,2306,4.038,2307,2.632,2308,2.632,2309,2.632,2310,2.632,2311,2.632,2312,2.632,2313,2.632,2314,2.632,2315,2.632,2316,2.632,2317,2.632,2318,4.038,2319,2.632,2320,2.632,2321,4.038,2322,2.632,2323,6.27,2324,4.912,2325,2.632,2326,2.632,2327,2.632,2328,2.632,2329,4.038,2330,2.632,2331,2.632,2332,3.292,2333,2.632,2334,2.291,2335,4.038,2336,4.912,2337,4.038,2338,5.508,2339,6.27,2340,2.632,2341,2.632,2342,4.038,2343,2.632,2344,2.632,2345,2.632,2346,2.632,2347,2.632,2348,2.632,2349,2.632]],["title/components/FieldEditComponent.html",[98,0.179,146,0.843]],["body/components/FieldEditComponent.html",[3,0.081,4,0.081,5,0.07,6,0.241,7,0.125,21,0.748,22,0.318,23,0.762,24,0.705,26,0.116,27,0.424,28,0.887,29,1.069,30,0.424,32,0.301,34,0.68,35,0.014,36,0.553,37,2.117,39,0.366,40,0.399,47,3.217,48,1.048,49,0.757,50,0.471,51,0.093,52,0.214,53,1.157,61,0.435,66,2.249,80,0.751,88,0.005,89,0.008,90,0.005,94,0.775,95,0.392,96,0.775,98,0.245,99,0.659,100,1.078,101,0.76,102,0.76,104,0.708,105,1.683,106,0.935,107,0.76,109,1.078,110,0.683,111,1.117,112,1.625,113,0.659,114,1.461,115,0.76,116,0.76,117,0.683,118,0.76,119,0.659,120,0.76,121,0.659,122,0.76,123,0.76,124,0.659,125,0.683,126,0.727,127,1.557,128,0.659,129,0.76,130,0.636,131,0.777,132,0.659,133,0.76,134,0.659,135,0.76,136,0.659,137,0.76,138,0.636,139,1.461,140,0.636,141,0.733,142,1.314,143,0.76,144,0.683,145,0.76,146,1.267,147,0.659,148,0.636,149,0.76,150,0.636,151,0.683,152,0.76,153,0.659,154,0.704,155,0.659,156,0.613,157,0.76,158,0.659,159,0.76,160,0.659,161,0.76,162,0.659,163,0.659,164,1.117,165,0.659,166,0.613,167,0.76,168,0.659,169,0.76,170,0.659,171,1.041,172,0.76,173,0.659,174,0.748,175,0.613,176,1.117,177,0.636,178,0.659,179,1.792,180,0.659,181,0.659,182,0.683,183,0.659,184,0.659,185,0.76,186,0.659,187,0.708,188,0.733,189,0.636,190,0.733,191,0.76,213,2.306,214,1.041,216,4.086,217,3.414,218,2.046,223,2.543,224,2.437,225,2.543,226,3.991,228,1.373,232,1.997,233,0.662,235,2.404,236,3.307,237,2.955,238,5.562,239,0.847,242,3.991,246,0.669,248,1.269,255,1.44,256,1.657,257,1.22,258,1.22,259,1.22,260,1.01,262,1.44,263,2.09,266,1.957,267,0.923,269,3.922,299,1.957,300,2.32,301,3.073,304,4.269,305,4.707,306,3.6,310,2.448,313,0.905,321,3.6,323,2.448,324,1.179,325,2.448,326,2.249,327,3.991,328,2.448,329,2.448,330,2.448,331,2.249,332,1.578,333,4.269,338,2.32,339,2.249,342,2.249,344,2.249,346,4.269,347,2.448,355,3.356,356,2.896,357,3.6,358,3.6,359,3.073,360,2.566,361,2.566,362,2.437,363,3.356,364,3.356,365,3.6,366,3.073,367,3.6,368,3.6,369,3.6,370,3.6,371,5.564,461,1.173,472,0.787,557,2.448,592,1.844,604,1.745,667,1.957,758,1.269,1037,3.073,1359,3.991,1377,3.645,1390,2.09,1545,4.734,1560,4.269,1581,1.173,1594,4.325,1601,6.296,1618,6.169,1653,3.991,1699,1.944,1727,3.645,1983,2.117,2181,2.448,2350,7.058,2351,4.734,2352,5.44,2353,5.44,2354,5.44,2355,3.922,2356,5.44,2357,4.586,2358,4.586,2359,4.586,2360,4.586,2361,3.991,2362,4.586,2363,3.119,2364,4.586,2365,3.119,2366,3.119,2367,3.119,2368,4.586,2369,3.119,2370,3.119,2371,3.119,2372,4.586,2373,3.119,2374,3.119,2375,3.119,2376,3.119,2377,3.119,2378,3.119,2379,3.119,2380,4.449,2381,3.119,2382,2.714,2383,2.714,2384,3.119,2385,3.119,2386,5.998,2387,3.119,2388,5.44,2389,5.998,2390,3.119,2391,5.44,2392,4.734,2393,5.998,2394,5.998,2395,3.119,2396,5.998,2397,3.991,2398,3.119,2399,2.714,2400,3.119,2401,4.586,2402,3.119,2403,3.119,2404,3.119,2405,2.249,2406,2.714,2407,5.44,2408,2.249,2409,2.448,2410,3.119,2411,3.119,2412,3.119,2413,5.44,2414,5.44,2415,4.586,2416,2.714,2417,3.119,2418,2.714,2419,4.586,2420,3.119,2421,3.119,2422,3.119,2423,3.119,2424,3.119,2425,3.119,2426,3.119,2427,4.586,2428,3.119,2429,2.714,2430,2.714,2431,2.714,2432,2.714,2433,4.586,2434,2.714,2435,2.714]],["title/classes/FieldNode.html",[52,0.186,1879,2.505]],["body/classes/FieldNode.html",[3,0.063,4,0.138,5,0.055,6,0.18,7,0.093,22,0.415,23,0.388,24,0.351,26,0.269,27,0.351,28,1.071,29,0.747,30,0.351,32,0.257,34,0.53,35,0.014,36,0.589,39,0.304,48,0.818,49,0.651,50,0.367,51,0.17,52,0.268,61,0.139,80,0.815,88,0.004,89,0.006,90,0.004,94,0.273,95,0.297,96,0.525,126,0.643,148,0.496,154,0.591,228,0.614,233,0.334,246,0.557,272,1.43,273,1.176,291,0.926,313,0.367,320,1.43,324,1.382,338,1.923,384,2.44,439,2.248,449,1.232,453,1.291,461,1.759,472,2.061,491,1.294,541,2.929,558,4.909,563,1.176,589,1.362,592,1.44,635,0.991,645,1.232,646,1.176,657,1.612,660,1.44,667,2.386,699,2.451,740,0.614,744,1.547,783,0.849,785,1.294,795,1.547,801,2.118,818,0.637,842,1.802,890,1.232,896,1.845,943,1.076,1016,1.923,1112,1.781,1167,3.551,1174,0.952,1188,1.632,1193,2.547,1229,2.151,1262,0.991,1427,1.032,1440,1.528,1462,2.02,1553,3.125,1581,0.916,1588,2.248,1625,2.067,1658,1.076,1659,1.547,1666,0.916,1667,1.923,1699,1.612,1709,2.741,1719,0.916,1721,1.547,1747,1.632,1748,3.134,1769,3.125,1794,1.681,1807,2.639,1816,1.528,1851,4.598,1852,1.632,1853,4.38,1854,3.134,1855,3.81,1856,4.575,1857,4.975,1858,4.975,1859,1.756,1861,4.133,1866,1.756,1867,3.983,1868,5.337,1869,5.646,1870,1.756,1871,5.068,1872,3.134,1873,3.81,1874,4.417,1875,1.756,1876,1.756,1877,1.756,1878,1.756,1879,4.894,1880,1.756,1881,1.756,1882,1.44,1883,1.756,1884,1.756,1885,1.756,1886,1.756,1887,1.44,1888,1.756,1889,1.756,1890,1.756,1891,1.756,1892,1.756,1893,1.756,1894,1.756,1895,1.756,1896,1.756,1897,2.741,1898,1.756,1899,2.741,1900,1.756,1901,3.372,1902,1.756,1903,1.756,1904,1.756,1905,4.865,1906,4.133,1907,4.133,1908,3.81,1909,1.756,1910,1.756,1911,3.882,1912,1.756,1913,2.741,1914,3.81,1915,1.756,1916,5.386,1917,4.975,1918,4.38,1919,5.068,1920,3.372,1921,1.756,1922,1.756,1923,4.133,1924,1.756,1925,3.372,1926,2.741,1927,1.756,1928,4.734,1929,4.133,1930,5.22,1931,1.756,1932,3.372,1933,1.756,1934,2.741,1935,2.741,1936,3.81,1937,2.741,1938,2.386,1939,2.741,1940,4.133,1941,2.547,1942,2.547,1943,1.756,1944,1.756,1945,1.756,1946,4.734,1947,2.741,1948,4.575,1949,1.756,1950,3.372,1951,4.598,1952,2.741,1953,4.38,1954,1.756,1955,5.15,1956,3.81,1957,2.741,1958,2.741,1959,2.386,1960,3.372,1961,2.741,1962,2.741,1963,1.756,1964,2.741,1965,2.741,1966,3.81,1967,2.741,1968,2.741,1969,3.134,1970,1.756,1971,1.756,1972,1.756,1973,1.756,1974,1.756,1975,3.372,1976,1.756,1977,4.133,1978,1.756,1979,4.38,1980,3.125,1981,4.38,1982,3.372,1983,2.159,1984,3.134,1985,3.372,1986,1.756,1987,5.15,1988,5.15,1989,4.38,1990,3.372,1991,1.756,1992,4.575,1993,1.756,1994,4.38,1995,1.756,1996,1.756,1997,3.372,1998,1.756,1999,3.372,2000,3.372,2001,3.372,2002,1.756,2003,1.756,2004,2.741,2005,2.741,2006,2.741,2007,1.756,2008,1.756,2009,5.22,2010,2.741,2011,1.756,2012,1.756,2013,1.756,2014,1.756,2015,1.923,2016,1.44,2017,2.127,2018,1.632,2019,1.756,2020,1.756,2021,1.756,2022,1.756,2023,1.756,2024,1.528,2025,1.756,2026,2.02,2027,1.756,2028,1.756,2029,1.756,2030,2.741,2031,1.632,2032,1.756,2033,1.756,2034,2.741,2035,3.81,2036,3.81,2037,1.756,2038,1.756,2039,3.372,2040,1.756,2041,2.741,2042,2.741,2043,1.756,2044,4.734,2045,2.741,2046,1.756,2047,1.756,2048,1.756,2049,2.741,2050,1.756,2051,2.741,2052,1.756,2053,1.756,2054,1.294,2055,1.756,2056,1.756,2057,1.632,2058,1.232,2059,1.756,2060,1.756,2061,1.756,2062,1.756,2063,1.756,2064,2.741,2065,1.756,2066,2.741,2436,2.435,2437,3.802,2438,2.435,2439,4.988,2440,2.119,2441,2.119,2442,2.435,2443,2.435,2444,2.119,2445,2.119,2446,2.119]],["title/injectables/FileManagementService.html",[0,1.842,877,2.36]],["body/injectables/FileManagementService.html",[0,1.611,2,1.371,3,0.057,4,0.091,5,0.173,6,0.224,7,0.121,10,1.479,14,3.142,18,3.142,21,0.356,22,0.4,23,0.223,24,0.403,26,0.081,27,0.323,28,1.223,29,1.069,30,0.323,32,0.288,34,0.661,35,0.014,36,0.588,39,0.374,40,0.28,46,1.371,47,4.515,48,0.734,49,0.693,50,0.33,51,0.181,52,0.163,55,4.558,61,0.372,65,5.27,76,1.765,77,1.464,80,0.791,85,4.921,88,0.006,89,0.006,90,0.004,94,0.709,95,0.388,96,0.709,106,1.328,131,0.37,154,0.664,166,0.686,174,1.269,228,0.551,232,0.682,233,0.382,239,0.428,246,0.555,262,1.009,267,0.292,272,1.313,273,1.055,313,0.657,315,2.19,324,1.501,356,1.685,453,0.946,459,3.921,541,1.009,563,3.052,636,1.292,648,1.464,657,0.926,668,1.292,671,4.462,699,1.897,711,2.516,740,1.536,745,3.792,746,1.371,758,2.91,769,1.292,776,2.739,783,0.762,784,0.708,792,2.338,795,2.828,801,1.499,842,1.1,868,3.334,870,1.371,871,2.92,873,1.292,877,2.064,906,3.529,907,2.338,926,3.67,930,2.338,943,1.926,983,1.371,1013,1.464,1018,2.516,1019,2.297,1020,1.223,1138,0.966,1144,4.699,1169,2.739,1171,2.338,1173,4.733,1174,2.669,1176,4.181,1179,3.037,1192,1.901,1194,1.901,1203,2.739,1206,1.901,1209,1.901,1212,3.42,1217,1.575,1218,3.142,1227,3.905,1261,2.739,1469,2.942,1472,3.198,1656,3.037,1659,2.828,1660,3.037,1663,3.037,1666,0.822,1714,3.905,1719,0.822,1721,2.828,1727,3.334,1744,2.739,1764,3.037,1768,1.715,1769,3.738,1794,2.563,1842,3.142,2015,3.515,2057,4.573,2058,3.515,2114,2.315,2162,4.33,2213,5.046,2214,5.297,2215,6.14,2216,6.296,2217,4.733,2239,5.009,2240,5.672,2241,5.245,2242,5.668,2248,3.037,2249,3.037,2254,5.356,2255,5.115,2257,3.42,2258,3.42,2259,3.587,2271,5.501,2275,4.33,2276,4.733,2277,3.792,2278,5.501,2280,5.939,2281,3.792,2288,6.296,2289,5.046,2399,3.037,2447,6.567,2448,1.901,2449,3.49,2450,3.037,2451,3.037,2452,4.357,2453,5.438,2454,3.49,2455,3.49,2456,4.975,2457,4.975,2458,4.975,2459,4.975,2460,4.975,2461,3.49,2462,3.49,2463,4.975,2464,4.975,2465,3.49,2466,3.49,2467,2.185,2468,3.49,2469,3.49,2470,2.185,2471,5.939,2472,6.794,2473,5.297,2474,5.155,2475,4.33,2476,4.733,2477,5.438,2478,6.086,2479,5.297,2480,5.501,2481,3.49,2482,2.185,2483,2.185,2484,2.185,2485,6.517,2486,5.816,2487,5.297,2488,6.517,2489,2.185,2490,2.185,2491,2.185,2492,3.49,2493,2.185,2494,3.49,2495,2.185,2496,3.792,2497,3.49,2498,3.49,2499,3.49,2500,3.49,2501,3.49,2502,3.49,2503,3.037,2504,3.49,2505,2.185,2506,3.905,2507,3.49,2508,2.185,2509,3.49,2510,2.185,2511,3.037,2512,4.33,2513,3.037,2514,4.357,2515,4.357,2516,3.49,2517,2.185,2518,3.49,2519,3.49,2520,3.49,2521,3.49,2522,3.49,2523,2.185,2524,2.185,2525,2.185,2526,2.185,2527,2.185,2528,2.185,2529,2.185,2530,2.185,2531,2.185,2532,1.105,2533,1.105,2534,2.185,2535,2.185,2536,3.49,2537,2.185,2538,3.49,2539,2.185,2540,4.33,2541,6.086,2542,6.086,2543,2.739,2544,2.185,2545,2.185,2546,1.715,2547,2.185,2548,2.185,2549,4.357,2550,6.086,2551,6.086,2552,4.357,2553,5.438,2554,5.798,2555,3.49,2556,4.357,2557,4.975,2558,4.357,2559,3.037,2560,3.49,2561,3.49,2562,2.185,2563,3.49,2564,4.975,2565,4.975,2566,4.975,2567,4.357,2568,3.49,2569,2.185,2570,3.49,2571,2.185,2572,3.49,2573,3.49,2574,2.185,2575,2.185,2576,2.185,2577,3.49,2578,5.438,2579,4.357,2580,4.975,2581,2.185,2582,2.185,2583,4.33,2584,2.185,2585,2.185,2586,6.086,2587,6.086,2588,4.357,2589,2.185,2590,2.185,2591,2.185,2592,1.901,2593,2.185,2594,2.185,2595,2.185,2596,2.185,2597,4.357,2598,2.185,2599,2.185,2600,1.901,2601,2.185,2602,2.185,2603,2.185,2604,2.185,2605,2.185,2606,2.185,2607,3.49,2608,2.185,2609,2.185,2610,1.901,2611,2.185,2612,2.185,2613,2.185,2614,2.185,2615,3.792,2616,4.357,2617,4.975,2618,3.49,2619,3.49,2620,1.901,2621,2.185,2622,2.185,2623,2.185,2624,2.185,2625,2.185,2626,1.901,2627,1.901,2628,2.185,2629,2.185,2630,2.185,2631,2.185,2632,2.185,2633,2.185,2634,3.49,2635,2.185,2636,3.49,2637,2.185,2638,2.185,2639,2.185,2640,2.185,2641,2.185,2642,2.185,2643,2.185,2644,1.901]],["title/directives/FocusDirective.html",[113,0.843,189,0.813]],["body/directives/FocusDirective.html",[3,0.155,4,0.155,5,0.134,6,0.236,7,0.121,23,0.609,24,0.551,26,0.222,27,0.653,28,1.228,30,0.653,32,0.29,34,0.551,35,0.014,39,0.316,40,0.764,51,0.177,52,0.279,53,1.783,61,0.34,88,0.01,89,0.012,90,0.01,94,0.669,95,0.346,96,0.669,104,1.354,105,1.44,113,1.493,188,1.402,189,1.44,190,1.868,228,1.505,233,0.523,235,3.031,239,0.867,267,0.944,282,2.658,291,1.721,313,0.9,657,2.528,2645,5.19,2646,7.528,2647,7.528,2648,7.783,2649,5.964,2650,7.065,2651,5.964,2652,5.964,2653,5.964,2654,7.065,2655,5.964]],["title/classes/LineModel.html",[52,0.186,2656,3.132]],["body/classes/LineModel.html",[3,0.095,4,0.095,5,0.082,6,0.22,7,0.113,10,1.547,22,0.42,23,0.373,24,0.475,26,0.136,27,0.475,28,1.181,29,0.717,32,0.27,35,0.014,36,0.597,39,0.392,40,0.467,48,1.226,49,0.715,50,0.551,51,0.153,52,0.24,53,0.921,69,1.613,80,0.828,88,0.006,89,0.01,90,0.006,95,0.354,98,0.231,105,0.744,112,1.207,126,0.7,136,1.363,138,1.047,147,0.771,148,1.532,174,0.595,214,0.828,218,1.932,232,1.604,233,0.682,235,1.932,239,0.729,246,0.688,255,1.684,258,1.427,267,0.967,272,1.932,289,1.846,291,1.655,313,0.551,324,0.717,375,2.37,376,2.728,384,1.684,385,2.157,386,3.175,387,3.175,398,2.041,399,1.684,402,3.036,417,2.728,435,4.469,436,2.863,438,2.863,447,2.873,448,2.445,449,1.846,461,1.372,472,0.921,530,2.157,589,2.041,604,2.041,621,2.863,623,3.175,657,1.547,668,2.157,758,1.485,765,2.157,792,2.445,793,3.513,801,1.547,818,0.954,842,1.499,926,2.37,1006,2.157,1007,2.29,1016,1.846,1064,2.631,1112,1.907,1113,1.321,1262,2.09,1264,4.469,1266,4.469,1290,5.612,1314,2.445,1363,2.863,1377,3.981,1378,4.03,1380,4.469,1381,3.175,1390,2.445,1392,2.445,1476,2.445,1581,2.426,1625,1.427,1938,2.29,1980,2.157,2332,4.853,2644,3.175,2656,5.899,2657,6.435,2658,3.175,2659,6.448,2660,7.617,2661,7.394,2662,6.448,2663,6.796,2664,7.774,2665,3.648,2666,3.648,2667,5.941,2668,5.941,2669,5.941,2670,3.648,2671,3.648,2672,3.648,2673,3.648,2674,3.648,2675,3.648,2676,3.175,2677,3.648,2678,3.648,2679,3.648,2680,3.648,2681,3.648,2682,3.648,2683,3.648,2684,5.135,2685,3.648,2686,3.648,2687,3.648,2688,3.648,2689,3.648,2690,3.648,2691,3.648,2692,5.135,2693,3.648,2694,3.648,2695,3.648,2696,3.648,2697,3.648,2698,3.648,2699,3.648,2700,3.648,2701,3.648,2702,5.135,2703,3.648,2704,3.175,2705,3.648,2706,5.135,2707,3.648,2708,3.648,2709,3.648,2710,3.648,2711,5.135,2712,3.648,2713,5.941,2714,3.648,2715,3.648,2716,3.648,2717,3.648,2718,5.135,2719,3.648,2720,3.648,2721,3.648,2722,5.135,2723,3.648,2724,3.648,2725,5.941,2726,3.648,2727,6.448,2728,3.648,2729,3.648,2730,3.648,2731,3.648,2732,3.648,2733,3.648,2734,3.648,2735,3.648,2736,3.648,2737,5.941,2738,3.648,2739,5.135,2740,3.648,2741,5.135,2742,3.648,2743,3.648,2744,5.941,2745,3.648,2746,3.648,2747,2.863,2748,4.663,2749,6.448,2750,4.724,2751,3.648,2752,3.648,2753,3.648,2754,5.135,2755,3.175,2756,3.175,2757,3.648,2758,3.648,2759,3.648,2760,3.648,2761,3.648,2762,3.648,2763,3.648,2764,6.796,2765,3.648,2766,5.941,2767,3.648,2768,2.863,2769,3.648,2770,3.648,2771,3.175,2772,3.648,2773,3.648,2774,5.135,2775,3.648,2776,3.648,2777,3.648,2778,6.448,2779,2.863,2780,2.863,2781,3.648,2782,3.648,2783,3.648,2784,5.135,2785,3.648,2786,3.648,2787,3.175,2788,3.648,2789,3.648,2790,3.648,2791,3.648,2792,5.941,2793,3.648,2794,5.135,2795,3.175,2796,5.941,2797,3.648,2798,3.175,2799,3.648,2800,3.648]],["title/classes/LookupTable.html",[52,0.186,2801,2.12]],["body/classes/LookupTable.html",[3,0.133,4,0.133,5,0.114,6,0.239,7,0.123,22,0.411,23,0.522,24,0.472,26,0.19,27,0.594,30,0.594,32,0.297,34,0.65,35,0.014,36,0.617,51,0.191,52,0.3,61,0.434,80,0.718,88,0.013,89,0.011,90,0.008,94,0.573,95,0.372,96,0.573,151,1.118,228,1.774,233,0.448,239,0.862,246,0.448,324,1.263,453,0.833,472,1.289,629,3.8,818,1.335,1602,3.414,2097,4.033,2543,5.792,2546,5.969,2801,3.414,2802,6.312,2803,4.008,2804,5.519,2805,5.519,2806,6.426,2807,6.422,2808,6.422,2809,6.426,2810,4.946,2811,5.107,2812,5.107,2813,5.107,2814,5.592,2815,6.422,2816,5.107,2817,6.618,2818,5.107,2819,5.107,2820,4.633,2821,4.444,2822,5.592,2823,5.592,2824,5.592,2825,5.592,2826,4.444,2827,4.444,2828,4.444,2829,4.444,2830,4.444,2831,4.444,2832,4.444,2833,4.444,2834,5.592,2835,5.592,2836,5.592,2837,6.119,2838,4.444,2839,2.465,2840,4.444,2841,4.444,2842,4.444,2843,6.119,2844,4.444,2845,4.444]],["title/components/LookupTableComponent.html",[98,0.179,150,0.813]],["body/components/LookupTableComponent.html",[3,0.11,4,0.11,5,0.095,6,0.23,7,0.124,21,0.926,22,0.301,26,0.157,27,0.525,29,0.83,30,0.525,32,0.285,34,0.634,35,0.014,36,0.531,39,0.399,40,0.541,49,0.955,50,0.637,51,0.169,52,0.3,53,1.433,61,0.392,80,0.814,88,0.007,89,0.009,90,0.007,94,0.474,95,0.361,96,0.474,98,0.289,99,0.892,100,1.335,101,1.029,102,1.029,104,0.958,105,1.716,106,1.157,107,1.029,109,1.335,110,0.925,111,1.383,112,1.335,113,0.892,114,1.671,115,1.029,116,1.029,117,0.925,118,1.029,119,0.892,120,1.029,121,0.892,122,1.029,123,1.029,124,0.892,125,0.925,126,0.694,127,1.744,128,0.892,129,1.029,130,0.861,131,0.962,132,0.892,133,1.029,134,0.892,135,1.029,136,0.892,137,1.029,138,0.861,139,1.671,140,0.861,141,0.993,142,1.503,143,1.029,144,0.925,145,1.029,146,0.892,147,0.892,148,0.861,149,1.029,150,1.398,151,1.615,152,1.029,153,0.892,154,0.798,155,0.892,156,0.83,157,1.029,158,0.892,159,1.029,160,0.892,161,1.029,162,0.892,163,0.892,164,1.383,165,0.892,166,0.83,167,1.029,168,0.892,169,1.029,170,0.892,171,1.289,172,1.029,173,0.892,174,0.926,175,0.83,176,1.383,177,0.861,178,0.892,179,1.383,180,0.892,181,0.892,182,0.925,183,0.892,184,0.892,185,1.029,186,0.892,187,0.958,188,0.993,189,0.861,190,0.993,191,1.029,213,2.72,214,1.289,223,2.908,224,3.017,225,2.908,233,0.602,235,2.413,239,0.518,246,0.498,248,1.719,258,1.652,259,1.652,260,1.368,267,0.564,271,3.408,276,3.157,313,0.637,324,1.116,474,2.136,740,1.066,754,5.035,784,1.368,1032,4.094,1102,5.594,1112,2.069,1113,1.529,1229,1.719,1262,2.311,1306,3.408,1313,2.244,1581,1.589,1666,1.589,1667,2.136,1719,1.589,1721,1.719,1794,1.867,1817,2.136,2017,2.363,2058,2.136,2332,2.83,2801,3.408,2810,4.306,2820,4.626,2839,3.559,2846,3.314,2847,4.942,2848,5.583,2849,5.97,2850,4.223,2851,4.942,2852,4.223,2853,4.223,2854,4.223,2855,5.316,2856,4.223,2857,4.223,2858,4.942,2859,4.223,2860,4.223,2861,2.83,2862,2.83,2863,3.675,2864,3.675,2865,3.675,2866,3.675,2867,3.675,2868,3.675,2869,3.675,2870,3.675,2871,4.942,2872,3.675,2873,3.314,2874,3.045,2875,3.675,2876,3.675,2877,3.675,2878,3.675,2879,3.675,2880,3.675,2881,3.675,2882,3.675,2883,3.675,2884,3.675,2885,3.675,2886,3.675,2887,3.675,2888,3.675,2889,3.675,2890,4.942,2891,3.675,2892,3.675,2893,3.675,2894,3.675,2895,3.675,2896,3.675,2897,3.675,2898,5.678,2899,5.678]],["title/classes/LookupTableData.html",[52,0.186,2855,2.877]],["body/classes/LookupTableData.html",[3,0.134,4,0.134,5,0.115,6,0.22,7,0.117,22,0.342,26,0.192,27,0.597,32,0.263,35,0.014,36,0.592,39,0.418,40,0.659,49,0.899,50,0.777,51,0.192,52,0.302,53,1.299,80,0.837,88,0.009,89,0.011,90,0.009,95,0.362,98,0.29,105,1.049,126,0.619,150,1.049,151,1.546,154,0.756,213,2.738,214,1.168,223,2.182,225,2.182,233,0.567,235,2.429,246,0.567,258,2.013,259,2.013,260,1.667,267,0.688,271,3.75,276,3.012,313,0.777,324,1.27,474,2.604,740,1.299,754,5.539,784,1.667,818,1.346,1032,4.656,1102,5.336,1112,1.98,1113,1.864,1229,2.095,1262,2.628,1306,3.431,1313,2.735,1581,1.936,1666,1.936,1667,2.604,1719,1.936,1721,2.095,1794,2.276,1817,2.604,2017,2.88,2058,2.604,2332,3.449,2801,3.431,2810,4.645,2820,5.088,2839,3.407,2846,4.04,2847,4.48,2848,4.48,2849,4.48,2851,4.48,2855,5.609,2858,4.48,2861,3.449,2862,3.449,2863,6.142,2864,6.142,2865,6.142,2866,4.48,2867,4.48,2868,4.48,2869,4.48,2870,4.48,2871,5.62,2872,4.48,2873,4.04,2874,3.711,2875,4.48,2876,4.48,2877,4.48,2878,4.48,2879,4.48,2880,4.48,2881,4.48,2882,4.48,2883,4.48,2884,4.48,2885,4.48,2886,4.48,2887,4.48,2888,4.48,2889,4.48,2890,5.62,2891,4.48,2892,4.48,2893,4.48,2894,4.48,2895,4.48,2896,4.48,2897,4.48,2900,5.147,2901,5.147,2902,5.147]],["title/classes/LookupTableEntry.html",[52,0.186,2810,2.505]],["body/classes/LookupTableEntry.html",[3,0.135,4,0.135,5,0.116,6,0.235,7,0.121,22,0.413,23,0.663,24,0.6,26,0.193,27,0.6,30,0.6,32,0.29,34,0.6,35,0.014,36,0.617,51,0.193,52,0.303,61,0.404,80,0.724,88,0.013,89,0.011,90,0.009,94,0.583,95,0.374,96,0.583,151,1.137,228,1.31,233,0.57,239,0.637,246,0.456,324,1.277,453,0.847,472,1.31,629,4.39,818,1.358,1602,3.45,2097,4.66,2474,3.744,2543,5.097,2546,5.998,2801,2.759,2802,6.207,2803,4.076,2804,4.076,2805,4.076,2807,4.519,2808,4.519,2810,4.893,2814,4.519,2815,5.651,2817,6.785,2820,5.353,2821,6.461,2822,5.651,2823,5.651,2824,5.651,2825,5.651,2826,5.651,2827,4.519,2828,4.519,2829,4.519,2830,4.519,2831,4.519,2832,4.519,2833,4.519,2834,5.651,2835,5.651,2836,5.651,2837,6.166,2838,4.519,2839,2.507,2840,4.519,2841,4.519,2842,4.519,2843,6.166,2844,4.519,2845,4.519,2903,6.494,2904,5.193,2905,5.193,2906,5.193,2907,5.193,2908,5.193,2909,5.193]],["title/classes/LookupTableUtil.html",[52,0.186,2910,3.132]],["body/classes/LookupTableUtil.html",[3,0.131,4,0.131,5,0.112,6,0.218,7,0.112,10,2.128,22,0.37,26,0.187,28,1.138,30,0.588,32,0.26,34,0.645,35,0.014,36,0.561,39,0.401,51,0.149,52,0.235,61,0.398,80,0.811,88,0.008,89,0.011,90,0.008,94,0.783,95,0.341,96,0.783,126,0.664,233,0.612,246,0.689,257,1.963,258,1.963,324,0.987,472,1.604,818,1.312,872,4.592,896,2.363,1111,3.939,1112,2.203,1113,1.817,1140,3.619,1378,5.755,1581,1.888,1959,3.99,2750,5.372,2771,6.382,2801,4.02,2839,3.79,2861,3.363,2862,3.363,2910,4.989,2911,6.382,2912,5.532,2913,6.356,2914,6.356,2915,6.356,2916,6.356,2917,5.755,2918,5.019,2919,6.356,2920,5.019,2921,6.356,2922,5.019,2923,2.968,2924,3.363,2925,5.019,2926,3.939,2927,7.566,2928,5.019,2929,5.019,2930,7.333,2931,7.566,2932,6.976,2933,6.356,2934,6.356,2935,5.019,2936,5.019,2937,5.019,2938,5.019,2939,6.356,2940,5.019,2941,5.019,2942,6.976,2943,6.976,2944,5.019,2945,5.019,2946,5.019,2947,6.356,2948,5.019]],["title/classes/MappedField.html",[52,0.186,1807,1.561]],["body/classes/MappedField.html",[3,0.09,4,0.15,5,0.077,6,0.216,7,0.113,21,0.563,22,0.442,23,0.504,24,0.456,26,0.215,27,0.456,29,0.679,30,0.456,32,0.271,34,0.582,35,0.014,36,0.59,37,1.593,39,0.367,49,0.687,50,0.521,51,0.171,52,0.269,61,0.359,80,0.845,88,0.01,89,0.008,90,0.006,94,0.554,95,0.326,96,0.554,126,0.731,131,0.837,154,0.673,156,0.679,187,0.783,204,1.526,218,2.866,228,0.871,233,0.552,239,0.988,246,0.709,257,1.35,267,0.952,272,1.857,274,1.834,313,1.004,320,1.857,324,1.308,338,1.746,384,1.593,453,1.255,461,2.866,472,1.679,538,3.56,699,2.193,744,1.405,758,2.009,785,1.834,801,2.086,818,0.902,842,1.454,896,1.676,926,2.66,1008,4.155,1011,1.931,1112,1.385,1138,1.526,1165,2.489,1343,2.709,1391,2.166,1392,2.313,1427,1.463,1553,2.041,1559,2.709,1569,3.875,1570,2.709,1581,1.857,1584,2.489,1588,2.041,1625,2.254,1658,1.526,1699,2.443,1807,3.266,1882,2.041,1919,2.166,1951,2.166,2024,2.166,2026,4,2070,3.021,2114,1.834,2146,3.408,2193,2.709,2196,4.523,2197,2.313,2221,1.746,2263,2.709,2532,1.746,2533,1.746,2747,2.709,2750,2.313,2768,2.709,2779,2.709,2780,2.709,2949,2.709,2950,5.016,2951,5.474,2952,4.296,2953,4.937,2954,3.452,2955,3.452,2956,4.798,2957,3.452,2958,3.452,2959,3.452,2960,3.875,2961,3.452,2962,4.296,2963,3.452,2964,2.709,2965,3.408,2966,3.004,2967,3.308,2968,3.004,2969,3.004,2970,3.004,2971,3.004,2972,3.004,2973,3.004,2974,3.004,2975,3.004,2976,3.004,2977,3.004,2978,3.56,2979,2.709,2980,3.875,2981,4.798,2982,2.709,2983,3.004,2984,3.004,2985,3.004,2986,3.004,2987,3.004,2988,3.004,2989,3.004,2990,2.709,2991,2.709,2992,3.004,2993,4.296,2994,5.016,2995,5.016,2996,3.004,2997,3.004,2998,3.004,2999,3.004,3000,3.004,3001,2.709,3002,3.004,3003,3.004,3004,2.709,3005,5.016,3006,3.004,3007,3.004,3008,3.004,3009,5.016,3010,4.296,3011,3.004,3012,5.016,3013,5.016,3014,3.004,3015,3.004,3016,3.004,3017,3.004,3018,2.489,3019,3.004,3020,3.004,3021,3.004,3022,3.004,3023,5.016,3024,3.004,3025,3.004,3026,3.004,3027,2.709,3028,2.709,3029,3.004,3030,4.296,3031,4.296,3032,3.004,3033,3.004,3034,3.004,3035,3.004,3036,3.004,3037,3.004,3038,3.004,3039,3.004,3040,4.296,3041,4.296,3042,3.875,3043,3.004,3044,3.004,3045,3.004,3046,4.296,3047,4.296,3048,2.709,3049,3.004,3050,3.004,3051,3.004,3052,3.004,3053,3.004,3054,3.004,3055,3.004,3056,2.709,3057,3.004,3058,3.004,3059,3.004,3060,3.004,3061,2.709,3062,3.004]],["title/classes/MappedFieldParsingData.html",[52,0.186,2956,2.877]],["body/classes/MappedFieldParsingData.html",[3,0.088,4,0.148,5,0.076,6,0.228,7,0.118,21,0.552,22,0.441,23,0.775,24,0.702,26,0.212,27,0.45,29,0.665,32,0.285,35,0.014,36,0.603,37,1.562,39,0.364,49,0.677,50,0.51,51,0.169,52,0.266,61,0.278,80,0.844,88,0.009,89,0.008,90,0.006,95,0.355,126,0.728,131,0.825,154,0.669,187,0.768,204,1.496,218,2.727,228,0.854,233,0.5,239,0.978,246,0.72,257,1.323,267,1.001,272,1.831,274,1.797,313,0.996,320,1.831,324,1.225,338,1.711,384,1.562,453,1.251,461,2.854,472,1.666,538,3.509,699,2.173,744,1.377,758,1.981,785,1.797,801,2.072,818,0.884,842,1.438,896,0.984,926,2.631,1008,4.109,1011,1.893,1112,1.365,1138,1.496,1165,2.439,1343,2.655,1391,2.123,1392,2.267,1427,1.434,1553,2,1559,4.473,1569,3.819,1570,2.655,1581,1.831,1584,2.439,1588,2,1625,2.229,1658,1.496,1699,2.416,1807,3.248,1882,2,1919,2.123,1951,2.123,2024,2.123,2026,3.923,2070,2.799,2114,1.797,2146,2,2193,2.655,2196,4.473,2197,2.267,2221,1.711,2263,2.655,2532,1.711,2533,1.711,2747,2.655,2750,2.267,2768,2.655,2779,2.655,2780,2.655,2949,2.655,2950,2.944,2951,2.944,2956,4.494,2960,2.655,2962,2.944,2964,2.655,2965,3.37,2966,2.944,2967,3.261,2968,4.96,2969,4.96,2970,4.96,2971,4.96,2972,4.96,2973,4.96,2974,4.96,2975,4.96,2976,4.96,2977,4.96,2978,3.509,2979,2.655,2980,3.819,2981,4.761,2982,2.655,2983,2.944,2984,2.944,2985,2.944,2986,2.944,2987,2.944,2988,2.944,2989,2.944,2990,2.655,2991,2.655,2992,2.944,2993,4.235,2994,4.96,2995,4.96,2996,2.944,2997,2.944,2998,2.944,2999,2.944,3000,2.944,3001,2.655,3002,2.944,3003,2.944,3004,2.655,3005,4.96,3006,2.944,3007,2.944,3008,2.944,3009,4.96,3010,4.235,3011,2.944,3012,4.96,3013,4.96,3014,2.944,3015,2.944,3016,2.944,3017,2.944,3018,2.439,3019,2.944,3020,2.944,3021,2.944,3022,2.944,3023,4.96,3024,2.944,3025,2.944,3026,2.944,3027,2.655,3028,2.655,3029,2.944,3030,4.235,3031,4.235,3032,2.944,3033,2.944,3034,2.944,3035,2.944,3036,2.944,3037,2.944,3038,2.944,3039,2.944,3040,4.235,3041,4.235,3042,3.819,3043,2.944,3044,2.944,3045,2.944,3046,4.235,3047,4.235,3048,2.655,3049,2.944,3050,2.944,3051,2.944,3052,2.944,3053,2.944,3054,2.944,3055,2.944,3056,2.655,3057,2.944,3058,2.944,3059,2.944,3060,2.944,3061,2.655,3062,2.944,3063,3.383,3064,3.383,3065,3.383,3066,3.383,3067,3.383,3068,3.383,3069,3.383,3070,3.383,3071,3.383,3072,3.383,3073,3.383]],["title/classes/MappingDefinition.html",[52,0.186,872,2.233]],["body/classes/MappingDefinition.html",[3,0.108,4,0.108,5,0.093,6,0.244,7,0.126,22,0.41,23,0.79,24,0.715,26,0.155,27,0.52,28,1.262,30,0.52,32,0.305,34,0.715,35,0.014,36,0.609,39,0.377,51,0.124,52,0.195,61,0.459,80,0.799,88,0.007,89,0.009,90,0.007,94,0.856,95,0.401,96,0.856,126,0.625,131,0.706,154,0.547,228,1.051,233,0.559,237,2.816,239,0.921,246,0.67,256,2.212,257,1.628,258,1.628,818,1.088,842,1.607,872,3.147,896,1.852,907,3.768,926,3.523,930,3.768,1011,3.816,1112,2.257,1138,1.84,1581,1.566,1602,2.212,1816,2.613,2506,4.999,2532,2.106,2533,2.106,2748,4.999,2750,3.768,2801,4.312,2804,4.414,2805,5.353,2839,3.439,2861,2.789,2862,2.789,3061,3.267,3074,7.154,3075,3.267,3076,6.369,3077,6.369,3078,7.124,3079,6.369,3080,6.369,3081,5.543,3082,5.624,3083,5.624,3084,5.624,3085,5.624,3086,5.624,3087,6.82,3088,4.894,3089,5.624,3090,6.82,3091,5.624,3092,5.624,3093,3.623,3094,4.163,3095,3.623,3096,3.623,3097,3.623,3098,4.163,3099,5.624,3100,4.163,3101,4.163,3102,5.624,3103,4.163,3104,5.624,3105,4.163,3106,5.624,3107,4.163,3108,5.624,3109,5.624,3110,4.163,3111,5.624,3112,3.623,3113,4.163,3114,5.624,3115,4.163,3116,5.624,3117,4.163,3118,3.623,3119,4.163,3120,5.624,3121,4.163,3122,4.163,3123,4.163,3124,6.82,3125,4.163,3126,4.163,3127,4.163,3128,4.163,3129,4.163,3130,4.163,3131,4.163,3132,4.163,3133,4.163,3134,4.163,3135,5.624,3136,4.163,3137,4.894,3138,5.624,3139,4.163,3140,4.163]],["title/components/MappingDetailComponent.html",[98,0.179,153,0.843]],["body/components/MappingDetailComponent.html",[3,0.109,4,0.109,5,0.094,6,0.233,7,0.122,21,0.923,22,0.222,26,0.156,27,0.523,28,1.201,29,1.257,30,0.523,32,0.288,34,0.661,35,0.014,36,0.419,39,0.405,40,0.538,48,1.411,49,0.89,50,0.633,51,0.125,52,0.264,53,1.427,61,0.408,80,0.752,88,0.007,89,0.009,90,0.007,94,0.634,95,0.36,96,0.634,98,0.288,99,0.887,100,1.33,101,1.023,102,1.023,104,0.953,105,1.716,106,1.153,107,1.023,109,1.33,110,0.919,111,1.378,112,1.33,113,0.887,114,1.667,115,1.023,116,1.023,117,0.919,118,1.023,119,0.887,120,1.023,121,1.446,122,1.023,123,1.023,124,0.887,125,0.919,126,0.71,127,1.74,128,0.887,129,1.023,130,0.856,131,0.959,132,0.887,133,1.023,134,0.887,135,1.023,136,0.887,137,1.023,138,0.856,139,1.667,140,0.856,141,0.987,142,1.499,143,1.023,144,0.919,145,1.023,146,0.887,147,0.887,148,0.856,149,1.023,150,0.856,151,1.239,152,1.023,153,1.51,154,0.802,155,0.887,156,0.825,157,1.023,158,0.887,159,1.023,160,0.887,161,1.023,162,0.887,163,0.887,164,1.378,165,0.887,166,0.825,167,1.023,168,1.589,169,1.023,170,0.887,171,1.284,172,1.023,173,0.887,174,0.923,175,0.825,176,1.378,177,1.559,178,0.887,179,1.378,180,0.887,181,0.887,182,0.919,183,0.887,184,0.887,185,1.023,186,0.887,187,0.953,188,0.987,189,0.856,190,0.987,191,1.023,214,1.284,232,1.311,233,0.671,248,1.709,255,1.938,258,1.642,259,1.642,260,1.36,267,0.561,276,3.187,277,3.027,282,2.128,289,3.236,291,1.558,375,2.953,376,3.398,395,3.579,398,3.83,399,3.159,417,3.398,437,3.997,474,2.861,604,3.165,793,2.482,906,2.027,1087,3.653,1100,3.653,1112,1.795,1113,1.52,1239,2.813,1240,4.078,1241,4.078,1269,3.295,1305,3.653,1308,3.295,1396,3.027,1398,3.79,1399,3.79,1404,3.79,1405,2.813,1406,4.586,1408,3.79,1410,3.653,1417,2.813,1418,3.79,1426,3.79,1427,2.712,1429,3.027,1430,2.813,1431,2.813,2748,3.295,3088,4.922,3137,4.922,3141,6.396,3142,6.396,3143,7.359,3144,4.922,3145,4.198,3146,3.295,3147,4.198,3148,5.656,3149,4.198,3150,5.656,3151,4.198,3152,4.198,3153,5.656,3154,4.198,3155,4.198,3156,4.198,3157,4.198,3158,4.198,3159,3.653,3160,4.198,3161,4.198,3162,4.198,3163,3.653,3164,4.198,3165,4.198,3166,4.198,3167,4.198,3168,4.198,3169,4.198,3170,4.198,3171,4.198,3172,4.198,3173,4.198,3174,4.198]],["title/components/MappingFieldActionArgumentComponent.html",[98,0.179,155,0.843]],["body/components/MappingFieldActionArgumentComponent.html",[3,0.08,4,0.08,5,0.069,6,0.236,7,0.123,10,1.304,21,0.741,22,0.403,23,0.551,24,0.653,26,0.237,27,0.42,28,0.88,29,1.061,30,0.42,32,0.294,34,0.678,35,0.014,36,0.569,39,0.364,40,0.394,49,0.751,50,0.464,51,0.091,52,0.212,61,0.424,69,2.634,80,0.721,88,0.005,89,0.008,90,0.005,94,0.792,95,0.387,96,0.792,98,0.286,99,0.65,100,1.067,101,0.749,102,0.749,104,0.698,105,1.681,106,0.925,107,0.749,109,1.067,110,0.674,111,1.106,112,1.067,113,0.65,114,1.451,115,0.749,116,0.749,117,0.674,118,0.749,119,0.65,120,0.749,121,0.65,122,0.749,123,0.749,124,0.65,125,0.674,126,0.731,127,1.548,128,0.65,129,0.749,130,0.627,131,0.915,132,0.65,133,0.749,134,0.65,135,0.749,136,0.65,137,0.749,138,0.627,139,1.451,140,0.627,141,0.723,142,1.305,143,0.749,144,0.674,145,0.749,146,0.65,147,0.65,148,0.627,149,0.749,150,0.627,151,0.674,152,0.749,153,0.65,154,0.752,155,1.259,156,1.628,157,0.749,158,0.65,159,0.749,160,0.65,161,0.749,162,0.65,163,0.65,164,1.106,165,0.65,166,0.605,167,0.749,168,0.65,169,0.749,170,0.65,171,1.352,172,0.749,173,0.65,174,0.741,175,0.605,176,1.106,177,0.627,178,0.65,179,1.106,180,0.65,181,0.65,182,0.674,183,0.65,184,0.65,185,0.749,186,0.65,187,0.698,188,0.723,189,0.627,190,0.723,191,0.749,214,1.03,228,1.362,232,1.861,233,0.62,239,0.662,246,0.474,267,0.796,272,1.708,274,2.412,276,3.233,282,1.708,291,1.852,297,4.318,313,0.814,317,3.992,320,1.708,437,4.018,453,0.972,505,3.042,541,3.07,548,3.951,557,3.563,563,2.192,602,2.684,604,1.721,699,2.216,740,1.362,744,1.848,758,2.707,783,1.073,784,0.996,795,1.252,797,2.061,801,2.128,842,1.85,882,3.74,1113,1.114,1118,3.042,1138,1.36,1199,3.951,1262,1.848,1329,3.951,1430,2.061,1472,2.297,1611,2.414,1658,2.634,1659,1.848,1666,1.157,1668,3.951,1715,4.676,1719,1.157,1721,1.848,1733,3.951,1807,2.601,1821,3.563,1911,2.684,1938,2.849,1941,3.992,2015,2.297,2016,2.684,2054,1.634,2070,2.916,2076,3.523,2088,4.034,2089,3.523,2105,1.819,2112,4.535,2146,2.684,2171,3.042,2175,3.042,2220,1.93,2221,1.556,2532,1.556,2533,1.556,2924,2.061,2965,1.819,3175,2.677,3176,4.54,3177,5.396,3178,4.696,3179,4.54,3180,4.54,3181,5.958,3182,4.54,3183,4.54,3184,3.563,3185,5.185,3186,4.54,3187,4.54,3188,4.54,3189,7.061,3190,6.879,3191,7.061,3192,4.54,3193,3.076,3194,3.076,3195,3.076,3196,3.076,3197,3.076,3198,3.076,3199,4.54,3200,3.076,3201,4.54,3202,3.076,3203,5.958,3204,3.273,3205,5.399,3206,3.563,3207,3.076,3208,3.951,3209,4.54,3210,3.076,3211,4.54,3212,3.076,3213,4.54,3214,4.54,3215,4.54,3216,4.54,3217,3.563,3218,4.54,3219,4.54,3220,3.076,3221,3.563,3222,4.54,3223,4.54,3224,3.076,3225,4.54,3226,4.831,3227,3.076,3228,4.54,3229,4.54,3230,3.076,3231,4.54,3232,3.076,3233,4.54,3234,4.54,3235,5.396,3236,3.951,3237,5.396,3238,3.076,3239,2.061,3240,2.414,3241,3.076,3242,2.414,3243,4.676,3244,2.677,3245,3.951,3246,4.54,3247,2.684,3248,3.076,3249,4.54,3250,3.076,3251,3.076,3252,4.54,3253,3.076,3254,3.076,3255,3.076,3256,2.414,3257,3.076,3258,3.076,3259,3.076,3260,3.076,3261,2.677,3262,3.076,3263,3.076,3264,3.076,3265,2.677,3266,3.076,3267,2.414,3268,2.414,3269,4.54,3270,2.414,3271,3.076,3272,2.677,3273,3.076,3274,4.54,3275,3.076,3276,3.076,3277,3.076,3278,3.076,3279,3.076,3280,3.076,3281,3.076,3282,3.076,3283,2.677,3284,4.54,3285,6.65,3286,4.54,3287,3.951]],["title/components/MappingFieldActionComponent.html",[98,0.179,158,0.843]],["body/components/MappingFieldActionComponent.html",[3,0.105,4,0.105,5,0.091,6,0.235,7,0.123,21,0.9,22,0.357,23,0.563,24,0.374,26,0.271,27,0.51,29,1.234,30,0.51,32,0.292,34,0.673,35,0.014,36,0.465,39,0.374,40,0.518,49,0.874,50,0.61,51,0.12,52,0.258,61,0.415,80,0.72,88,0.007,89,0.009,90,0.007,94,0.704,95,0.365,96,0.704,98,0.282,99,0.855,100,1.297,101,0.986,102,0.986,104,0.918,105,1.712,106,1.124,107,0.986,109,1.297,110,0.886,111,1.344,112,1.297,113,0.855,114,1.642,115,0.986,116,0.986,117,0.886,118,0.986,119,0.855,120,0.986,121,0.855,122,0.986,123,0.986,124,0.855,125,0.886,126,0.736,127,1.718,128,0.855,129,0.986,130,0.825,131,1.064,132,0.855,133,0.986,134,0.855,135,0.986,136,0.855,137,0.986,138,0.825,139,1.642,140,0.825,141,0.951,142,1.476,143,0.986,144,0.886,145,0.986,146,0.855,147,0.855,148,0.825,149,0.986,150,0.825,151,0.886,152,0.986,153,0.855,154,0.792,155,0.855,156,1.583,157,0.986,158,1.424,159,0.986,160,0.855,161,0.986,162,0.855,163,0.855,164,1.344,165,0.855,166,0.795,167,0.986,168,0.855,169,0.986,170,0.855,171,1.53,172,0.986,173,0.855,174,0.9,175,0.795,176,1.344,177,0.825,178,0.855,179,1.344,180,0.855,181,0.855,182,0.886,183,0.855,184,0.855,185,0.986,186,0.855,187,0.918,188,0.951,189,0.825,190,0.951,191,0.986,214,1.252,218,2.361,232,1.723,233,0.551,239,0.893,276,3.22,282,2.075,291,1.718,297,3.939,437,4.003,453,1.151,461,1.522,541,2.546,689,4.329,699,2.351,801,1.662,842,1.584,882,3.939,906,2.663,1020,2.264,1112,1.761,1113,1.465,1138,1.789,1262,1.647,1294,2.539,1427,2.338,1658,2.438,1807,2.847,2070,3.158,2078,3.581,2089,3.262,2090,2.149,2096,3.939,2098,3.262,2100,2.264,2104,2.539,2105,2.392,2112,3.262,2146,3.262,2171,3.696,2220,2.539,2221,2.047,2532,2.047,2533,2.047,2952,4.8,2960,4.329,3184,4.926,3185,5.866,3204,3.977,3205,4.926,3206,4.329,3244,3.521,3247,2.392,3267,3.175,3268,3.175,3270,3.175,3272,3.521,3288,3.521,3289,5.516,3290,6.74,3291,4.8,3292,6.74,3293,4.8,3294,4.046,3295,4.046,3296,4.046,3297,4.046,3298,4.046,3299,4.8,3300,4.046,3301,4.046,3302,4.046,3303,4.8,3304,4.046,3305,4.8,3306,4.046,3307,4.8,3308,4.8,3309,4.046,3310,4.329,3311,3.977,3312,4.046,3313,4.046,3314,4.8,3315,4.046,3316,4.046,3317,3.521,3318,3.521,3319,3.521,3320,3.521,3321,3.521,3322,3.175,3323,3.521,3324,3.521,3325,3.521,3326,3.521,3327,3.521,3328,3.521,3329,4.8]],["title/components/MappingFieldContainerComponent.html",[98,0.179,160,0.843]],["body/components/MappingFieldContainerComponent.html",[3,0.077,4,0.152,5,0.066,6,0.243,7,0.126,21,0.719,22,0.415,23,0.67,24,0.645,26,0.11,27,0.408,28,1.252,29,1.037,30,0.408,32,0.304,34,0.727,35,0.014,36,0.573,39,0.37,40,0.379,47,3.118,48,0.994,49,0.734,50,0.446,51,0.088,52,0.206,53,1.113,61,0.435,80,0.45,88,0.005,89,0.007,90,0.005,94,0.827,95,0.387,96,0.827,98,0.237,99,0.625,100,1.037,101,0.72,102,0.72,104,0.671,105,1.676,106,0.899,107,0.72,109,1.037,110,0.648,111,1.074,112,1.037,113,0.625,114,1.424,115,0.72,116,0.72,117,0.648,118,0.72,119,0.625,120,0.72,121,0.625,122,0.72,123,0.72,124,0.625,125,0.648,126,0.729,127,1.523,128,0.625,129,0.72,130,0.603,131,0.894,132,0.625,133,0.72,134,0.625,135,0.72,136,0.625,137,0.72,138,0.603,139,1.424,140,0.603,141,0.695,142,1.28,143,0.72,144,0.648,145,0.72,146,0.625,147,0.625,148,0.603,149,0.72,150,0.603,151,0.648,152,0.72,153,0.625,154,0.761,155,0.625,156,0.581,157,0.72,158,0.625,159,0.72,160,1.235,161,0.72,162,0.625,163,0.625,164,1.074,165,0.625,166,0.581,167,0.72,168,0.625,169,0.72,170,0.625,171,1.001,172,0.72,173,0.625,174,0.719,175,0.581,176,1.074,177,1.191,178,0.625,179,1.074,180,0.625,181,0.625,182,0.648,183,0.625,184,0.625,185,0.72,186,0.625,187,0.671,188,0.695,189,0.603,190,0.695,191,0.72,214,1.001,218,1.984,228,1.331,232,2.229,233,0.678,239,0.925,246,0.596,258,1.157,259,1.157,260,0.958,267,0.932,276,3.326,282,1.659,289,2.667,291,1.597,294,3.27,313,1.025,375,2.434,395,2.95,399,2.698,437,4.134,453,1.07,459,2.132,504,1.856,545,2.574,559,2.574,668,3.118,719,4.589,766,2.574,803,3.838,804,2.574,805,2.574,842,1.113,1006,1.749,1007,1.856,1112,1.48,1113,1.071,1138,1.307,1244,4.589,1245,3.838,1246,3.838,1248,4.589,1258,3.838,1260,3.838,1271,3.838,1273,3.838,1274,5.087,1278,3.838,1304,3.838,1321,2.574,1326,4.589,1339,3.838,1340,2.574,1341,2.574,1342,2.574,1345,4.589,1346,4.138,1347,3.802,1355,1.856,1360,1.982,1437,2.574,1625,2.286,1673,2.132,1699,1.869,1807,2.919,1911,3.456,2026,1.571,2351,4.589,2382,2.574,2383,2.574,2416,2.574,2532,1.496,2533,1.496,2610,2.574,2923,1.749,2924,1.982,2978,2.132,3018,3.18,3159,2.574,3247,1.749,3265,2.574,3311,5.237,3330,2.574,3331,4.41,3332,4.41,3333,5.273,3334,5.273,3335,4.138,3336,4.589,3337,5.845,3338,5.845,3339,5.845,3340,4.41,3341,4.41,3342,5.845,3343,5.845,3344,5.845,3345,5.845,3346,4.41,3347,3.838,3348,3.838,3349,4.41,3350,4.41,3351,2.957,3352,2.957,3353,2.957,3354,2.957,3355,2.957,3356,2.957,3357,2.957,3358,2.957,3359,5.845,3360,2.957,3361,2.957,3362,6.556,3363,2.957,3364,4.41,3365,2.957,3366,2.957,3367,2.957,3368,4.41,3369,2.957,3370,2.957,3371,2.957,3372,4.41,3373,2.957,3374,2.957,3375,2.957,3376,4.41,3377,2.957,3378,5.845,3379,2.957,3380,4.41,3381,2.957,3382,2.957,3383,2.957,3384,2.957,3385,2.957,3386,2.957,3387,2.957,3388,2.957,3389,4.138,3390,2.957,3391,4.41,3392,2.957,3393,2.321,3394,2.321,3395,4.41,3396,4.41,3397,4.41,3398,5.273,3399,2.957,3400,4.41,3401,2.957,3402,2.957,3403,2.321,3404,2.957,3405,2.957,3406,2.957,3407,4.41,3408,4.41,3409,2.957,3410,2.957,3411,2.957,3412,2.957,3413,2.957,3414,5.273,3415,2.574,3416,2.957,3417,2.957,3418,2.957,3419,2.957,3420,2.957,3421,3.838,3422,2.957,3423,4.41,3424,4.41,3425,2.574,3426,2.957,3427,5.273,3428,4.589,3429,2.321,3430,2.132,3431,2.132,3432,2.957,3433,2.957,3434,2.321,3435,2.957,3436,2.574,3437,2.574]],["title/components/MappingFieldDetailComponent.html",[98,0.179,162,0.843]],["body/components/MappingFieldDetailComponent.html",[3,0.089,4,0.089,5,0.077,6,0.237,7,0.124,21,0.803,22,0.407,24,0.685,26,0.28,27,0.455,28,1.209,29,1.131,30,0.455,32,0.299,34,0.704,35,0.014,36,0.54,39,0.352,40,0.44,49,0.801,50,0.519,51,0.102,52,0.23,53,1.243,61,0.379,80,0.679,88,0.006,89,0.008,90,0.006,94,0.552,95,0.363,96,0.552,98,0.259,99,0.727,100,1.158,101,0.838,102,0.838,104,0.78,105,1.695,106,1.004,107,0.838,109,1.158,110,0.753,111,1.199,112,1.158,113,0.727,114,1.53,115,0.838,116,0.838,117,0.753,118,0.838,119,0.727,120,0.838,121,0.727,122,0.838,123,0.838,124,0.727,125,0.753,126,0.732,127,1.619,128,0.727,129,0.838,130,0.701,131,0.834,132,0.727,133,0.838,134,0.727,135,0.838,136,0.727,137,0.838,138,0.701,139,1.53,140,0.701,141,0.809,142,1.375,143,0.838,144,0.753,145,0.838,146,0.727,147,0.727,148,0.701,149,0.838,150,0.701,151,0.753,152,0.838,153,0.727,154,0.769,155,0.727,156,1.359,157,0.838,158,0.727,159,0.838,160,0.727,161,0.838,162,1.327,163,0.727,164,1.199,165,0.727,166,0.676,167,0.838,168,0.727,169,0.838,170,0.727,171,1.117,172,0.838,173,0.727,174,0.803,175,0.676,176,1.199,177,0.701,178,0.727,179,1.199,180,0.727,181,0.727,182,0.753,183,0.727,184,0.727,185,0.838,186,0.727,187,0.78,188,0.809,189,0.701,190,0.809,191,0.838,214,1.117,218,2.164,232,1.538,233,0.65,239,0.873,246,0.686,267,0.459,271,1.827,272,1.852,276,3.252,282,1.852,291,1.619,294,3.513,313,0.743,324,0.676,375,2.655,399,2.899,437,4.042,453,1.084,461,1.852,472,0.868,492,2.158,740,0.868,758,2.004,783,1.199,784,1.114,797,2.304,801,1.484,906,2.377,1112,1.614,1113,1.245,1118,3.299,1171,3.299,1239,2.304,1240,3.55,1241,3.55,1262,2.341,1267,2.993,1269,2.699,1279,2.993,1308,2.699,1355,2.158,1658,3.056,1659,1.4,1666,1.294,1667,1.74,1699,3.143,1719,1.294,1721,1.4,1744,3.864,1794,1.52,1807,3.125,1854,3.299,1980,3.401,2015,1.74,2016,2.033,2017,1.924,2026,1.827,2070,2.438,2146,2.033,2171,4.453,2220,2.158,2221,1.74,2406,5.005,2431,2.993,2432,2.993,2434,2.993,2435,2.993,2978,3.55,3018,3.55,3056,4.514,3146,2.699,3243,4.928,3247,2.911,3310,2.699,3311,2.479,3347,4.285,3393,2.699,3394,2.699,3415,2.993,3421,2.993,3436,2.993,3437,2.993,3438,6.645,3439,5.751,3440,6.279,3441,6.279,3442,5.465,3443,6.017,3444,5.465,3445,5.465,3446,4.923,3447,6.279,3448,6.279,3449,3.439,3450,3.439,3451,3.439,3452,2.993,3453,3.439,3454,3.439,3455,3.439,3456,3.439,3457,3.439,3458,4.923,3459,3.439,3460,4.923,3461,4.923,3462,3.864,3463,5.751,3464,4.147,3465,4.285,3466,4.923,3467,4.923,3468,4.923,3469,4.923,3470,4.923,3471,3.439,3472,3.439,3473,4.923,3474,4.923,3475,4.923,3476,4.285,3477,3.439,3478,2.993,3479,3.439,3480,5.005,3481,3.439,3482,5.751,3483,3.439,3484,4.285,3485,3.439,3486,3.439,3487,6.279,3488,3.439,3489,3.439,3490,5.751,3491,3.439,3492,3.439,3493,3.439,3494,3.439,3495,3.439,3496,3.439,3497,3.439,3498,2.993,3499,3.439,3500,4.285,3501,4.285,3502,4.923,3503,3.439]],["title/injectables/MappingIdentifierService.html",[0,1.842,637,2.877]],["body/injectables/MappingIdentifierService.html",[0,3.29,2,3.8,3,0.158,4,0.158,5,0.136,6,0.225,7,0.116,22,0.401,23,0.618,26,0.225,30,0.659,32,0.265,34,0.56,35,0.014,39,0.378,40,0.775,51,0.18,52,0.283,61,0.345,80,0.728,88,0.01,89,0.012,90,0.01,94,0.679,95,0.296,96,0.679,154,0.589,200,4.751,228,1.528,246,0.625,453,1.163,637,5.139,657,2.566,842,1.912,890,3.062,930,5.076,3504,6.593,3505,5.268,3506,7.821,3507,6.053,3508,7.821,3509,6.053,3510,7.127,3511,6.053,3512,6.053,3513,6.053,3514,7.575,3515,6.053,3516,6.053]],["title/components/MappingListComponent.html",[98,0.179,163,0.843]],["body/components/MappingListComponent.html",[3,0.087,4,0.087,5,0.075,6,0.241,7,0.125,21,0.789,22,0.418,23,0.634,24,0.574,26,0.245,27,0.447,28,1.249,29,1.115,30,0.447,32,0.301,34,0.729,35,0.014,36,0.585,39,0.363,40,0.429,48,1.127,49,0.789,50,0.506,51,0.1,52,0.226,53,1.22,61,0.427,80,0.7,88,0.006,89,0.008,90,0.009,94,0.793,95,0.378,96,0.793,98,0.255,99,0.709,100,1.137,101,0.817,102,0.817,104,0.761,105,1.692,106,0.986,107,0.817,109,1.137,110,0.734,111,1.178,112,1.137,113,0.709,114,1.512,115,0.817,116,0.817,117,0.734,118,0.817,119,0.709,120,0.817,121,0.709,122,0.817,123,0.817,124,0.709,125,0.734,126,0.672,127,1.603,128,0.709,129,0.817,130,0.684,131,0.819,132,0.709,133,0.817,134,0.709,135,0.817,136,0.709,137,0.817,138,0.684,139,1.512,140,0.684,141,0.788,142,1.359,143,0.817,144,0.734,145,0.817,146,0.709,147,0.709,148,0.684,149,0.817,150,0.684,151,0.734,152,0.817,153,0.709,154,0.783,155,0.709,156,0.659,157,0.817,158,0.709,159,0.817,160,0.709,161,0.817,162,0.709,163,1.312,164,1.178,165,0.709,166,1.115,167,0.817,168,0.709,169,0.817,170,0.709,171,1.097,172,0.817,173,0.709,174,0.789,175,0.659,176,1.178,177,0.684,178,0.709,179,1.178,180,0.709,181,0.709,182,0.734,183,0.709,184,0.709,185,0.817,186,0.709,187,0.761,188,0.788,189,0.684,190,0.788,191,0.817,214,1.097,218,2.133,233,0.647,239,0.904,246,0.602,258,1.312,267,0.829,273,2.738,276,3.299,282,1.819,291,1.178,294,2.706,313,0.856,324,1.115,375,2.618,376,3.013,398,3.473,399,2.865,417,3.013,453,0.547,472,0.846,720,1.782,721,4.935,740,1.566,765,1.983,784,1.086,786,4.208,789,2.918,793,2.859,800,2.632,842,1.431,926,3.038,1006,2.859,1007,3.035,1093,5.845,1112,2.253,1113,1.214,1181,2.632,1183,2.632,1373,5.095,1391,2.105,1440,3.035,1581,1.261,1666,1.261,1667,1.696,1719,1.261,1727,2.247,1753,2.247,1756,2.918,1785,2.918,1787,2.918,1807,2.428,1983,1.548,2054,1.782,2981,2.418,3144,4.208,3247,1.983,3335,5.164,3389,5.545,3434,5.164,3517,2.632,3518,4.208,3519,4.935,3520,4.935,3521,5.67,3522,4.835,3523,5.402,3524,4.835,3525,4.835,3526,6.207,3527,6.207,3528,5.402,3529,5.402,3530,4.835,3531,5.402,3532,4.835,3533,5.402,3534,2.918,3535,4.835,3536,3.353,3537,3.353,3538,4.835,3539,3.353,3540,4.835,3541,3.353,3542,3.353,3543,3.353,3544,3.353,3545,3.353,3546,4.835,3547,3.353,3548,3.353,3549,2.918,3550,4.208,3551,3.353,3552,3.353,3553,4.835,3554,3.353,3555,4.835,3556,3.353,3557,3.353,3558,2.918,3559,2.918,3560,3.353,3561,2.918,3562,2.918,3563,3.353,3564,3.353,3565,3.353,3566,6.509,3567,4.935,3568,2.918,3569,2.632,3570,3.353,3571,4.208,3572,4.208,3573,4.935,3574,4.835,3575,3.353,3576,2.918,3577,2.918,3578,2.918,3579,2.918,3580,4.835,3581,5.67,3582,3.353,3583,3.353,3584,3.353,3585,3.353,3586,3.353,3587,3.353,3588,3.353,3589,3.353,3590,3.353,3591,3.353,3592,3.353,3593,4.835]],["title/components/MappingListFieldComponent.html",[98,0.179,165,0.843]],["body/components/MappingListFieldComponent.html",[3,0.119,4,0.119,5,0.102,6,0.234,7,0.123,21,0.976,22,0.407,26,0.17,29,1.312,30,0.553,32,0.29,34,0.654,35,0.014,36,0.525,39,0.353,40,0.585,49,0.929,50,0.689,51,0.136,52,0.28,61,0.381,88,0.008,89,0.01,90,0.008,95,0.346,98,0.3,99,0.965,100,1.407,101,1.113,102,1.113,104,1.037,105,1.723,106,1.22,107,1.113,109,1.407,110,1.001,111,1.457,112,1.407,113,0.965,114,1.724,115,1.113,116,1.113,117,1.001,118,1.113,119,0.965,120,1.113,121,0.965,122,1.113,123,1.113,124,0.965,125,1.001,126,0.698,127,1.79,128,0.965,129,1.113,130,0.931,131,1.014,132,0.965,133,1.113,134,0.965,135,1.113,136,0.965,137,1.113,138,0.931,139,1.724,140,0.931,141,1.074,142,1.55,143,1.113,144,1.001,145,1.113,146,0.965,147,0.965,148,0.931,149,1.113,150,0.931,151,1.001,152,1.113,153,0.965,154,0.788,155,0.965,156,0.898,157,1.113,158,0.965,159,1.113,160,0.965,161,1.113,162,0.965,163,0.965,164,1.457,165,1.496,166,1.601,167,1.113,168,0.965,169,1.113,170,0.965,171,1.358,172,1.113,173,0.965,174,0.976,175,0.898,176,1.457,177,0.931,178,0.965,179,1.457,180,0.965,181,0.965,182,1.001,183,0.965,184,0.965,185,1.113,186,0.965,187,1.037,188,1.074,189,0.931,190,1.074,191,1.113,214,1.358,218,2.51,239,0.925,246,0.684,267,0.61,271,2.427,276,3.207,282,2.251,291,1.79,294,3.961,313,0.903,453,0.976,1093,5.682,1113,1.654,1355,2.868,1807,2.948,3243,5.236,3311,3.294,3393,3.586,3394,3.586,3442,6.16,3443,6.781,3444,6.56,3445,6.16,3480,5.806,3484,5.207,3498,3.976,3594,3.976,3595,5.983,3596,6.671,3597,4.569,3598,4.569,3599,4.569,3600,4.569,3601,4.569,3602,4.569,3603,4.569,3604,4.569,3605,4.569]],["title/components/MappingSelectionComponent.html",[98,0.179,168,0.843]],["body/components/MappingSelectionComponent.html",[3,0.106,4,0.164,5,0.091,6,0.238,7,0.124,21,0.904,22,0.375,23,0.566,24,0.512,26,0.252,27,0.512,28,1.19,29,1.238,30,0.512,32,0.297,34,0.69,35,0.014,36,0.524,39,0.386,40,0.522,49,0.877,50,0.615,51,0.121,52,0.259,53,1.399,61,0.404,80,0.722,88,0.007,89,0.009,90,0.007,94,0.622,95,0.372,96,0.622,98,0.283,99,0.861,100,1.303,101,0.992,102,0.992,104,0.925,105,1.713,106,1.13,107,0.992,109,1.303,110,0.892,111,1.35,112,1.303,113,0.861,114,1.647,115,0.992,116,0.992,117,0.892,118,0.992,119,0.861,120,0.992,121,0.861,122,0.992,123,0.992,124,0.861,125,0.892,126,0.69,127,1.722,128,0.861,129,0.992,130,0.83,131,0.939,132,0.861,133,0.992,134,0.861,135,0.992,136,0.861,137,0.992,138,0.83,139,1.647,140,0.83,141,0.958,142,1.481,143,0.992,144,0.892,145,0.992,146,0.861,147,0.861,148,0.83,149,0.992,150,0.83,151,0.892,152,0.992,153,0.861,154,0.787,155,0.861,156,0.801,157,0.992,158,0.861,159,0.992,160,0.861,161,0.992,162,0.861,163,0.861,164,1.35,165,0.861,166,0.801,167,0.992,168,1.541,169,0.992,170,1.646,171,1.605,172,0.992,173,0.861,174,0.904,175,0.801,176,1.35,177,1.378,178,0.861,179,1.35,180,0.861,181,0.861,182,0.892,183,0.861,184,0.861,185,0.992,186,0.861,187,0.925,188,0.958,189,0.83,190,0.958,191,0.992,204,3.126,213,2.67,214,1.258,223,2.866,225,2.866,233,0.486,235,2.369,239,0.867,246,0.62,248,1.658,258,1.593,259,1.593,260,1.32,267,0.903,276,3.264,313,1.02,324,1.09,395,3.524,437,4.057,472,1.706,474,3.42,842,1.028,926,2.908,1101,3.545,1112,1.984,1113,1.475,1229,1.658,1237,3.197,1306,3.346,1313,2.164,1376,5.481,1396,2.937,1625,2.168,1699,2.349,1983,1.881,3348,4.823,3606,3.197,3607,4.823,3608,6.298,3609,6.298,3610,5.883,3611,4.823,3612,6.76,3613,6.76,3614,4.074,3615,4.823,3616,5.883,3617,4.074,3618,4.074,3619,4.074,3620,4.074,3621,4.074,3622,5.542,3623,4.074,3624,3.545,3625,4.074,3626,4.074,3627,5.542,3628,3.545,3629,4.074,3630,4.074,3631,4.074,3632,4.074,3633,4.074,3634,4.074,3635,5.542,3636,4.074,3637,3.545,3638,4.349,3639,4.349,3640,3.545,3641,4.074,3642,4.074,3643,4.074,3644,6.298,3645,4.074,3646,5.542,3647,6.76]],["title/components/MappingSelectionSectionComponent.html",[98,0.179,170,0.843]],["body/components/MappingSelectionSectionComponent.html",[3,0.107,4,0.146,5,0.093,6,0.236,7,0.123,21,0.913,22,0.376,23,0.648,24,0.587,26,0.253,30,0.517,32,0.293,34,0.629,35,0.014,36,0.573,39,0.296,40,0.529,51,0.123,52,0.261,61,0.418,80,0.571,88,0.007,89,0.009,90,0.007,94,0.712,95,0.367,96,0.712,98,0.32,99,0.873,100,1.316,101,1.006,102,1.006,104,0.938,105,1.714,106,1.14,107,1.006,109,1.316,110,0.905,111,1.363,112,1.316,113,0.873,114,1.656,115,1.006,116,1.006,117,0.905,118,1.006,119,0.873,120,1.006,121,0.873,122,1.006,123,1.006,124,0.873,125,0.905,126,0.669,127,1.731,128,0.873,129,1.006,130,0.842,131,0.948,132,0.873,133,1.006,134,0.873,135,1.006,136,0.873,137,1.006,138,0.842,139,1.656,140,0.842,141,0.971,142,1.489,143,1.006,144,0.905,145,1.006,146,0.873,147,0.873,148,0.842,149,1.006,150,0.842,151,0.905,152,1.006,153,0.873,154,0.804,155,0.873,156,0.812,157,1.006,158,0.873,159,1.006,160,0.873,161,1.006,162,0.873,163,0.873,164,1.363,165,0.873,166,0.812,167,1.006,168,0.873,169,1.006,170,1.437,171,1.853,172,1.006,173,0.873,174,0.913,175,0.812,176,1.363,177,0.842,178,0.873,179,1.363,180,0.873,181,0.873,182,0.905,183,0.873,184,0.873,185,1.006,186,0.873,187,0.938,188,0.971,189,0.842,190,0.971,191,1.006,204,3.238,214,1.27,218,2.105,232,1.29,233,0.363,239,0.898,246,0.363,267,1.043,276,3.231,281,4.391,282,2.105,288,4.391,289,3.209,291,1.856,313,1.026,437,4.016,453,0.913,472,1.848,842,1.601,1006,2.443,1007,2.593,1112,2.055,1113,1.496,1237,3.242,1262,2.582,1373,4.902,1375,3.595,1469,3.308,1625,1.616,3403,4.391,3611,4.869,3615,4.869,3616,5.917,3637,3.595,3638,4.391,3639,4.391,3640,3.595,3648,3.595,3649,5.594,3650,6.799,3651,5.594,3652,6.344,3653,7.105,3654,6.344,3655,6.344,3656,6.344,3657,4.131,3658,4.131,3659,4.131,3660,4.131,3661,4.131,3662,4.131,3663,4.131,3664,4.131,3665,4.131,3666,5.594,3667,4.131,3668,4.131,3669,4.131,3670,4.131,3671,4.131,3672,4.131,3673,4.131,3674,4.131,3675,4.131,3676,5.594,3677,6.799,3678,5.594,3679,6.799]],["title/classes/MappingUtil.html",[52,0.186,3680,3.132]],["body/classes/MappingUtil.html",[3,0.106,4,0.106,5,0.091,6,0.221,7,0.114,10,2.344,21,0.902,22,0.215,26,0.151,28,1.101,29,1.492,30,0.511,32,0.271,34,0.674,35,0.014,36,0.577,39,0.386,49,1.102,50,0.613,51,0.121,52,0.19,61,0.416,80,0.802,88,0.007,89,0.009,90,0.007,94,0.818,95,0.381,96,0.818,126,0.683,154,0.612,156,1.236,204,2.78,218,2.54,233,0.64,237,3.222,239,0.828,246,0.699,256,2.158,257,1.588,258,1.588,267,0.739,313,1.019,324,1.087,453,0.902,461,1.528,472,1.839,740,1.587,783,1.416,784,1.315,795,2.748,818,1.062,842,1.025,890,2.054,896,2.353,906,1.961,926,2.903,1001,3.987,1012,5.543,1013,5.215,1035,3.187,1112,2.045,1113,1.47,1140,2.928,1174,1.588,1389,2.158,1427,1.722,1472,2.798,1560,4.935,1581,2.366,1658,2.78,1659,2.748,1666,1.528,1719,1.528,1721,2.748,1794,2.445,1807,2.763,1882,2.401,1959,3.471,2026,3.341,2058,3.415,2090,2.158,2098,3.27,2100,3.094,2146,2.401,2175,2.721,2220,2.549,2221,2.054,2239,4.868,2429,3.534,2873,5.299,2874,4.868,2912,4.813,2967,2.721,2981,5.093,2982,3.187,2990,3.187,2991,3.187,3476,5.875,3478,3.534,3500,3.534,3501,3.534,3638,3.187,3639,5.299,3680,4.34,3681,6.49,3682,5.53,3683,5.53,3684,5.53,3685,5.53,3686,5.53,3687,5.53,3688,4.061,3689,4.061,3690,4.061,3691,5.53,3692,5.53,3693,4.061,3694,4.061,3695,4.061,3696,4.061,3697,4.061,3698,4.061,3699,4.061,3700,4.061,3701,4.061,3702,5.53,3703,4.061,3704,5.53,3705,4.061,3706,5.53,3707,6.288,3708,5.53,3709,4.061,3710,5.53,3711,4.061,3712,6.288,3713,4.061,3714,5.53,3715,5.53,3716,5.53,3717,4.061,3718,5.53,3719,4.061,3720,4.061,3721,6.751,3722,2.928,3723,4.061,3724,5.53,3725,5.53,3726,4.061,3727,5.53,3728,6.751,3729,4.061,3730,4.061,3731,5.53,3732,4.061,3733,4.061,3734,4.061,3735,4.061,3736,4.061,3737,5.53,3738,4.061,3739,4.061,3740,6.751,3741,4.813,3742,4.061,3743,4.061,3744,5.53,3745,4.061,3746,4.061,3747,4.061,3748,4.061,3749,4.061,3750,4.061,3751,4.061,3752,4.061,3753,3.534,3754,4.061,3755,4.061,3756,4.061,3757,4.061,3758,4.061,3759,4.061,3760,4.061,3761,5.53,3762,4.061]],["title/components/ModalErrorDetailComponent.html",[98,0.179,173,0.843]],["body/components/ModalErrorDetailComponent.html",[3,0.124,4,0.124,5,0.107,6,0.231,7,0.123,21,1.004,22,0.361,26,0.178,30,0.569,32,0.284,34,0.666,35,0.014,39,0.361,40,0.611,51,0.142,52,0.288,61,0.411,88,0.008,89,0.01,90,0.008,94,0.536,95,0.334,96,0.536,98,0.306,99,1.009,100,1.448,101,1.163,102,1.163,104,1.084,105,1.727,106,1.255,107,1.163,109,1.448,110,1.046,111,1.5,112,1.448,113,1.009,114,1.754,115,1.163,116,1.163,117,1.046,118,1.163,119,1.009,120,1.163,121,1.009,122,1.163,123,1.163,124,1.009,125,1.046,126,0.69,127,1.815,128,1.009,129,1.163,130,0.973,131,1.043,132,1.009,133,1.163,134,1.009,135,1.163,136,1.009,137,1.163,138,0.973,139,1.754,140,0.973,141,1.123,142,1.722,143,1.163,144,1.046,145,1.163,146,1.009,147,1.009,148,0.973,149,1.163,150,0.973,151,1.046,152,1.163,153,1.009,154,0.773,155,1.009,156,0.939,157,1.163,158,1.009,159,1.163,160,1.009,161,1.163,162,1.009,163,1.009,164,1.5,165,1.009,166,0.939,167,1.163,168,1.009,169,1.163,170,1.009,171,1.397,172,1.163,173,1.521,174,1.341,175,0.939,176,1.5,177,0.973,178,1.009,179,1.5,180,1.009,181,1.009,182,1.046,183,1.009,184,1.009,185,1.163,186,1.009,187,1.084,188,1.123,189,0.973,190,1.123,191,1.163,214,1.397,233,0.419,282,2.316,291,1.66,635,2.773,645,2.416,646,2.305,720,3.62,725,4.824,728,6.265,729,5.19,734,4.566,740,2.048,783,1.665,784,1.547,795,1.943,796,2.997,797,3.199,814,5.358,1239,3.199,1240,4.439,1241,4.439,1270,4.155,1454,4.589,1757,4.566,1771,4.155,1774,5.358,1784,4.913,3146,3.747,3452,4.155,3763,6.157,3764,4.775,3765,4.775,3766,4.775,3767,6.157,3768,4.775,3769,4.775,3770,6.157]],["title/components/ModalErrorWindowComponent.html",[98,0.179,175,0.784]],["body/components/ModalErrorWindowComponent.html",[3,0.1,4,0.1,5,0.086,6,0.243,7,0.126,20,2.569,21,0.868,22,0.323,23,0.75,24,0.679,26,0.143,27,0.492,29,1.2,30,0.492,32,0.304,34,0.703,35,0.014,36,0.489,37,1.772,39,0.323,40,0.492,49,0.85,50,0.579,51,0.158,52,0.249,53,1.343,61,0.395,76,2.692,88,0.006,89,0.009,90,0.006,94,0.597,95,0.377,96,0.597,98,0.275,99,0.811,100,1.251,101,0.935,102,0.935,104,0.871,105,1.707,106,1.085,107,0.935,109,1.251,110,0.841,111,1.296,112,1.251,113,0.811,114,1.606,115,0.935,116,0.935,117,0.841,118,0.935,119,0.811,120,0.935,121,0.811,122,0.935,123,0.935,124,0.811,125,0.841,126,0.657,127,1.687,128,0.811,129,0.935,130,0.783,131,0.902,132,0.811,133,0.935,134,0.811,135,0.935,136,0.811,137,0.935,138,0.783,139,1.606,140,0.783,141,0.903,142,1.64,143,0.935,144,0.841,145,0.935,146,0.811,147,0.811,148,0.783,149,0.935,150,0.783,151,0.841,152,0.935,153,0.811,154,0.756,155,0.811,156,0.755,157,0.935,158,0.811,159,0.935,160,0.811,161,0.935,162,0.811,163,0.811,164,1.296,165,0.811,166,0.755,167,0.935,168,0.811,169,0.935,170,0.811,171,1.208,172,0.935,173,0.811,174,1.353,175,1.296,176,1.296,177,0.783,178,0.811,179,1.296,180,0.811,181,0.811,182,0.841,183,0.811,184,0.811,185,0.935,186,0.811,187,0.871,188,0.903,189,0.783,190,0.903,191,0.935,214,1.208,223,1.628,225,1.628,228,0.969,233,0.682,235,2.002,239,0.749,246,0.579,248,1.563,267,1,313,0.803,375,2.819,384,2.456,385,3.899,399,3.043,401,3.341,402,4.094,439,2.27,447,2.977,453,0.868,530,2.27,720,3.903,725,4.418,729,4.754,740,1.942,743,3.335,749,4.176,765,3.146,783,1.339,784,1.244,785,2.04,788,3.611,795,1.563,796,2.41,906,2.569,1019,3.043,1306,3.244,1313,2.04,1454,4.847,1455,2.41,1458,3.341,1459,4.092,1464,2.04,1465,3.565,1466,4.64,1472,3.089,1473,4.092,1474,4.092,1477,4.092,1478,4.092,1479,3.565,1480,4.092,1494,3.565,1519,4.418,1520,3.565,1521,2.572,1524,3.565,1534,3.565,1537,3.565,1757,3.565,1784,3.836,3771,6.026,3772,5.738,3773,5.321,3774,5.738,3775,5.321,3776,3.341,3777,3.839,3778,3.839,3779,3.839,3780,3.839,3781,3.341,3782,4.63,3783,3.839,3784,3.839,3785,3.341,3786,4.63,3787,3.839,3788,3.839,3789,3.839,3790,3.839,3791,3.839,3792,3.839,3793,3.839,3794,4.403,3795,3.839,3796,3.839,3797,4.63,3798,3.341,3799,3.341,3800,5.321,3801,5.321]],["title/interfaces/ModalErrorWindowValidator.html",[1464,2.12,3794,2.877]],["body/interfaces/ModalErrorWindowValidator.html",[3,0.14,4,0.14,5,0.12,6,0.214,7,0.11,20,2.597,22,0.381,26,0.2,29,1.057,30,0.614,32,0.247,34,0.614,35,0.014,36,0.399,37,2.483,39,0.381,40,0.689,49,0.924,50,0.812,51,0.197,52,0.251,53,1.357,76,2.721,88,0.009,89,0.011,90,0.009,98,0.299,105,1.096,142,1.454,154,0.523,174,1.26,175,1.057,214,1.221,223,3.187,225,3.187,233,0.678,235,2.708,239,0.883,246,0.582,267,1.031,313,1.002,375,3.064,385,3.18,399,2.483,402,3.925,439,3.18,447,3.714,453,1.083,530,3.18,720,3.825,725,3.604,729,3.878,740,1.948,743,2.721,749,4.221,765,3.18,783,1.876,784,1.742,785,2.858,788,4.257,795,2.189,796,3.376,906,2.597,1019,2.483,1306,3.526,1313,2.858,1454,4.257,1455,3.376,1459,4.447,1464,2.858,1465,3.604,1466,3.604,1472,2.721,1473,3.604,1474,3.604,1477,3.604,1478,3.604,1479,3.604,1480,3.604,1494,4.447,1519,3.604,1520,4.447,1521,3.604,1524,4.447,1537,4.447,1757,4.447,1784,4.786,3771,4.681,3772,4.681,3774,4.681,3782,4.681,3786,4.681,3794,5.19,3797,5.776,3798,4.681,3799,4.681,3802,3.878,3803,5.378,3804,5.378]],["title/components/ModalWindowComponent.html",[98,0.179,177,0.813]],["body/components/ModalWindowComponent.html",[3,0.087,4,0.126,5,0.075,6,0.244,7,0.126,20,2.331,21,0.788,22,0.3,23,0.738,24,0.668,26,0.125,27,0.446,28,1.278,29,1.113,30,0.446,32,0.306,34,0.668,35,0.014,36,0.42,39,0.348,40,0.429,48,1.124,49,0.789,50,0.505,51,0.168,52,0.265,53,1.429,61,0.391,76,2.442,80,0.578,88,0.006,89,0.008,90,0.006,94,0.635,95,0.394,96,0.635,98,0.296,99,0.707,100,1.135,101,0.815,102,0.815,104,0.759,105,1.694,106,0.984,107,0.815,109,1.332,110,0.733,111,1.176,112,1.135,113,0.707,114,1.511,115,0.815,116,0.815,117,0.733,118,0.815,119,0.707,120,0.815,121,0.707,122,0.815,123,0.815,124,0.707,125,0.733,126,0.634,127,1.602,128,0.707,129,0.815,130,0.682,131,0.818,132,0.707,133,0.815,134,0.707,135,0.815,136,0.707,137,0.815,138,0.682,139,1.511,140,1.155,141,1.135,142,1.637,143,0.815,144,0.733,145,0.815,146,0.707,147,0.707,148,0.682,149,0.815,150,0.682,151,0.733,152,0.815,153,0.707,154,0.716,155,0.707,156,0.658,157,0.815,158,0.707,159,0.815,160,0.707,161,0.815,162,0.707,163,0.707,164,1.176,165,0.707,166,0.658,167,0.815,168,0.707,169,0.815,170,0.707,171,1.096,172,0.815,173,0.707,174,0.924,175,1.219,176,1.176,177,1.264,178,0.707,179,1.176,180,0.707,181,0.707,182,0.733,183,0.707,184,0.707,185,0.815,186,0.707,187,0.759,188,0.787,189,0.682,190,0.787,191,0.815,213,2.787,214,1.096,223,2.047,225,2.047,228,0.844,232,1.045,233,0.683,235,2.131,239,0.806,246,0.62,248,1.362,260,1.084,267,1.022,282,1.816,289,2.865,291,1.761,313,0.855,376,3.009,384,2.615,385,3.888,394,3.795,398,3.47,402,3.888,417,3.493,447,3.47,448,2.242,449,2.442,530,1.979,657,1.419,720,3.295,740,1.565,743,3.137,784,1.084,788,2.855,1019,2.862,1229,1.362,1306,3.009,1313,1.778,1454,4.866,1455,2.1,1456,2.413,1459,4.406,1460,5.376,1461,4.445,1462,3.009,1463,2.626,1464,1.778,1465,3.235,1466,4.406,1467,4.445,1468,4.445,1469,4.051,1470,4.445,1471,4.445,1472,3.326,1473,3.795,1474,3.795,1475,5.16,1476,3.795,1477,3.795,1478,3.795,1479,3.235,1480,3.795,1481,4.445,1482,4.445,1483,4.445,1484,4.445,1485,4.867,1486,4.445,1487,3.789,1488,2.626,1489,2.626,1490,2.626,1491,2.626,1492,2.626,1493,3.789,1494,3.795,1495,2.626,1496,2.626,1497,2.626,1498,3.789,1499,2.626,1500,4.445,1501,4.445,1502,4.867,1503,2.626,1504,2.626,1505,2.626,1506,2.626,1507,3.789,1508,2.626,1509,3.789,1510,2.626,1511,3.789,1512,2.626,1513,2.626,1514,2.626,1515,2.626,1516,2.626,1517,3.789,1518,2.626,1519,4.155,1520,3.235,1521,2.242,1522,2.626,1523,2.626,1524,2.242,1525,2.626,1526,2.626,1527,3.789,1528,3.789,1529,3.789,1530,3.789,1531,2.626,1532,2.626,1533,2.626,1534,3.795,1535,2.413,1536,2.626,1537,2.242,3776,2.912,3781,2.912,3785,2.912,3805,4.828,3806,4.828,3807,3.346,3808,4.828,3809,3.346,3810,3.346,3811,3.346,3812,3.346,3813,3.346,3814,3.346,3815,3.346,3816,3.346,3817,3.346,3818,3.346,3819,3.346,3820,3.346,3821,3.346,3822,3.346,3823,3.346,3824,3.346,3825,3.346,3826,3.346,3827,3.346,3828,3.346,3829,3.346,3830,3.346,3831,3.346,3832,3.346]],["title/interfaces/ModalWindowValidator.html",[213,1.692,1464,2.12]],["body/interfaces/ModalWindowValidator.html",[3,0.121,4,0.158,5,0.105,6,0.2,7,0.103,20,2.254,22,0.357,26,0.174,28,1.207,29,0.918,30,0.561,32,0.226,34,0.561,35,0.014,36,0.346,39,0.392,40,0.598,48,1.568,49,0.845,50,0.704,51,0.2,52,0.284,53,1.531,76,2.361,80,0.688,88,0.008,89,0.01,90,0.008,95,0.297,98,0.321,105,1.237,109,1.098,140,1.237,141,1.098,142,1.563,174,0.762,175,1.193,177,0.952,213,3.136,214,1.059,223,3.136,225,3.136,233,0.665,235,2.685,239,0.875,246,0.665,260,1.512,267,1.046,289,2.361,291,1.907,313,1.017,376,3.224,384,2.155,385,2.76,394,3.128,398,2.612,402,3.588,417,3.581,447,3.993,448,3.128,449,3.069,530,2.76,657,1.979,720,3.224,740,1.701,743,2.361,784,1.512,788,3.588,1019,2.155,1229,1.9,1306,3.224,1313,2.48,1454,3.986,1455,2.93,1456,3.366,1459,4.782,1460,5.29,1461,4.762,1462,3.224,1463,3.664,1464,2.48,1465,3.128,1466,3.128,1467,3.664,1468,3.664,1469,3.986,1470,3.664,1471,3.664,1472,2.361,1473,3.128,1474,3.128,1475,3.664,1476,4.065,1477,3.128,1478,3.128,1479,3.128,1480,3.128,1481,3.664,1482,3.664,1483,3.664,1484,3.664,1485,3.664,1486,5.29,1487,4.762,1488,3.664,1489,3.664,1490,3.664,1491,3.664,1492,3.664,1493,4.762,1494,4.517,1495,3.664,1496,3.664,1497,3.664,1498,4.762,1499,3.664,1500,5.29,1501,5.29,1502,3.664,1503,3.664,1504,3.664,1505,3.664,1506,3.664,1507,4.762,1508,3.664,1509,4.762,1510,3.664,1511,4.762,1512,3.664,1513,3.664,1514,3.664,1515,3.664,1516,3.664,1517,3.664,1518,3.664,1519,3.128,1520,4.065,1521,3.128,1522,3.664,1523,3.664,1524,3.128,1525,3.664,1526,3.664,1527,4.762,1528,4.762,1529,3.664,1530,3.664,1531,3.664,1532,3.664,1533,3.664,1534,3.128,1535,3.366,1536,3.664,1537,3.128,3802,3.366,3833,4.668,3834,4.668]],["title/components/NamespaceEditComponent.html",[98,0.179,178,0.843]],["body/components/NamespaceEditComponent.html",[3,0.119,4,0.119,5,0.102,6,0.231,7,0.123,21,0.977,22,0.317,23,0.612,24,0.554,26,0.17,27,0.554,28,1.089,30,0.554,32,0.286,34,0.655,35,0.014,37,2.112,39,0.375,40,0.586,49,0.929,50,0.69,51,0.136,52,0.28,53,1.511,61,0.404,80,0.612,88,0.008,89,0.01,90,0.008,94,0.513,95,0.36,96,0.513,98,0.3,99,0.967,100,1.408,101,1.115,102,1.115,104,1.038,105,1.723,106,1.221,107,1.115,109,1.408,110,1.002,111,1.459,112,1.408,113,0.967,114,1.725,115,1.115,116,1.115,117,1.002,118,1.115,119,0.967,120,1.115,121,0.967,122,1.115,123,1.115,124,0.967,125,1.002,126,0.684,127,1.791,128,0.967,129,1.115,130,0.933,131,1.015,132,0.967,133,1.115,134,0.967,135,1.115,136,0.967,137,1.115,138,0.933,139,1.725,140,0.933,141,1.076,142,1.551,143,1.115,144,1.002,145,1.115,146,0.967,147,0.967,148,0.933,149,1.115,150,0.933,151,1.002,152,1.115,153,0.967,154,0.766,155,0.967,156,0.899,157,1.115,158,0.967,159,1.115,160,0.967,161,1.115,162,0.967,163,0.967,164,1.459,165,0.967,166,0.899,167,1.115,168,0.967,169,1.115,170,0.967,171,1.359,172,1.115,173,0.967,174,0.977,175,0.899,176,1.459,177,0.933,178,1.497,179,1.975,180,0.967,181,0.967,182,1.002,183,0.967,184,0.967,185,1.115,186,0.967,187,1.038,188,1.076,189,0.933,190,1.076,191,1.115,213,2.83,214,1.359,217,4.19,223,3.002,224,3.182,225,3.002,233,0.621,235,2.765,239,0.819,246,0.401,248,1.862,255,2.112,256,2.431,257,1.79,259,1.79,260,1.482,266,2.872,267,0.611,299,2.872,300,3.03,301,4.013,313,0.904,324,1.312,326,3.299,1625,2.342,1983,2.112,2355,5.106,2361,3.982,2380,5.061,2405,4.813,2408,3.299,3722,5.3,3835,6.783,3836,6.676,3837,7.082,3838,4.575,3839,5.988,3840,4.575,3841,5.988,3842,4.575,3843,4.575,3844,3.982,3845,4.575,3846,4.575,3847,3.982,3848,3.982,3849,4.575,3850,6.676,3851,4.575,3852,3.982,3853,7.082,3854,4.575,3855,4.575,3856,5.212]],["title/components/NamespaceListComponent.html",[98,0.179,180,0.843]],["body/components/NamespaceListComponent.html",[3,0.085,4,0.085,5,0.073,6,0.238,7,0.124,21,0.774,22,0.413,23,0.626,24,0.567,26,0.242,27,0.439,28,1.242,29,1.098,30,0.439,32,0.297,34,0.711,35,0.014,36,0.579,39,0.36,40,0.418,49,0.778,50,0.493,51,0.097,52,0.222,61,0.418,80,0.716,88,0.005,89,0.008,90,0.009,94,0.762,95,0.369,96,0.762,98,0.251,99,0.69,100,1.116,101,0.796,102,0.796,104,0.741,105,1.689,106,0.967,107,0.796,109,1.116,110,0.715,111,1.156,112,1.116,113,0.69,114,1.494,115,0.796,116,0.796,117,0.715,118,0.796,119,0.69,120,0.796,121,0.69,122,0.796,123,0.796,124,0.69,125,0.715,126,0.63,127,1.586,128,0.69,129,0.796,130,0.666,131,0.947,132,0.69,133,0.796,134,0.69,135,0.796,136,0.69,137,0.796,138,0.666,139,1.494,140,0.666,141,0.768,142,1.343,143,0.796,144,0.715,145,0.796,146,0.69,147,0.69,148,0.666,149,0.796,150,0.666,151,0.715,152,0.796,153,0.69,154,0.712,155,0.69,156,0.642,157,0.796,158,0.69,159,0.796,160,0.69,161,0.796,162,0.69,163,0.69,164,1.156,165,0.69,166,1.098,167,0.796,168,0.69,169,0.796,170,0.69,171,1.077,172,0.796,173,0.69,174,0.774,175,0.642,176,1.156,177,1.429,178,1.481,179,1.835,180,1.296,181,0.69,182,0.715,183,0.69,184,0.69,185,0.796,186,0.69,187,0.741,188,0.768,189,0.666,190,0.768,191,0.796,214,1.077,232,2.122,233,0.653,239,0.752,246,0.68,256,1.736,257,1.278,259,1.278,260,1.058,267,0.819,276,3.257,282,1.785,291,1.361,294,2.655,300,1.653,313,1.025,315,2.05,324,0.642,395,3.126,453,0.533,472,0.824,765,1.932,842,1.41,1082,2.355,1096,6.281,1138,1.444,1181,2.564,1183,2.564,1347,3.421,1373,5.054,1398,3.179,1399,3.179,1404,3.179,1405,2.189,1406,3.744,1408,3.179,1417,2.189,1418,3.179,1426,3.179,1427,2.369,1429,2.355,1430,2.189,1431,2.189,1625,1.856,1699,1.385,1727,2.189,1753,2.189,2054,1.736,2355,4.696,2380,5.088,2405,3.421,2408,5.362,2409,3.724,2532,1.653,2533,1.653,3247,1.932,3335,5.111,3389,5.502,3434,5.111,3517,2.564,3518,4.129,3519,4.862,3520,4.862,3523,5.336,3528,5.336,3529,5.336,3531,5.336,3533,5.336,3534,2.843,3549,2.843,3550,4.129,3558,2.843,3559,2.843,3561,2.843,3562,2.843,3566,6.471,3567,4.862,3568,2.843,3569,2.564,3571,4.129,3572,4.129,3573,4.862,3576,4.862,3577,2.843,3578,2.843,3579,2.843,3722,4.421,3847,4.129,3848,2.843,3852,4.129,3856,4.129,3857,5.587,3858,4.745,3859,4.745,3860,6.132,3861,6.132,3862,4.745,3863,4.745,3864,4.745,3865,3.267,3866,4.745,3867,3.267,3868,3.267,3869,4.745,3870,3.267,3871,3.267,3872,3.267,3873,3.267,3874,4.745,3875,3.267,3876,4.745,3877,3.267,3878,3.267,3879,3.267,3880,4.745,3881,3.267,3882,3.267,3883,3.267,3884,3.267,3885,6.512,3886,6.132,3887,5.587,3888,3.267,3889,4.745,3890,3.267,3891,3.267,3892,3.267,3893,3.267,3894,3.267,3895,3.267,3896,3.267,3897,3.267,3898,3.267,3899,3.267,3900,3.267,3901,3.267,3902,3.267,3903,3.267,3904,3.267,3905,3.267,3906,3.267,3907,4.745,3908,4.745,3909,4.745,3910,4.745,3911,4.745]],["title/classes/NamespaceModel.html",[52,0.186,2380,2.505]],["body/classes/NamespaceModel.html",[3,0.074,4,0.074,5,0.063,6,0.217,7,0.112,10,1.199,21,0.838,22,0.428,23,0.659,24,0.596,26,0.105,27,0.394,28,1.124,30,0.394,32,0.267,34,0.529,35,0.014,36,0.609,39,0.325,50,0.427,51,0.152,52,0.24,61,0.368,70,1.776,80,0.828,88,0.005,89,0.007,90,0.005,94,0.317,95,0.362,96,0.317,126,0.735,131,0.48,154,0.415,204,2.27,218,1.605,233,0.649,237,1.251,239,0.865,246,0.714,257,1.107,262,1.306,267,1.018,274,1.503,313,1.084,317,1.896,320,1.605,324,1.009,332,3.103,334,2.221,339,2.04,352,1.896,359,3.831,453,1.124,461,2.702,472,1.813,488,4.201,657,1.199,698,2.04,699,1.791,744,1.152,801,1.723,818,0.74,842,0.714,872,2.873,873,3.036,889,2.677,890,1.431,891,2.221,892,2.221,893,2.221,894,2.221,896,1.946,913,1.896,932,1.896,943,1.251,985,2.221,1001,2.04,1011,3.199,1016,1.431,1111,2.221,1138,1.251,1165,2.04,1338,2.221,1377,4.11,1389,2.266,1391,4.047,1392,1.896,1397,3.712,1427,1.808,1547,3.712,1548,2.462,1551,4.975,1562,3.712,1563,2.462,1564,5.338,1565,4.469,1573,2.462,1574,4.975,1581,1.932,1584,3.076,1586,3.712,1594,3.076,1602,2.266,1606,4.469,1610,2.462,1625,1.668,1626,3.712,1627,2.221,1639,2.462,1640,4.469,1646,2.462,1648,4.975,1651,2.462,1659,1.152,1673,2.04,1714,2.221,1769,2.522,1872,1.896,1983,1.306,2332,1.896,2334,2.462,2355,2.04,2380,4.85,2392,2.462,2397,3.712,2405,4.122,2408,4.122,2409,3.348,2506,3.348,2513,2.462,2532,1.431,2533,1.431,2755,2.462,2798,2.462,2874,3.076,2964,2.221,2967,1.896,2979,2.221,2980,3.348,3001,2.221,3004,2.221,3048,2.221,3075,2.221,3093,2.462,3095,2.462,3096,2.462,3097,2.462,3112,2.462,3118,2.462,3307,2.462,3322,4.03,3722,4.423,3741,5.338,3912,6.35,3913,5.134,3914,5.134,3915,5.134,3916,5.134,3917,4.266,3918,5.717,3919,5.717,3920,2.829,3921,2.829,3922,2.829,3923,2.829,3924,5.134,3925,2.829,3926,4.266,3927,2.829,3928,4.266,3929,2.829,3930,2.829,3931,2.829,3932,2.829,3933,2.829,3934,2.829,3935,2.829,3936,2.829,3937,2.829,3938,2.829,3939,2.829,3940,2.829,3941,2.829,3942,7.296,3943,2.829,3944,2.829,3945,2.829,3946,2.829,3947,2.829,3948,2.829,3949,2.829,3950,4.266,3951,2.829,3952,2.829,3953,2.829,3954,2.829,3955,2.829,3956,5.134,3957,2.829,3958,2.829,3959,4.266,3960,2.829,3961,2.829,3962,4.266,3963,2.829,3964,2.829,3965,2.829,3966,2.829,3967,2.829,3968,2.829,3969,2.829,3970,4.266,3971,2.829,3972,2.829,3973,6.448,3974,6.134,3975,2.829,3976,2.462,3977,6.448,3978,2.829,3979,5.134,3980,4.266,3981,2.829,3982,2.829,3983,4.266,3984,2.829,3985,2.829,3986,2.829,3987,2.829,3988,2.829,3989,2.829,3990,2.829,3991,5.134,3992,5.717,3993,6.134,3994,5.134,3995,5.717,3996,4.266,3997,2.829,3998,4.266,3999,4.266,4000,4.266,4001,4.266,4002,5.134,4003,2.829,4004,2.829,4005,2.829,4006,2.829,4007,2.829,4008,2.829,4009,2.829,4010,2.829,4011,5.717,4012,2.829,4013,4.266,4014,2.829,4015,4.266,4016,2.829,4017,4.266,4018,4.266,4019,4.266,4020,4.266,4021,2.829,4022,2.829,4023,5.717,4024,4.266,4025,2.829,4026,4.266,4027,2.829,4028,5.717,4029,4.266,4030,2.829,4031,2.829,4032,4.266,4033,2.829,4034,2.829,4035,2.221,4036,2.829,4037,2.829,4038,2.829,4039,2.829,4040,2.829,4041,2.829,4042,2.829,4043,2.829,4044,2.829,4045,4.266,4046,2.829,4047,2.829,4048,5.134,4049,2.829,4050,2.829,4051,2.829,4052,2.829,4053,2.829,4054,2.829,4055,2.829,4056,2.829,4057,2.829,4058,2.829,4059,2.829,4060,2.829,4061,2.829,4062,2.829,4063,2.462,4064,2.829,4065,2.829,4066,2.829,4067,2.829,4068,2.829,4069,2.829,4070,2.829,4071,2.829,4072,2.829,4073,2.829,4074,2.829,4075,2.829,4076,2.829,4077,2.829]],["title/components/PropertyFieldEditComponent.html",[98,0.179,181,0.843]],["body/components/PropertyFieldEditComponent.html",[3,0.159,4,0.1,5,0.086,6,0.236,7,0.123,21,0.869,22,0.408,23,0.544,24,0.693,26,0.143,27,0.493,28,0.997,30,0.493,32,0.294,34,0.663,35,0.014,36,0.489,39,0.38,40,0.493,49,0.535,50,0.58,51,0.114,52,0.249,53,1.344,61,0.454,88,0.006,89,0.009,90,0.006,94,0.598,95,0.381,96,0.598,98,0.275,99,0.813,100,1.253,101,0.937,102,0.937,104,0.873,105,1.707,106,1.086,107,0.937,109,1.253,110,0.842,111,1.298,112,1.253,113,0.813,114,1.607,115,0.937,116,0.937,117,0.842,118,0.937,119,0.813,120,0.937,121,0.813,122,0.937,123,0.937,124,0.813,125,0.842,126,0.739,127,1.688,128,0.813,129,0.937,130,0.784,131,0.903,132,0.813,133,0.937,134,0.813,135,0.937,136,0.813,137,0.937,138,0.784,139,1.607,140,0.784,141,0.904,142,1.445,143,0.937,144,0.842,145,0.937,146,0.813,147,0.813,148,0.784,149,0.937,150,0.784,151,0.842,152,0.937,153,0.813,154,0.74,155,0.813,156,0.756,157,0.937,158,0.813,159,0.937,160,0.813,161,0.937,162,0.813,163,0.813,164,1.298,165,0.813,166,0.756,167,0.937,168,0.813,169,0.937,170,0.813,171,1.209,172,0.937,173,0.813,174,0.869,175,0.756,176,1.298,177,1.57,178,0.813,179,1.298,180,0.813,181,1.394,182,1.666,183,0.813,184,0.813,185,0.937,186,0.813,187,0.873,188,0.904,189,0.784,190,0.904,191,0.937,213,2.591,214,1.209,216,4.346,217,3.836,223,2.797,224,2.83,225,2.797,232,1.201,233,0.579,235,2.606,236,3.841,237,3.169,239,0.919,246,0.536,248,1.565,255,1.775,256,2.043,257,1.504,258,1.504,259,1.504,260,1.246,262,1.775,263,4.095,266,2.414,267,0.957,269,2.773,274,3.506,299,2.414,300,2.695,301,3.57,302,5.626,303,5.319,304,4.797,305,5.178,306,4.181,307,3.347,309,5.742,310,3.018,313,1.045,314,4.181,315,4.141,316,5.178,317,4.421,318,4.636,319,3.344,320,2.004,321,4.181,322,3.347,323,3.018,324,1.202,325,3.018,326,2.773,328,3.018,329,3.018,330,3.018,331,2.773,332,1.946,333,4.797,334,3.018,335,5.319,336,3.347,337,4.636,338,2.695,339,2.773,340,3.347,341,4.636,342,2.773,344,3.841,345,3.018,346,3.018,347,3.018,348,3.018,351,3.347,353,4.636,354,4.636,355,4.011,356,3.185,357,4.181,358,4.181,359,3.57,360,2.981,361,2.981,362,2.83,363,3.692,364,3.692,365,4.181,366,3.57,367,4.181,368,4.181,369,4.181,370,4.181,371,5.879,453,0.869,604,2.981,699,1.858,932,2.577,2201,4.636,2430,3.347,3256,4.181,4078,6.921,4079,6.598,4080,3.846,4081,3.846,4082,3.846,4083,5.327,4084,5.327,4085,5.327]],["title/components/TemplateEditComponent.html",[98,0.179,183,0.843]],["body/components/TemplateEditComponent.html",[3,0.132,4,0.132,5,0.113,6,0.225,7,0.122,21,1.043,22,0.339,23,0.517,24,0.468,26,0.189,27,0.591,28,1.143,30,0.591,32,0.274,34,0.591,35,0.014,36,0.474,39,0.339,40,0.649,51,0.15,52,0.299,53,1.614,61,0.4,88,0.008,89,0.011,90,0.008,95,0.313,98,0.315,99,1.071,100,1.504,101,1.234,102,1.234,104,1.15,105,1.732,106,1.303,107,1.234,109,1.822,110,1.11,111,1.558,112,1.504,113,1.071,114,1.792,115,1.234,116,1.234,117,1.11,118,1.234,119,1.071,120,1.234,121,1.071,122,1.234,123,1.234,124,1.071,125,1.11,126,0.698,127,1.848,128,1.071,129,1.234,130,1.033,131,1.084,132,1.071,133,1.234,134,1.071,135,1.234,136,1.071,137,1.234,138,1.033,139,1.792,140,1.033,141,1.191,142,1.612,143,1.234,144,1.11,145,1.234,146,1.071,147,1.071,148,1.033,149,1.234,150,1.033,151,1.11,152,1.234,153,1.071,154,0.781,155,1.071,156,0.996,157,1.234,158,1.071,159,1.234,160,1.071,161,1.234,162,1.071,163,1.071,164,1.558,165,1.071,166,0.996,167,1.234,168,1.071,169,1.234,170,1.071,171,1.451,172,1.234,173,1.071,174,1.043,175,0.996,176,1.558,177,1.033,178,1.071,179,1.558,180,1.071,181,1.071,182,1.11,183,1.555,184,1.071,185,1.234,186,1.071,187,1.15,188,1.191,189,1.033,190,1.191,191,1.234,213,2.97,214,1.451,217,4.397,223,3.119,225,3.119,235,2.854,239,0.784,246,0.561,248,2.062,255,2.339,259,1.982,260,1.641,266,3.18,299,3.18,300,3.235,301,4.285,313,0.765,331,3.653,3081,6.097,3844,4.409,4086,6.603,4087,6.394,4088,5.067,4089,5.067]],["title/classes/TextNode.html",[52,0.186,1871,2.505]],["body/classes/TextNode.html",[3,0.064,4,0.138,5,0.055,6,0.181,7,0.093,22,0.415,23,0.39,24,0.353,26,0.262,27,0.353,28,1.073,29,0.75,30,0.353,32,0.257,34,0.531,35,0.014,36,0.594,39,0.304,48,0.822,49,0.653,50,0.369,51,0.171,52,0.268,61,0.14,80,0.816,88,0.004,89,0.006,90,0.004,94,0.274,95,0.298,96,0.274,126,0.593,148,0.499,154,0.559,228,0.617,233,0.335,246,0.558,272,1.435,273,1.181,291,0.929,313,0.369,320,1.435,324,1.384,338,1.93,384,2.446,439,2.256,449,1.237,453,1.292,461,1.764,472,2.062,491,1.3,541,3.035,558,4.914,563,1.181,589,1.369,592,1.446,635,0.996,645,1.237,646,1.181,657,1.617,660,1.446,667,2.395,699,2.454,740,0.617,744,1.553,783,0.853,785,1.3,795,1.553,801,2.121,818,0.639,842,1.743,890,1.237,896,1.848,943,1.081,1016,1.93,1112,1.612,1167,3.557,1174,0.957,1188,1.639,1193,3.849,1229,2.156,1262,0.996,1427,1.037,1440,1.535,1462,2.027,1553,3.133,1581,0.92,1588,2.256,1625,2.072,1658,1.081,1659,1.553,1666,0.92,1667,1.93,1699,1.617,1719,0.92,1721,1.553,1747,1.639,1748,3.143,1769,3.133,1794,1.687,1807,2.38,1816,1.535,1851,4.603,1852,1.639,1853,4.388,1854,3.143,1855,3.82,1856,4.583,1857,4.981,1858,4.981,1859,1.764,1861,4.142,1866,1.764,1867,3.99,1868,5.342,1869,5.649,1870,1.764,1871,5.08,1872,3.143,1873,3.82,1874,4.421,1875,1.764,1876,1.764,1877,1.764,1878,1.764,1879,4.875,1880,1.764,1881,1.764,1882,1.446,1883,1.764,1884,1.764,1885,1.764,1886,1.764,1887,1.446,1888,1.764,1889,1.764,1890,1.764,1891,1.764,1892,1.764,1893,1.764,1894,1.764,1895,1.764,1896,1.764,1897,2.751,1898,1.764,1899,2.751,1900,1.764,1901,3.382,1902,1.764,1903,1.764,1904,1.764,1905,4.871,1906,4.142,1907,4.142,1908,3.82,1909,1.764,1910,1.764,1911,3.888,1912,1.764,1913,2.751,1914,3.82,1915,1.764,1916,5.391,1917,4.981,1918,4.388,1919,5.07,1920,3.382,1921,1.764,1922,1.764,1923,4.142,1924,1.764,1925,3.382,1926,2.751,1927,1.764,1928,4.741,1929,4.142,1930,5.226,1931,1.764,1932,3.382,1933,1.764,1934,2.751,1935,2.751,1936,3.82,1937,2.751,1938,2.395,1939,2.751,1940,4.142,1941,2.556,1942,2.556,1943,1.764,1944,1.764,1945,1.764,1946,4.741,1947,2.751,1948,4.583,1949,1.764,1950,3.382,1951,4.603,1952,2.751,1953,4.388,1954,1.764,1955,5.155,1956,3.82,1957,2.751,1958,2.751,1959,2.395,1960,3.382,1961,2.751,1962,2.751,1963,1.764,1964,2.751,1965,2.751,1966,3.82,1967,2.751,1968,2.751,1969,3.143,1970,1.764,1971,1.764,1972,1.764,1973,1.764,1974,1.764,1975,3.382,1976,1.764,1977,4.142,1978,1.764,1979,4.388,1980,3.133,1981,4.388,1982,3.382,1983,2.165,1984,3.143,1985,3.382,1986,1.764,1987,5.155,1988,5.155,1989,4.388,1990,3.382,1991,1.764,1992,4.583,1993,1.764,1994,4.388,1995,1.764,1996,1.764,1997,3.382,1998,1.764,1999,3.382,2000,3.382,2001,3.382,2002,1.764,2003,1.764,2004,2.751,2005,2.751,2006,2.751,2007,1.764,2008,1.764,2009,5.226,2010,2.751,2011,1.764,2012,1.764,2013,1.764,2014,1.764,2015,1.93,2016,1.446,2017,2.135,2018,1.639,2019,1.764,2020,1.764,2021,1.764,2022,1.764,2023,1.764,2024,1.535,2025,1.764,2026,2.027,2027,1.764,2028,1.764,2029,1.764,2030,2.751,2031,1.639,2032,1.764,2033,1.764,2034,2.751,2035,3.82,2036,3.82,2037,1.764,2038,1.764,2039,3.382,2040,1.764,2041,2.751,2042,2.751,2043,1.764,2044,4.741,2045,2.751,2046,1.764,2047,1.764,2048,1.764,2049,2.751,2050,1.764,2051,2.751,2052,1.764,2053,1.764,2054,1.3,2055,1.764,2056,1.764,2057,1.639,2058,1.237,2059,1.764,2060,1.764,2061,1.764,2062,1.764,2063,1.764,2064,2.751,2065,1.764,2066,2.751,2439,4.999,2440,2.129,2441,2.129,2444,2.129,2445,2.129,2446,2.129,4090,2.446,4091,3.815,4092,2.446,4093,2.446,4094,2.446]],["title/pipes/ToErrorIconClassPipe.html",[1050,2.674,4095,2.36]],["body/pipes/ToErrorIconClassPipe.html",[3,0.184,4,0.156,5,0.134,6,0.21,7,0.108,22,0.413,24,0.553,30,0.553,32,0.223,34,0.553,35,0.014,36,0.525,39,0.375,40,0.767,51,0.178,52,0.28,53,1.511,61,0.43,88,0.01,89,0.012,90,0.01,94,0.672,95,0.293,96,0.672,104,1.359,174,1.23,740,1.967,748,5.21,783,2.087,784,1.939,795,2.436,796,3.757,797,4.011,1050,4.745,1118,4.745,1355,4.444,1370,5.21,1757,5.052,4095,4.187,4096,5.986,4097,6.162,4098,5.21,4099,7.08,4100,5.986,4101,7.08,4102,5.986,4103,7.08,4104,7.54,4105,7.017,4106,5.986]],["title/components/ToolbarComponent.html",[98,0.179,184,0.843]],["body/components/ToolbarComponent.html",[3,0.065,4,0.065,5,0.168,6,0.233,7,0.122,20,2.588,21,0.776,22,0.381,23,0.255,24,0.231,26,0.093,27,0.359,28,1.243,29,0.935,30,0.359,32,0.291,34,0.694,35,0.014,36,0.533,39,0.368,40,0.32,47,1.479,49,0.662,50,0.377,51,0.197,52,0.222,53,0.98,57,1.479,61,0.42,65,4.185,69,2.103,76,1.964,77,2.601,80,0.695,88,0.004,89,0.006,90,0.004,94,0.763,95,0.364,96,0.763,98,0.214,99,0.528,100,0.913,101,0.609,102,0.609,104,0.568,105,1.653,106,1.35,107,0.609,109,1.365,110,0.548,111,0.946,112,0.913,113,0.528,114,1.306,115,0.609,116,0.609,117,0.548,118,0.609,119,0.528,120,0.609,121,0.528,122,0.609,123,0.609,124,0.528,125,0.548,126,0.581,127,1.414,128,0.528,129,0.609,130,0.51,131,0.806,132,0.528,133,0.609,134,0.528,135,0.609,136,0.528,137,0.609,138,0.51,139,1.306,140,0.51,141,0.588,142,1.451,143,0.609,144,1.404,145,0.609,146,0.528,147,0.528,148,0.51,149,0.609,150,0.51,151,0.548,152,0.609,153,0.528,154,0.746,155,0.528,156,1.539,157,0.609,158,0.528,159,0.609,160,0.528,161,0.609,162,0.528,163,0.528,164,0.946,165,0.528,166,0.492,167,0.609,168,0.528,169,0.609,170,0.528,171,0.881,172,0.609,173,0.528,174,1.081,175,0.492,176,0.946,177,1.35,178,0.528,179,0.946,180,0.528,181,0.528,182,0.548,183,1.354,184,1.226,185,0.609,186,0.528,187,0.568,188,0.588,189,0.51,190,0.588,191,0.609,199,3.378,208,1.803,214,0.881,232,2.245,233,0.653,237,1.106,239,0.712,246,0.509,248,1.018,255,1.154,260,0.81,262,1.154,267,0.856,272,1.46,274,1.329,280,3.046,282,1.46,291,1.159,294,4.022,297,2.436,300,1.265,313,0.377,314,1.963,315,1.57,316,3.046,324,0.935,356,1.874,375,2.196,392,1.963,395,2.662,399,2.475,400,2.177,453,0.875,461,2.017,541,2.196,563,2.588,660,2.295,671,3.632,699,1.659,705,2.436,740,1.353,743,3.517,744,1.018,758,2.881,769,1.479,783,0.872,784,0.81,792,3.592,793,2.813,795,2.182,801,1.851,873,1.479,906,3.094,910,3.046,911,3.046,913,1.676,914,1.963,915,1.963,926,3.541,948,1.963,983,2.436,1016,3.441,1018,4.428,1019,2.958,1020,2.172,1037,1.676,1082,1.803,1120,2.177,1144,5.012,1146,3.378,1169,3.733,1171,2.601,1172,3.378,1174,2.27,1175,5.345,1176,2.799,1203,3.733,1212,3.046,1217,1.803,1218,1.803,1262,2.768,1294,2.436,1346,3.733,1347,2.799,1355,1.57,1360,1.676,1363,3.046,1364,3.378,1396,1.803,1398,3.187,1399,3.187,1404,3.187,1405,1.676,1406,3.592,1408,2.601,1417,1.676,1418,3.187,1425,2.177,1426,3.187,1427,1.646,1429,2.799,1430,2.601,1431,2.601,1472,2.406,1476,2.601,1534,3.592,1535,2.799,1594,1.803,1658,1.716,1659,2.182,1666,0.941,1695,5.051,1699,1.06,1719,0.941,1721,2.182,1753,4.439,1794,1.106,1842,1.803,1969,1.676,2015,2.712,2031,2.601,2058,2.712,2167,3.046,2175,1.676,2239,3.866,2242,3.866,2254,3.046,2255,3.046,2257,3.046,2258,3.046,2259,2.799,2472,5.577,2473,5.345,2479,3.378,2480,4.14,2486,4.666,2487,3.378,2496,3.378,2503,3.378,2511,4.666,2512,5.765,2540,2.177,2559,2.177,2583,4.666,2600,2.177,2615,3.378,2620,4.14,2626,2.177,2627,3.378,2676,3.378,2787,4.14,2839,1.207,2923,1.479,2924,1.676,3163,4.14,3261,2.177,3610,2.177,3753,3.378,4105,4.666,4107,2.177,4108,3.881,4109,3.881,4110,4.757,4111,4.757,4112,5.804,4113,5.361,4114,6.142,4115,3.881,4116,5.361,4117,3.881,4118,3.881,4119,5.361,4120,3.881,4121,3.881,4122,3.881,4123,3.881,4124,2.501,4125,2.501,4126,2.501,4127,5.361,4128,5.361,4129,2.501,4130,2.501,4131,3.881,4132,2.501,4133,3.881,4134,2.501,4135,3.378,4136,2.501,4137,3.881,4138,2.501,4139,3.881,4140,3.881,4141,2.501,4142,3.881,4143,3.378,4144,2.501,4145,3.881,4146,2.501,4147,3.378,4148,2.501,4149,3.881,4150,2.501,4151,3.881,4152,3.881,4153,3.881,4154,2.501,4155,3.378,4156,3.881,4157,3.881,4158,2.501,4159,3.881,4160,2.501,4161,3.881,4162,3.881,4163,3.881,4164,2.501,4165,3.881,4166,2.501,4167,2.501,4168,2.501,4169,2.501,4170,2.501,4171,2.501,4172,2.501,4173,2.501,4174,2.501,4175,2.501,4176,2.501,4177,2.501,4178,2.501,4179,2.501,4180,2.501,4181,2.501,4182,2.501,4183,2.501,4184,4.757,4185,2.501,4186,2.501,4187,4.757,4188,2.501,4189,3.881,4190,3.881,4191,2.501,4192,2.501,4193,2.501,4194,2.501,4195,2.501,4196,2.501,4197,3.881,4198,2.501,4199,3.881,4200,3.881,4201,2.501,4202,2.501,4203,5.804,4204,5.804,4205,2.501,4206,2.501,4207,3.046,4208,3.881,4209,3.881,4210,2.501,4211,2.501,4212,3.881,4213,2.501,4214,3.881,4215,2.501,4216,2.501,4217,2.501,4218,2.501,4219,2.501,4220,2.501,4221,2.501,4222,2.501,4223,5.361,4224,2.501,4225,2.501,4226,2.501,4227,2.501,4228,2.501,4229,3.881,4230,2.501,4231,2.501,4232,3.881,4233,2.501,4234,2.501,4235,3.881,4236,3.881,4237,3.881,4238,2.501,4239,2.501,4240,2.501,4241,2.501,4242,2.501,4243,2.501,4244,2.501,4245,2.501,4246,3.881,4247,3.881,4248,3.881]],["title/classes/TransitionDelimiterModel.html",[52,0.186,3226,2.674]],["body/classes/TransitionDelimiterModel.html",[3,0.113,4,0.113,5,0.098,6,0.221,7,0.114,22,0.418,23,0.739,24,0.642,26,0.162,27,0.536,32,0.283,35,0.014,36,0.603,39,0.307,51,0.206,52,0.271,61,0.249,80,0.445,88,0.007,89,0.01,90,0.007,94,0.489,95,0.354,96,0.489,126,0.383,154,0.424,224,2.316,228,1.645,239,0.887,246,0.653,267,0.582,271,3.082,453,0.711,706,5.454,744,2.828,758,2.361,772,5.217,801,1.314,818,1.14,842,1.1,896,1.895,1137,3.421,1167,3.648,1817,3.764,1874,2.578,1887,3.43,1983,3.434,2070,2.459,2091,3.43,2092,3.43,2093,3.43,2190,6.053,2221,2.205,2839,2.105,2917,3.421,2923,3.855,2926,5.116,2965,2.578,3221,3.421,3226,4.656,3239,5.088,3240,3.421,3242,3.421,3429,5.116,3430,4.7,3431,4.7,3464,3.143,4095,3.855,4207,3.421,4249,3.143,4250,6.608,4251,5.96,4252,6.608,4253,6.608,4254,4.359,4255,5.8,4256,5.673,4257,4.359,4258,4.359,4259,4.359,4260,3.794,4261,4.552,4262,5.116,4263,3.421,4264,5.116,4265,5.116,4266,5.116,4267,5.116,4268,5.116,4269,5.116,4270,3.421,4271,5.116,4272,5.116,4273,5.116,4274,5.116,4275,3.421,4276,3.794,4277,3.794,4278,3.794,4279,3.794,4280,3.794,4281,3.794,4282,3.794,4283,3.794,4284,5.048,4285,7.127,4286,3.794,4287,3.794,4288,3.794,4289,3.794,4290,3.794,4291,3.794,4292,3.794,4293,3.794,4294,3.794,4295,3.794,4296,3.794,4297,3.794,4298,3.794,4299,3.794,4300,3.794,4301,3.794,4302,3.794,4303,3.794,4304,3.794,4305,3.794,4306,5.048,4307,3.794,4308,3.794,4309,3.794,4310,5.048,4311,5.048,4312,3.794,4313,6.047,4314,3.794,4315,3.794,4316,6.712,4317,5.673,4318,3.794,4319,3.794,4320,3.794,4321,3.794,4322,3.794,4323,3.794]],["title/classes/TransitionModel.html",[52,0.186,2965,2.36]],["body/classes/TransitionModel.html",[3,0.105,4,0.105,5,0.09,6,0.242,7,0.125,22,0.412,23,0.76,24,0.672,26,0.15,27,0.508,30,0.508,32,0.304,34,0.7,35,0.014,36,0.59,39,0.291,51,0.2,52,0.257,61,0.23,80,0.411,88,0.007,89,0.009,90,0.007,94,0.451,95,0.371,96,0.451,126,0.353,154,0.534,224,3.573,228,1.697,233,0.353,239,0.953,246,0.618,267,0.734,271,2.919,453,0.656,706,5.943,744,2.737,758,2.236,772,5.076,801,1.212,818,1.052,842,1.387,896,2.233,1137,3.157,1167,3.502,1817,3.676,1874,3.7,1887,3.7,1983,3.355,2070,2.653,2091,3.249,2092,3.249,2093,3.249,2190,5.943,2221,2.035,2839,1.942,2917,4.911,2923,4.297,2926,4.911,2965,3.249,3221,4.313,3226,4.506,3239,4.717,3240,3.157,3242,3.157,3429,5.278,3430,4.512,3431,4.512,3464,2.901,4095,3.7,4207,4.911,4249,2.901,4250,5.446,4251,5.704,4252,5.446,4253,5.446,4256,5.446,4260,3.501,4261,4.313,4262,4.911,4263,3.157,4264,4.911,4265,4.911,4266,4.911,4267,4.911,4268,4.911,4269,4.911,4270,3.157,4271,4.911,4272,4.911,4273,4.911,4274,4.911,4275,3.157,4276,3.501,4277,3.501,4278,3.501,4279,3.501,4280,5.446,4281,5.446,4282,5.446,4283,3.501,4284,4.782,4285,7.061,4286,3.501,4287,3.501,4288,3.501,4289,3.501,4290,3.501,4291,3.501,4292,3.501,4293,3.501,4294,3.501,4295,3.501,4296,3.501,4297,3.501,4298,3.501,4299,3.501,4300,3.501,4301,3.501,4302,3.501,4303,3.501,4304,3.501,4305,3.501,4306,4.782,4307,3.501,4308,4.782,4309,3.501,4310,4.782,4311,4.782,4312,5.852,4313,5.852,4314,3.501,4315,3.501,4316,6.59,4317,5.446,4318,3.501,4319,5.852,4320,5.852,4321,5.852,4322,5.852,4323,5.852,4324,5.495,4325,5.495,4326,4.023,4327,4.023,4328,4.023,4329,4.023,4330,4.023,4331,4.023,4332,4.023,4333,4.023,4334,4.023,4335,4.023,4336,4.023,4337,4.023,4338,4.023,4339,4.023,4340,4.023]],["title/components/TransitionSelectionComponent.html",[98,0.179,186,0.843]],["body/components/TransitionSelectionComponent.html",[3,0.091,4,0.13,5,0.078,6,0.231,7,0.121,12,2.75,21,0.814,22,0.405,23,0.51,24,0.324,26,0.216,27,0.461,29,1.143,30,0.461,32,0.287,34,0.662,35,0.014,36,0.431,39,0.4,40,0.449,49,0.809,50,0.529,51,0.104,52,0.233,53,1.259,61,0.382,80,0.806,88,0.006,89,0.008,90,0.006,94,0.56,95,0.35,96,0.56,98,0.261,99,0.74,100,1.173,101,0.854,102,0.854,104,0.795,105,1.697,106,1.017,107,0.854,109,1.173,110,0.767,111,1.216,112,1.173,113,0.74,114,1.543,115,0.854,116,0.854,117,0.767,118,0.854,119,0.74,120,0.854,121,0.74,122,0.854,123,0.854,124,0.74,125,0.767,126,0.7,127,1.63,128,0.74,129,0.854,130,0.714,131,0.985,132,0.74,133,0.854,134,0.74,135,0.854,136,0.74,137,0.854,138,0.714,139,1.543,140,0.714,141,0.824,142,1.387,143,0.854,144,0.767,145,0.854,146,0.74,147,0.74,148,0.714,149,0.854,150,1.459,151,1.093,152,0.854,153,0.74,154,0.779,155,0.74,156,1.517,157,0.854,158,0.74,159,0.854,160,0.74,161,0.854,162,0.74,163,0.74,164,1.216,165,0.74,166,0.689,167,0.854,168,0.74,169,0.854,170,0.74,171,1.579,172,0.854,173,0.74,174,0.814,175,0.689,176,1.216,177,1.418,178,0.74,179,1.216,180,0.74,181,0.74,182,0.767,183,0.74,184,0.74,185,0.854,186,1.338,187,1.519,188,0.824,189,0.714,190,1.173,191,0.854,214,1.132,232,1.559,233,0.587,239,0.713,246,0.438,259,1.371,260,1.135,267,0.776,273,1.692,276,3.168,282,1.877,291,1.744,297,3.648,313,0.753,319,2.199,375,2.683,395,3.252,399,2.923,449,1.773,453,1.092,461,1.877,472,0.884,474,2.524,541,2.683,604,3.252,660,2.072,689,4.561,699,1.74,740,0.884,744,1.426,758,1.426,783,1.222,784,1.135,793,2.072,795,1.426,801,1.056,842,1.598,882,3.648,1020,1.961,1103,3.049,1104,6.108,1112,1.777,1113,1.269,1138,1.549,1262,1.426,1294,2.199,1398,2.348,1399,2.348,1404,2.348,1405,2.348,1406,3.344,1408,3.344,1417,2.348,1418,2.348,1426,2.348,1469,3.958,1549,3.049,1625,1.371,1658,2.206,1659,1.426,1666,1.318,1667,1.773,1719,1.318,1721,1.426,1794,1.549,2015,1.773,2016,2.072,2017,1.961,2018,2.348,2070,2.685,2078,3.365,2089,4.114,2090,3.088,2096,3.648,2100,1.961,2104,2.199,2105,2.072,2112,2.951,2175,3.344,2197,2.348,2208,4.343,2209,4.343,2220,2.199,2221,1.773,2532,1.773,2533,1.773,2801,2.651,2839,2.409,2861,2.348,2862,2.348,2923,2.072,2924,2.348,3178,3.049,3184,4.561,3204,3.598,3205,4.561,3206,3.916,3239,2.348,3245,3.049,3247,2.072,3256,2.75,3267,2.75,3268,2.75,3270,2.75,3283,5.058,3287,4.343,3291,4.343,3293,4.343,3299,4.343,3303,3.049,3305,3.049,3308,4.343,3310,3.916,3314,4.343,3317,3.049,3318,3.049,3319,3.049,3320,3.049,3321,3.049,3322,2.75,3323,3.049,3324,3.049,3325,3.049,3326,3.049,3327,3.049,3328,3.049,3329,4.343,3425,3.049,3428,5.058,3430,2.527,3431,3.598,3465,3.049,3606,2.75,3607,4.343,3624,3.049,3628,3.049,3976,3.049,4251,2.75,4341,6.957,4342,6.333,4343,6.333,4344,6.333,4345,3.504,4346,3.504,4347,3.504,4348,3.504,4349,3.504,4350,3.504,4351,3.504,4352,3.504,4353,3.504,4354,3.504,4355,3.504,4356,3.504,4357,3.504,4358,5.511,4359,3.504,4360,3.504,4361,3.504,4362,3.504,4363,3.504,4364,4.99,4365,3.504,4366,5.811,4367,3.504,4368,4.99,4369,6.957,4370,4.99,4371,3.504,4372,3.504,4373,3.504,4374,3.504,4375,3.504,4376,3.504,4377,3.504,4378,3.504,4379,3.504,4380,3.049,4381,3.504,4382,3.504,4383,3.504,4384,3.504,4385,4.99,4386,3.504,4387,3.504,4388,3.504,4389,3.504,4390,3.504,4391,3.504,4392,3.504,4393,3.504,4394,4.99]],["title/coverage.html",[4395,4.755]],["body/coverage.html",[0,3.404,1,2.42,5,0.081,6,0.253,7,0.13,8,4.001,9,4.001,35,0.014,49,0.503,52,0.388,56,2.604,62,2.42,71,3.592,88,0.006,89,0.008,90,0.006,95,0.177,98,0.374,99,0.763,103,3.143,113,0.763,117,0.791,119,0.763,121,0.763,124,0.763,126,0.647,128,0.763,130,0.736,131,1.088,132,0.763,134,0.763,136,0.763,138,0.736,140,0.736,144,0.791,146,0.763,147,0.763,150,0.736,153,0.763,155,0.763,156,0.71,158,0.763,160,0.763,162,0.763,163,0.763,165,0.763,166,0.71,168,0.763,170,0.763,171,0.82,173,0.763,174,1.047,175,0.71,177,0.736,178,0.763,180,0.763,181,0.763,183,0.763,184,0.763,186,0.763,189,0.736,195,2.835,196,2.835,202,2.835,206,2.835,211,3.143,212,3.143,213,1.531,237,1.597,276,3.206,277,2.604,278,3.143,298,3.143,299,4.249,324,0.71,373,4.001,374,3.143,437,3.653,453,1.38,589,2.021,594,3.143,632,3.143,634,2.267,635,1.47,636,2.136,637,2.604,641,2.267,654,2.604,717,3.143,740,0.911,817,2.604,819,4.638,872,2.021,874,2.136,877,2.136,889,2.267,1050,2.42,1052,5.066,1053,5.514,1093,3.676,1096,2.835,1102,3.676,1104,2.835,1112,1.013,1114,3.143,1118,2.42,1122,2.835,1124,2.835,1126,2.835,1128,2.835,1130,2.835,1132,2.835,1138,1.597,1139,3.143,1140,4.261,1238,4.437,1239,4.301,1454,4.155,1455,4.249,1464,2.709,1538,2.835,1539,4.437,1654,3.143,1655,3.143,1723,2.835,1798,2.835,1807,1.413,1837,3.143,1851,2.267,1852,4.537,1867,2.267,1871,2.267,1879,2.267,1887,2.136,2054,2.709,2070,1.531,2071,4.029,2072,4.029,2076,2.136,2078,1.919,2088,2.021,2144,3.143,2145,3.143,2350,3.143,2380,2.267,2447,3.143,2448,5.142,2645,3.143,2656,2.835,2657,4.437,2658,4.437,2795,3.143,2801,1.919,2802,4.001,2803,4.001,2810,2.267,2839,2.461,2846,4.001,2855,2.604,2910,2.835,2911,3.143,2949,4.638,2956,2.604,2965,2.136,2967,2.42,3074,3.143,3075,5.038,3175,3.143,3226,2.42,3288,3.143,3330,3.143,3504,4.437,3505,3.143,3517,4.001,3594,3.143,3606,4.001,3648,3.143,3680,2.835,3681,4.437,3794,2.604,3835,3.143,3912,5.142,4078,3.143,4086,3.143,4095,2.136,4097,3.143,4098,3.143,4107,3.143,4249,3.676,4395,3.143,4396,2.835,4397,3.612,4398,7.687,4399,7.823,4400,3.612,4401,3.612,4402,3.612,4403,3.612,4404,3.612,4405,3.612,4406,6.419,4407,6.419,4408,5.098,4409,5.909,4410,5.098,4411,3.612,4412,5.098,4413,3.612,4414,3.612,4415,5.909,4416,5.909,4417,3.612,4418,3.612,4419,5.098,4420,3.612,4421,3.612,4422,5.909,4423,3.612,4424,3.612,4425,3.612,4426,3.612,4427,3.612,4428,3.612,4429,3.612,4430,3.612,4431,5.098,4432,3.612,4433,3.612,4434,3.612,4435,6.419,4436,3.612,4437,7.026,4438,3.612,4439,3.612,4440,5.098,4441,3.612,4442,3.612,4443,3.612,4444,3.612,4445,3.612,4446,3.612,4447,3.612,4448,6.77,4449,3.612,4450,3.612,4451,3.612,4452,3.612,4453,3.612,4454,3.612,4455,3.612,4456,3.612,4457,3.612,4458,4.437,4459,5.098,4460,3.612,4461,3.612,4462,3.612,4463,3.612,4464,3.612,4465,3.612,4466,3.612,4467,3.612,4468,3.612,4469,3.612,4470,3.612,4471,3.612,4472,3.612,4473,3.612,4474,3.612,4475,3.612,4476,3.612,4477,3.143,4478,3.143,4479,3.143,4480,3.143,4481,3.612]],["title/dependencies.html",[15,2.396,1043,3.015]],["body/dependencies.html",[35,0.014,48,2.093,88,0.01,89,0.012,90,0.01,609,5.42,616,5.42,870,3.909,1043,3.909,1044,5.527,1390,4.174,1664,5.42,1838,5.42,1849,4.888,4358,5.42,4482,6.228,4483,6.228,4484,6.228,4485,6.228,4486,6.228,4487,6.228,4488,6.228,4489,6.228,4490,6.228,4491,6.228,4492,5.42,4493,6.228,4494,7.247,4495,6.228,4496,6.228,4497,6.228,4498,6.228,4499,6.228,4500,6.228,4501,6.228,4502,6.228,4503,6.228,4504,6.228,4505,6.228,4506,7.247,4507,6.228,4508,6.228,4509,6.228,4510,6.228,4511,6.228]],["title/miscellaneous/enumerations.html",[4512,2.396,4513,4.181]],["body/miscellaneous/enumerations.html",[3,0.173,6,0.224,7,0.115,24,0.789,26,0.201,35,0.014,88,0.009,89,0.011,90,0.009,125,1.182,126,0.584,154,0.647,166,1.308,174,1.085,182,1.457,261,4.795,271,3.83,272,2.502,273,3.211,300,2.73,302,5.22,332,3.365,602,4.45,705,4.174,758,2.707,783,2.319,873,3.933,938,4.235,981,4.795,983,4.174,1167,3.02,1657,5.22,1666,2.502,1711,4.235,1719,2.502,1798,4.235,1817,3.365,1818,5.788,1819,5.788,1820,5.788,1821,5.22,1842,3.891,1849,5.22,2071,3.387,2072,4.174,2090,3.534,2091,4.45,2092,4.45,2093,4.45,2094,4.457,2114,3.534,2474,4.795,2476,5.788,2923,3.933,3239,4.457,4095,3.191,4249,3.891,4261,5.22,4262,4.235,4263,4.235,4264,4.235,4265,4.235,4266,4.235,4267,4.235,4268,4.235,4269,4.235,4270,4.235,4271,4.235,4272,4.235,4273,4.235,4274,4.235,4275,4.235,4512,3.891,4513,4.696,4514,7.525,4515,7.209,4516,5.396,4517,6.651,4518,5.396,4519,5.396,4520,6.651,4521,6.651,4522,6.651,4523,6.651]],["title/index.html",[26,0.124,4524,2.892,4525,2.892]],["body/index.html",[7,0.125,20,2.721,23,0.576,35,0.014,66,4.064,88,0.009,89,0.011,90,0.009,106,1.705,131,1.326,154,0.715,204,2.492,459,4.925,464,3.777,504,3.538,603,4.905,707,6.395,746,3.538,758,2.294,762,4.424,907,5.51,981,4.064,983,3.538,1006,3.333,1043,3.538,1314,3.777,1360,4.577,1464,2.995,1592,4.424,1980,3.333,2114,2.995,2181,4.424,2241,4.424,2242,4.925,2259,4.064,2418,4.905,2451,4.905,2474,4.064,3217,4.424,3336,6.648,3462,4.424,4035,4.424,4063,5.944,4135,5.944,4147,5.944,4155,4.905,4396,5.767,4526,5.636,4527,5.636,4528,5.636,4529,5.636,4530,5.636,4531,5.636,4532,5.636,4533,7.638,4534,5.636,4535,5.636,4536,5.636,4537,5.636,4538,5.636,4539,5.636,4540,5.636,4541,5.636,4542,5.636,4543,5.636,4544,5.636,4545,5.636,4546,5.636,4547,5.636,4548,7.348,4549,7.348,4550,6.83,4551,5.636,4552,5.636,4553,5.636,4554,5.636,4555,5.636,4556,5.636,4557,7.638,4558,5.636,4559,5.636,4560,5.636,4561,5.636,4562,5.636,4563,5.636,4564,5.636,4565,5.636,4566,5.636,4567,4.905,4568,5.636,4569,7.824,4570,5.636,4571,5.636,4572,5.636,4573,5.636,4574,5.636,4575,5.636,4576,5.636,4577,5.636,4578,5.636,4579,5.636]],["title/license.html",[482,2.227,4524,2.892,4525,2.892]],["body/license.html",[4,0.2,5,0.163,10,1.463,21,0.563,32,0.128,35,0.01,39,0.183,52,0.161,61,0.329,69,3.328,88,0.008,89,0.008,90,0.006,132,0.729,232,1.078,284,3.004,320,2.604,366,2.313,461,1.298,464,4.459,472,0.871,473,5.597,479,2.489,480,5.35,481,4.535,482,5.552,483,4.155,484,4.155,485,3.862,486,2.489,487,2.489,488,3.617,489,2.489,490,4.535,491,3.342,492,3.617,493,4.155,494,4.155,495,4.535,496,3.56,497,4.155,498,3.56,499,4.155,500,5.597,501,3.56,502,3.56,503,3.56,504,2.166,505,2.313,506,2.489,507,2.489,508,4.155,509,2.489,541,2.904,560,4.296,563,1.666,592,2.041,602,4.59,659,3.004,671,2.041,713,3.004,744,1.405,746,2.166,762,5.72,769,2.041,776,2.709,882,2.166,908,2.709,1009,2.709,1020,1.931,1135,3.004,1160,5.223,1171,2.313,1174,2.707,1200,3.004,1207,3.004,1294,2.166,1328,3.004,1334,5.016,1360,3.862,1389,2.623,1462,2.623,1592,2.709,1611,2.709,1613,2.709,1614,3.004,1673,2.489,1699,2.093,1753,2.313,1846,3.004,1911,2.041,1942,3.308,1984,2.313,2167,2.709,2171,2.313,2197,3.862,2233,3.004,2450,6.457,2471,5.016,2475,3.004,2592,3.004,2704,3.004,2756,3.004,3027,3.875,3028,3.875,3042,3.875,3204,3.56,3208,3.004,3217,2.709,3236,4.296,3403,2.709,3462,4.523,3464,4.535,3569,2.709,3802,2.489,4035,6.511,4143,3.004,4380,3.004,4396,4.523,4567,3.004,4580,3.452,4581,3.452,4582,3.452,4583,7.419,4584,6.29,4585,6.654,4586,7.872,4587,7.528,4588,3.452,4589,3.452,4590,7.528,4591,6.922,4592,7.528,4593,4.937,4594,3.452,4595,6.654,4596,3.452,4597,3.452,4598,3.452,4599,6.29,4600,3.452,4601,3.452,4602,6.29,4603,3.452,4604,5.763,4605,4.937,4606,4.937,4607,3.452,4608,7.994,4609,6.29,4610,4.937,4611,3.452,4612,4.937,4613,3.452,4614,3.452,4615,3.452,4616,3.452,4617,3.452,4618,3.452,4619,3.452,4620,5.763,4621,3.452,4622,4.937,4623,3.452,4624,3.452,4625,6.922,4626,6.29,4627,3.452,4628,3.452,4629,3.452,4630,3.452,4631,3.452,4632,3.452,4633,5.763,4634,3.452,4635,7.419,4636,3.452,4637,4.937,4638,3.452,4639,7.994,4640,8.026,4641,3.452,4642,3.452,4643,3.452,4644,3.452,4645,3.452,4646,4.937,4647,5.763,4648,3.452,4649,3.452,4650,3.452,4651,3.452,4652,6.29,4653,6.654,4654,3.452,4655,4.937,4656,6.29,4657,4.937,4658,3.452,4659,6.654,4660,4.937,4661,3.452,4662,3.452,4663,5.763,4664,3.452,4665,3.452,4666,3.452,4667,3.452,4668,4.937,4669,3.452,4670,3.452,4671,3.452,4672,5.763,4673,3.452,4674,3.452,4675,5.763,4676,3.452,4677,3.452,4678,3.452,4679,7.528,4680,3.452,4681,3.452,4682,4.937,4683,5.763,4684,4.937,4685,4.937,4686,4.937,4687,4.937,4688,4.937,4689,5.763,4690,4.937,4691,4.937,4692,4.937,4693,4.937,4694,3.452,4695,4.937,4696,3.452,4697,6.654,4698,7.127,4699,4.937,4700,4.937,4701,4.937,4702,3.452,4703,4.937,4704,3.452,4705,3.452,4706,3.452,4707,5.763,4708,3.452,4709,3.452,4710,4.937,4711,4.937,4712,3.452,4713,3.452,4714,3.452,4715,3.452,4716,3.452,4717,3.452,4718,3.452,4719,4.937,4720,3.452,4721,3.452,4722,3.452,4723,3.452,4724,3.452,4725,3.452,4726,3.452,4727,3.452,4728,3.452,4729,3.452,4730,3.452,4731,3.452,4732,7.288,4733,3.452,4734,3.452,4735,3.452,4736,3.452,4737,6.29,4738,4.937,4739,6.29,4740,3.452,4741,3.452,4742,3.452,4743,3.452,4744,3.452,4745,3.452,4746,4.937,4747,4.937,4748,3.452,4749,3.452,4750,4.937,4751,3.452,4752,3.452,4753,6.654,4754,3.452,4755,3.452,4756,3.452,4757,3.452,4758,3.452,4759,3.452,4760,5.763,4761,3.452,4762,3.452,4763,3.452,4764,3.452,4765,3.452,4766,3.452,4767,3.452,4768,3.452,4769,4.937,4770,3.452,4771,3.452,4772,3.452,4773,3.452,4774,3.452,4775,3.452,4776,3.452,4777,3.452,4778,3.452,4779,6.29,4780,4.937,4781,4.937,4782,3.452,4783,3.452,4784,3.452,4785,3.452,4786,3.452,4787,3.452,4788,3.452,4789,3.452,4790,4.937,4791,3.452,4792,3.452,4793,3.452,4794,6.654,4795,3.452,4796,3.452,4797,3.452,4798,3.452,4799,3.452,4800,3.452,4801,3.452,4802,3.452,4803,6.654,4804,3.452,4805,3.452,4806,3.452,4807,3.452,4808,3.452,4809,3.452,4810,3.452,4811,3.452,4812,3.452,4813,3.452,4814,3.452,4815,3.452,4816,3.452,4817,3.452,4818,5.763,4819,3.452,4820,3.452,4821,3.452,4822,3.452,4823,4.937,4824,3.452,4825,3.452,4826,3.452,4827,3.452,4828,3.452,4829,3.452,4830,3.452,4831,3.452,4832,3.452,4833,3.452,4834,3.452,4835,3.452,4836,3.452,4837,3.452,4838,4.937,4839,3.452,4840,3.452,4841,4.937,4842,4.937,4843,3.452,4844,3.452,4845,3.452,4846,3.452,4847,3.452,4848,3.452,4849,3.452,4850,3.452,4851,3.452,4852,3.452,4853,3.452]],["title/modules.html",[194,3.43]],["body/modules.html",[35,0.012,88,0.011,89,0.012,90,0.011,193,4.371,194,4.095,626,6.478,746,4.095,1042,4.371,1294,4.672,1314,4.988,1825,4.704,4854,6.524,4855,7.81]],["title/overview.html",[4856,4.755]],["body/overview.html",[2,3.098,35,0.014,88,0.008,89,0.01,90,0.008,99,1.653,100,1.16,110,1.081,113,1.043,117,1.713,119,1.463,121,1.463,124,1.463,128,1.653,130,1.629,134,1.463,136,1.463,138,1.411,140,1.411,144,1.516,146,1.463,147,1.463,150,1.411,153,1.463,155,1.463,158,1.463,160,1.463,162,1.463,163,1.463,165,1.463,168,1.463,170,1.463,173,1.463,175,1.537,177,1.594,178,1.463,180,1.463,181,1.463,183,1.463,184,1.463,186,1.463,189,1.411,192,3.098,193,4.638,194,3.098,209,3.558,210,3.558,472,1.587,589,2.761,633,3.558,634,4.344,635,2.817,636,4.093,641,4.344,769,2.918,818,1.29,874,4.093,877,4.093,1019,2.278,1042,5.756,1043,3.098,1044,3.558,1045,4.295,1046,4.295,1047,4.295,1048,4.295,1049,4.295,1050,4.638,1051,4.935,1825,5.808,1826,4.295,1827,4.295,1829,4.295,2054,2.622,3802,3.558,4095,2.918,4458,5.473,4856,4.295,4857,4.935]],["title/miscellaneous/variables.html",[4512,2.396,4858,4.181]],["body/miscellaneous/variables.html",[6,0.155,7,0.08,16,5.836,23,0.835,24,0.756,26,0.194,35,0.014,59,6.446,71,4.478,82,5.836,88,0.009,89,0.011,90,0.009,95,0.398,106,1.632,195,4.095,196,5.112,206,5.112,207,4.541,267,1.022,313,1.072,950,4.095,954,4.095,1052,3.762,1053,6.214,1060,6.793,1122,5.112,1123,4.541,1124,5.112,1125,4.541,1126,5.112,1127,4.541,1128,5.112,1129,4.541,1130,5.112,1131,4.541,1132,5.112,1133,4.541,1174,2.909,1659,3.027,4477,4.541,4478,4.541,4479,4.541,4480,4.541,4492,6.472,4512,3.762,4858,4.541,4859,7.805,4860,5.218,4861,5.218,4862,5.218,4863,5.218,4864,5.218,4865,7.436,4866,7.436,4867,5.218,4868,7.436,4869,7.436,4870,7.436,4871,7.436,4872,7.436,4873,7.436,4874,7.101,4875,7.436,4876,7.101,4877,7.436,4878,7.101,4879,7.436,4880,7.101,4881,5.218,4882,5.218,4883,5.218,4884,5.218,4885,5.218]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":453,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["0.5.1",{"_index":4498,"title":{},"body":{"dependencies.html":{}}}],["0.7.2",{"_index":4496,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":4511,"title":{},"body":{"dependencies.html":{}}}],["0.9.2017.07.28",{"_index":851,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["0/1",{"_index":4399,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":4423,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":4448,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":4431,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":4446,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":4432,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":4417,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":4450,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":4409,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":4436,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":4434,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":4412,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":4437,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":4438,"title":{},"body":{"coverage.html":{}}}],["0/32",{"_index":4428,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":4416,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":4406,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":4456,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":4435,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":4415,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":4422,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":533,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["1",{"_index":472,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/DataMapperUtil.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{},"overview.html":{}}}],["1).tostring",{"_index":1882,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{}}}],["1.1.20150312",{"_index":4489,"title":{},"body":{"dependencies.html":{}}}],["1.1.6",{"_index":4507,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":1841,"title":{},"body":{"classes/Examples.html":{}}}],["1/13",{"_index":4433,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":4408,"title":{},"body":{"coverage.html":{}}}],["1/18",{"_index":4457,"title":{},"body":{"coverage.html":{}}}],["1/27",{"_index":4421,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":4459,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":4473,"title":{},"body":{"coverage.html":{}}}],["1/49",{"_index":4453,"title":{},"body":{"coverage.html":{}}}],["1/50",{"_index":4449,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":449,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{}}}],["10/18",{"_index":4466,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":530,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["1000000",{"_index":2991,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingUtil.html":{}}}],["1000000).tostring",{"_index":2833,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["10px",{"_index":585,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["11",{"_index":4429,"title":{},"body":{"coverage.html":{}}}],["11/47",{"_index":4420,"title":{},"body":{"coverage.html":{}}}],["12px",{"_index":566,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["14",{"_index":4440,"title":{},"body":{"coverage.html":{}}}],["14/20",{"_index":4462,"title":{},"body":{"coverage.html":{}}}],["14/34",{"_index":4403,"title":{},"body":{"coverage.html":{}}}],["14/43",{"_index":4471,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":4454,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":4426,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":567,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["1].touppercase",{"_index":4186,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["1px",{"_index":614,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["2",{"_index":2054,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{},"classes/TextNode.html":{},"coverage.html":{},"overview.html":{}}}],["2.0",{"_index":484,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["2.0.0",{"_index":4501,"title":{},"body":{"dependencies.html":{}}}],["2.20.1",{"_index":4499,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":4487,"title":{},"body":{"dependencies.html":{}}}],["2.5.5",{"_index":4491,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1847,"title":{},"body":{"classes/Examples.html":{}}}],["2/12",{"_index":4427,"title":{},"body":{"coverage.html":{}}}],["2/18",{"_index":4430,"title":{},"body":{"coverage.html":{}}}],["2/30",{"_index":4414,"title":{},"body":{"coverage.html":{}}}],["2/49",{"_index":4445,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":4476,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":4451,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1154,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["2004",{"_index":4581,"title":{},"body":{"license.html":{}}}],["2017",{"_index":1059,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["2019",{"_index":475,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["204",{"_index":1152,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["22",{"_index":4468,"title":{},"body":{"coverage.html":{}}}],["23",{"_index":4419,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":4472,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":2778,"title":{},"body":{"classes/LineModel.html":{}}}],["28",{"_index":4410,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":589,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/TextNode.html":{},"coverage.html":{},"overview.html":{}}}],["3.1.0",{"_index":4505,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":4495,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":879,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["30).tostring",{"_index":1435,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["300",{"_index":1521,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["30000",{"_index":697,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["32",{"_index":4470,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":4458,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["35",{"_index":4424,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":4463,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":4442,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":4444,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":1838,"title":{},"body":{"classes/Examples.html":{},"dependencies.html":{}}}],["4.1.2",{"_index":4485,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":4493,"title":{},"body":{"dependencies.html":{}}}],["4/27",{"_index":4475,"title":{},"body":{"coverage.html":{}}}],["4/53",{"_index":4447,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":622,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["41",{"_index":4402,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":2795,"title":{},"body":{"classes/LineModel.html":{},"coverage.html":{}}}],["5.2.0",{"_index":4502,"title":{},"body":{"dependencies.html":{}}}],["5/22",{"_index":4469,"title":{},"body":{"coverage.html":{}}}],["5/24",{"_index":4452,"title":{},"body":{"coverage.html":{}}}],["5/32",{"_index":4455,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":4615,"title":{},"body":{"license.html":{}}}],["500",{"_index":807,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["54px",{"_index":617,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["55",{"_index":4465,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":599,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["6",{"_index":4413,"title":{},"body":{"coverage.html":{}}}],["6.2.2",{"_index":4509,"title":{},"body":{"dependencies.html":{}}}],["6/21",{"_index":4411,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":4404,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":4407,"title":{},"body":{"coverage.html":{}}}],["7.2.15",{"_index":4484,"title":{},"body":{"dependencies.html":{}}}],["7/11",{"_index":4405,"title":{},"body":{"coverage.html":{}}}],["7/19",{"_index":4464,"title":{},"body":{"coverage.html":{}}}],["7/20",{"_index":4425,"title":{},"body":{"coverage.html":{}}}],["7/30",{"_index":4461,"title":{},"body":{"coverage.html":{}}}],["7/47",{"_index":4441,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":594,"title":{},"body":{"components/DataMapperAppComponent.html":{},"coverage.html":{}}}],["8",{"_index":4857,"title":{},"body":{"overview.html":{}}}],["8px",{"_index":615,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["9",{"_index":592,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"license.html":{}}}],["9/24",{"_index":4443,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":4306,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["_cfg",{"_index":2452,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["_identifier",{"_index":1799,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["_issource",{"_index":3929,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["_nodes",{"_index":1891,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["_showmappingpreview",{"_index":916,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["_type",{"_index":3940,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["a:hover",{"_index":570,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["above",{"_index":1592,"title":{},"body":{"classes/EnumValue.html":{},"index.html":{},"license.html":{}}}],["abstract",{"_index":1856,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["accept",{"_index":2217,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["acceptance",{"_index":4821,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":4818,"title":{},"body":{"license.html":{}}}],["acceptinput",{"_index":3179,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acceptinput(event",{"_index":3199,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["access",{"_index":2633,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["accessing",{"_index":2552,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["accessors",{"_index":1261,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/ErrorInfo.html":{},"injectables/FileManagementService.html":{}}}],["accordingly",{"_index":4152,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["acp",{"_index":3237,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acp.length",{"_index":3253,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acp[0].value",{"_index":3254,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acp[1].value",{"_index":3255,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acpv",{"_index":3249,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acpv.push(argument",{"_index":3251,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["act",{"_index":4827,"title":{},"body":{"license.html":{}}}],["acting",{"_index":4597,"title":{},"body":{"license.html":{}}}],["action",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["action's",{"_index":2166,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action'},{'name",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.argumentvalues",{"_index":2104,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.argumentvalues.length",{"_index":2105,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.argumentvalues.values",{"_index":3325,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.argumentvalues[argvalindex].value",{"_index":3274,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["action.component",{"_index":1098,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["action.component.html",{"_index":3289,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts",{"_index":3288,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"coverage.html":{}}}],["action.component.ts:29",{"_index":3294,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:30",{"_index":3296,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:31",{"_index":3295,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:32",{"_index":3297,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:33",{"_index":3309,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:35",{"_index":3302,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:39",{"_index":3304,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:43",{"_index":3298,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:47",{"_index":3301,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:56",{"_index":3306,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:66",{"_index":3300,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.definition",{"_index":2101,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["action.model",{"_index":2221,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.model.ts",{"_index":2072,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["action.model.ts:101",{"_index":2087,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:18",{"_index":2126,"title":{},"body":{"classes/FieldActionArgument.html":{}}}],["action.model.ts:19",{"_index":2128,"title":{},"body":{"classes/FieldActionArgument.html":{}}}],["action.model.ts:20",{"_index":2129,"title":{},"body":{"classes/FieldActionArgument.html":{}}}],["action.model.ts:21",{"_index":2127,"title":{},"body":{"classes/FieldActionArgument.html":{}}}],["action.model.ts:25",{"_index":2130,"title":{},"body":{"classes/FieldActionArgumentValue.html":{}}}],["action.model.ts:26",{"_index":2131,"title":{},"body":{"classes/FieldActionArgumentValue.html":{}}}],["action.model.ts:37",{"_index":2138,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:38",{"_index":2135,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:39",{"_index":2134,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:40",{"_index":2136,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:41",{"_index":2140,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:42",{"_index":2141,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:43",{"_index":2137,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:44",{"_index":2139,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:46",{"_index":2143,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:65",{"_index":2142,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:77",{"_index":2080,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:78",{"_index":2079,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:79",{"_index":2077,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:81",{"_index":2082,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:88",{"_index":2084,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.multiplicity",{"_index":2251,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.name",{"_index":2100,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionComponent.html":{},"classes/MappingUtil.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.service",{"_index":876,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["action.service.ts",{"_index":2145,"title":{},"body":{"injectables/FieldActionService.html":{},"coverage.html":{}}}],["action.service.ts:115",{"_index":2189,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:137",{"_index":2192,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:145",{"_index":2183,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:172",{"_index":2185,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:205",{"_index":2207,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:245",{"_index":2165,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:267",{"_index":2195,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:282",{"_index":2174,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:29",{"_index":2212,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:30",{"_index":2211,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:307",{"_index":2180,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:342",{"_index":2200,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:354",{"_index":2205,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:360",{"_index":2182,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:37",{"_index":2219,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:38",{"_index":2218,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:40",{"_index":2163,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:47",{"_index":2187,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.setargumentvalue(arg.name",{"_index":2110,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["action.sourcetype",{"_index":2338,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.targettype",{"_index":2342,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actionconfigparamselectionchanged",{"_index":3180,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["actionconfigparamselectionchanged(event",{"_index":3201,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["actionconfigparamval",{"_index":3286,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["actionconfigs",{"_index":2272,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actionconfigs.push(fieldactionconfig",{"_index":2286,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondef",{"_index":2267,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondef.name",{"_index":2268,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondefinition",{"_index":3476,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{}}}],["actiondefinition.populatefieldaction(action",{"_index":3478,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{}}}],["actiondetail",{"_index":2186,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.actionschema",{"_index":2304,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.actionschema.properties[key",{"_index":2307,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.custom",{"_index":2295,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.method",{"_index":2301,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.multiplicity",{"_index":2302,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.name",{"_index":2293,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.sourcetype",{"_index":2297,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.targettype",{"_index":2299,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actionindex",{"_index":3189,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["actionname",{"_index":2190,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["actions",{"_index":2146,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{}}}],["actions.concat(arr",{"_index":2266,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actionsexistforfield",{"_index":3290,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["activatedroute",{"_index":3508,"title":{},"body":{"injectables/MappingIdentifierService.html":{}}}],["active",{"_index":765,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/LineModel.html":{},"components/MappingListComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/NamespaceListComponent.html":{}}}],["activemapping",{"_index":2748,"title":{},"body":{"classes/LineModel.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{}}}],["activemapping.islookupmode",{"_index":3160,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["acts",{"_index":4801,"title":{},"body":{"license.html":{}}}],["actual",{"_index":2593,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["actual_component",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["actualdelimiter",{"_index":4250,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["add",{"_index":1699,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/NamespaceListComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["adddocument(docinitmodel",{"_index":955,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["adddocuments(docmodels",{"_index":991,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["added",{"_index":1747,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["addeditnamespace",{"_index":3858,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["addeditnamespace(ns",{"_index":3866,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["addendum",{"_index":4752,"title":{},"body":{"license.html":{}}}],["adderror",{"_index":1684,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["adderror(...errors",{"_index":1758,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["adderror(errors",{"_index":1697,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["addfield(field",{"_index":3001,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["adding",{"_index":72,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["additional",{"_index":4753,"title":{},"body":{"license.html":{}}}],["additions",{"_index":4654,"title":{},"body":{"license.html":{}}}],["addline(l",{"_index":2721,"title":{},"body":{"classes/LineModel.html":{}}}],["addlinefromparams(sourcex",{"_index":2712,"title":{},"body":{"classes/LineModel.html":{}}}],["addmappedfield(mappedfield",{"_index":3016,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["addmapping",{"_index":3610,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/ToolbarComponent.html":{}}}],["addtable",{"_index":3082,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["addtable(table",{"_index":3102,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["addtransformation",{"_index":3440,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["adjust",{"_index":1372,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["adm",{"_index":65,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["adm,.jar",{"_index":4196,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["admhttptimeout",{"_index":820,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["advised",{"_index":4816,"title":{},"body":{"license.html":{}}}],["aftercontentchecked",{"_index":2646,"title":{},"body":{"directives/FocusDirective.html":{}}}],["afterviewinit",{"_index":1461,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["against",{"_index":4711,"title":{},"body":{"license.html":{}}}],["aggregatebuffer",{"_index":2578,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["agree",{"_index":4830,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":494,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["agreement",{"_index":4766,"title":{},"body":{"license.html":{}}}],["alertmodule",{"_index":1072,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["alertmodule.forroot",{"_index":1131,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["alertmoduleforroot",{"_index":1130,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alias",{"_index":2405,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["align",{"_index":569,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["align:center",{"_index":542,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["align:left",{"_index":631,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["align:middle",{"_index":554,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["align:text",{"_index":546,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["alleging",{"_index":4716,"title":{},"body":{"license.html":{}}}],["allfields",{"_index":3943,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["allowdrop",{"_index":1245,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["allowdrop(event",{"_index":1271,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["alone",{"_index":713,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"license.html":{}}}],["along",{"_index":4744,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":4751,"title":{},"body":{"license.html":{}}}],["alphabetizefields(fields",{"_index":1575,"title":{},"body":{"classes/EnumValue.html":{}}}],["alphebatize",{"_index":4070,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["already",{"_index":274,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["alt",{"_index":4202,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["ampersand",{"_index":4262,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["and(b",{"_index":4728,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":4734,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":4740,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":4824,"title":{},"body":{"license.html":{}}}],["angle",{"_index":295,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["angular",{"_index":13,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["angular/animations",{"_index":4483,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1062,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["angular/common/http",{"_index":46,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["angular/core",{"_index":40,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"modules/ExampleAppModule.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["angular/forms",{"_index":1071,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["angular/platform",{"_index":1064,"title":{},"body":{"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"modules/ExampleAppModule.html":{},"classes/LineModel.html":{}}}],["angular/router",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ExampleAppModule.html":{},"injectables/MappingIdentifierService.html":{}}}],["angular2",{"_index":2754,"title":{},"body":{"classes/LineModel.html":{}}}],["annotations",{"_index":1846,"title":{},"body":{"classes/Examples.html":{},"license.html":{}}}],["another",{"_index":4566,"title":{},"body":{"index.html":{}}}],["answer",{"_index":2044,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["answer.push(fn",{"_index":2059,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["answer.push(new",{"_index":2051,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["any_date",{"_index":2343,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["apache",{"_index":481,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["apihttpxsrftokenextractor",{"_index":1,"title":{"injectables/ApiHttpXsrfTokenExtractor.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"modules/DataMapperModule.html":{},"coverage.html":{}}}],["apixsrfinterceptor",{"_index":62,"title":{"interceptors/ApiXsrfInterceptor.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"modules/DataMapperModule.html":{},"coverage.html":{}}}],["app",{"_index":1120,"title":{},"body":{"modules/DataMapperModule.html":{},"components/ToolbarComponent.html":{}}}],["app.component",{"_index":652,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["app.component.css",{"_index":382,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.html",{"_index":383,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts",{"_index":374,"title":{},"body":{"components/DataMapperAppComponent.html":{},"coverage.html":{}}}],["app.component.ts:41",{"_index":419,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:42",{"_index":414,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:43",{"_index":425,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:44",{"_index":427,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:45",{"_index":410,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:46",{"_index":412,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:47",{"_index":423,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:48",{"_index":430,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:50",{"_index":421,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:51",{"_index":415,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:52",{"_index":416,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:54",{"_index":428,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:55",{"_index":403,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:57",{"_index":408,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:59",{"_index":404,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:63",{"_index":406,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:80",{"_index":405,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:85",{"_index":407,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.module.ts",{"_index":1831,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["app/constant",{"_index":1317,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["app/data",{"_index":651,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["app/field",{"_index":1318,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["app/line",{"_index":1315,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["app/namespace",{"_index":3883,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["app/property",{"_index":1316,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["app/template",{"_index":4172,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["appcomponent",{"_index":99,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1207,"title":{},"body":{"classes/DataMapperUtil.html":{},"license.html":{}}}],["append",{"_index":1950,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["appended",{"_index":1947,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["appendfieldnode(mfield",{"_index":2063,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["appendix",{"_index":4637,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":492,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldDetailComponent.html":{},"license.html":{}}}],["application",{"_index":1820,"title":{},"body":{"classes/ErrorInfo.html":{},"miscellaneous/enumerations.html":{}}}],["application/json",{"_index":2214,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["application/octet",{"_index":2215,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["applied",{"_index":2176,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["applies",{"_index":4702,"title":{},"body":{"license.html":{}}}],["appliestofield",{"_index":2148,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["appliestofield(action",{"_index":2164,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["appliestosourcefield",{"_index":2149,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["appliestosourcefield(action",{"_index":2172,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["appliestotargetfield",{"_index":2150,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["appliestotargetfield(action",{"_index":2178,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["apply",{"_index":4838,"title":{},"body":{"license.html":{}}}],["appropriate",{"_index":4845,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":4788,"title":{},"body":{"license.html":{}}}],["approutingmodule",{"_index":193,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/DataMapperModule.html":{},"modules.html":{},"overview.html":{}}}],["archive",{"_index":4151,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["archives",{"_index":4852,"title":{},"body":{"license.html":{}}}],["area",{"_index":2610,"title":{},"body":{"injectables/FileManagementService.html":{},"components/MappingFieldContainerComponent.html":{}}}],["arg",{"_index":2106,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["argconfig",{"_index":3190,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argconfig.values",{"_index":3250,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argconfig.values[argvalindex",{"_index":3278,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argconfigname",{"_index":3223,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument",{"_index":2112,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["argument'},{'name",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["argument.component",{"_index":1099,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["argument.component.html",{"_index":3176,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts",{"_index":3175,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"coverage.html":{}}}],["argument.component.ts:102",{"_index":3202,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:137",{"_index":3212,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:151",{"_index":3220,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:155",{"_index":3230,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:162",{"_index":3227,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:31",{"_index":3193,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:32",{"_index":3194,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:33",{"_index":3196,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:34",{"_index":3195,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:35",{"_index":3197,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:36",{"_index":3198,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:38",{"_index":3238,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:39",{"_index":3192,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:46",{"_index":3224,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:53",{"_index":3207,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:63",{"_index":3200,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:72",{"_index":3210,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:85",{"_index":3232,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.name",{"_index":2113,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["argumentdefinition",{"_index":2309,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentdefinition.name",{"_index":2310,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentdefinition.serviceobject",{"_index":2315,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentdefinition.type",{"_index":2311,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentdefinition.values",{"_index":2313,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentname",{"_index":2085,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["arguments",{"_index":2096,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["argumentvalues",{"_index":2073,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["argval",{"_index":3305,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["argvalindex",{"_index":3191,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argvalue",{"_index":2118,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["argvalue.name",{"_index":2120,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["arising",{"_index":4806,"title":{},"body":{"license.html":{}}}],["array",{"_index":272,"title":{},"body":{"components/ClassNameComponent.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["arraybuffer",{"_index":2559,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["arrays",{"_index":2590,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["arrow",{"_index":293,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["asserted",{"_index":4836,"title":{},"body":{"license.html":{}}}],["associated",{"_index":2704,"title":{},"body":{"classes/LineModel.html":{},"license.html":{}}}],["assume",{"_index":4791,"title":{},"body":{"license.html":{}}}],["assumes",{"_index":1712,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["async",{"_index":1144,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["async(result",{"_index":2625,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["async(value",{"_index":2612,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["asynchronous",{"_index":1172,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/ToolbarComponent.html":{}}}],["asynchronously",{"_index":1179,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["at_sign",{"_index":4263,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["atlas",{"_index":980,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["atlasmap",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["atlasmapnavbar",{"_index":556,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["atlasmapnavbarcomponent",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["atlasmapping",{"_index":2519,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["atlasmap}/standalone",{"_index":4559,"title":{},"body":{"index.html":{}}}],["atlasmap}/ui",{"_index":4575,"title":{},"body":{"index.html":{}}}],["atlasserviceurl",{"_index":4873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["atsign",{"_index":4289,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["attach",{"_index":4839,"title":{},"body":{"license.html":{}}}],["attached",{"_index":4636,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":4577,"title":{},"body":{"index.html":{}}}],["attempting",{"_index":3234,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["attribute",{"_index":2389,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["attributes",{"_index":3267,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["attributes.getnameditem('actionindex').value",{"_index":3272,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["attributes.getnameditem('argvalindex').value",{"_index":3271,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["attributes.getnameditem('value').value",{"_index":3270,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["attribution",{"_index":4737,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":4593,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":4633,"title":{},"body":{"license.html":{}}}],["autocreate",{"_index":2815,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["automatically",{"_index":2418,"title":{},"body":{"components/FieldEditComponent.html":{},"index.html":{}}}],["available",{"_index":746,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/FileManagementService.html":{},"index.html":{},"license.html":{},"modules.html":{}}}],["avoid",{"_index":74,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["avoids",{"_index":4220,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["await",{"_index":2583,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["awesome",{"_index":4492,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["back",{"_index":3468,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["backend",{"_index":2248,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["backendurls",{"_index":4872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["background",{"_index":571,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["backslash",{"_index":4264,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["bad",{"_index":2404,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["bar",{"_index":710,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["base",{"_index":669,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["base.component.css",{"_index":510,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["based",{"_index":3217,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"index.html":{},"license.html":{}}}],["basejavainspectionserviceurl",{"_index":821,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["basejsoninspectionserviceurl",{"_index":822,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["basemappingserviceurl",{"_index":823,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["baseurl",{"_index":2554,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["basexmlinspectionserviceurl",{"_index":824,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["basis",{"_index":498,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["before",{"_index":660,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["begin",{"_index":3432,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["beginning",{"_index":1165,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["behalf",{"_index":4659,"title":{},"body":{"license.html":{}}}],["below",{"_index":4638,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":4619,"title":{},"body":{"license.html":{}}}],["better",{"_index":1766,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["between",{"_index":1980,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{},"index.html":{}}}],["big",{"_index":354,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["binary",{"_index":1173,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["binbuffer",{"_index":2603,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["bind",{"_index":4651,"title":{},"body":{"license.html":{}}}],["bit",{"_index":4555,"title":{},"body":{"index.html":{}}}],["black",{"_index":565,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["blob",{"_index":1203,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["blob([compress",{"_index":2606,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["blob([filebin",{"_index":2623,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["blob([value",{"_index":2613,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["block",{"_index":562,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["body",{"_index":1456,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"injectables/FieldActionService.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["body'},{'name",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["body.actiondetails",{"_index":2282,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["body.actiondetails.actiondetail",{"_index":2283,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["body.actiondetails.actiondetail.length",{"_index":2284,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["body.stringmap.stringmapentry",{"_index":2544,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["boilerplate",{"_index":4840,"title":{},"body":{"license.html":{}}}],["bolt",{"_index":1368,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["boolean",{"_index":239,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["boot:run",{"_index":4562,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":1044,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":613,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["bottom",{"_index":547,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["box",{"_index":611,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["brackets",{"_index":4842,"title":{},"body":{"license.html":{}}}],["break",{"_index":1983,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/NamespaceEditComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["browse",{"_index":4855,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1314,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"modules/ExampleAppModule.html":{},"classes/LineModel.html":{},"index.html":{},"modules.html":{}}}],["browser/animations",{"_index":1065,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["browseranimationsmodule",{"_index":1063,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["browsermodule",{"_index":1832,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["bsdropdownmodule",{"_index":1073,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["bsdropdownmodule.forroot",{"_index":1127,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["bsdropdownmoduleforroot",{"_index":1126,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["buffer",{"_index":2488,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["bug",{"_index":1342,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["build",{"_index":4063,"title":{},"body":{"classes/NamespaceModel.html":{},"index.html":{}}}],["build&restart",{"_index":4572,"title":{},"body":{"index.html":{}}}],["button",{"_index":316,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["buttonclicked",{"_index":3805,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["buttonclicked(okclicked",{"_index":1529,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["buttontext",{"_index":3771,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["byte",{"_index":356,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/DataMapperUtil.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["bytearray",{"_index":357,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["bytes",{"_index":4176,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["c",{"_index":474,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"modules/ExampleAppModule.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["c.cfg",{"_index":3166,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["c.getfielddetailcomponent(field",{"_index":1395,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["c.getselectedmapping",{"_index":3171,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["c.initcfg.basejavainspectionserviceurl",{"_index":673,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.basejsoninspectionserviceurl",{"_index":677,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.basemappingserviceurl",{"_index":679,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.basexmlinspectionserviceurl",{"_index":675,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.classpath",{"_index":704,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.classpathfetchtimeoutinmilliseconds",{"_index":696,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.disablemappingpreviewmode",{"_index":708,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.disablenavbar",{"_index":714,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.pompayload",{"_index":694,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.xsrfcookiename",{"_index":684,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.xsrfdefaulttokenvalue",{"_index":686,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.xsrfheadername",{"_index":682,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initialize(this.cfg",{"_index":4392,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["c.mappingdefinitionid",{"_index":664,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.mappings",{"_index":3168,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["c.modalwindow",{"_index":3169,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["c.nativeelement.attributes['sourcevalue'].value",{"_index":2895,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["c.nativeelement.selectedoptions",{"_index":2891,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["c.parentcomponent",{"_index":3631,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["c.savetable",{"_index":4393,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["c.selected",{"_index":3635,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["c.selectedfield",{"_index":3165,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["cache",{"_index":4064,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cached",{"_index":4013,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cachedfield",{"_index":4011,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cachedfield.children",{"_index":4015,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cachedfield.copy",{"_index":4014,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["call",{"_index":688,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["calls",{"_index":672,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["camel",{"_index":1198,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["camelcasestring",{"_index":1201,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["camelcasestring.charat(0).touppercase",{"_index":1232,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["camelcasestring.indexof",{"_index":1230,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["can't",{"_index":3971,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cancel",{"_index":1534,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["cancelbuttonhandler",{"_index":1471,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["candidate",{"_index":2201,"title":{},"body":{"injectables/FieldActionService.html":{},"components/PropertyFieldEditComponent.html":{}}}],["candidatetype",{"_index":2203,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["canvas",{"_index":4155,"title":{},"body":{"components/ToolbarComponent.html":{},"index.html":{}}}],["capture",{"_index":1161,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["caret",{"_index":1940,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["carry",{"_index":4730,"title":{},"body":{"license.html":{}}}],["case",{"_index":772,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["catalog",{"_index":2472,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["catch",{"_index":2617,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["catch((error",{"_index":2254,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["catheaders",{"_index":2557,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["cause",{"_index":4606,"title":{},"body":{"license.html":{}}}],["cd",{"_index":4548,"title":{},"body":{"index.html":{}}}],["cfg",{"_index":29,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceListComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["cfg(cfg",{"_index":2537,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["cfg.constantdoc",{"_index":3719,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.errorservice.adderror(new",{"_index":2873,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappingUtil.html":{}}}],["cfg.fieldactionservice.getactiondefinitionforname(action.argumentvalues[0].value",{"_index":3758,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.fieldactionservice.getactiondefinitionforname(action.name",{"_index":3759,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.getalldocs",{"_index":3711,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.getdocs(issource",{"_index":1014,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["cfg.getdocurimap(cfg",{"_index":3707,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.getfirstxmldoc(false).name",{"_index":3907,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["cfg.mappings.gettablebyname(mapping.transition.lookuptablename",{"_index":2872,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["cfg.mappings.mappings",{"_index":3709,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.mappings.mappings.length",{"_index":3593,"title":{},"body":{"components/MappingListComponent.html":{}}}],["cfg.propertydoc",{"_index":3717,"title":{},"body":{"classes/MappingUtil.html":{}}}],["change",{"_index":2181,"title":{},"body":{"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"index.html":{}}}],["changed",{"_index":3208,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"license.html":{}}}],["changedetectorref",{"_index":402,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["channel",{"_index":1676,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["char",{"_index":358,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["character",{"_index":4380,"title":{},"body":{"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["characterencoding",{"_index":3947,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["charge",{"_index":4689,"title":{},"body":{"license.html":{}}}],["chart.js",{"_index":4486,"title":{},"body":{"dependencies.html":{}}}],["check",{"_index":2175,"title":{},"body":{"injectables/FieldActionService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/MappingUtil.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["checkfieldeligibiltyforlinedrawing(field",{"_index":2799,"title":{},"body":{"classes/LineModel.html":{}}}],["checkiconenabled",{"_index":3177,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["checkout",{"_index":4542,"title":{},"body":{"index.html":{}}}],["child",{"_index":1324,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["childfield",{"_index":1564,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["childfield.children",{"_index":4069,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["childfield.copy",{"_index":4016,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["childfield.hasunmappedchildren",{"_index":1566,"title":{},"body":{"classes/EnumValue.html":{}}}],["childfield.parentfield",{"_index":4017,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["childrein",{"_index":4071,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["children",{"_index":1551,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["choose",{"_index":4819,"title":{},"body":{"license.html":{}}}],["circle",{"_index":1370,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["claim",{"_index":4713,"title":{},"body":{"license.html":{}}}],["claims",{"_index":4703,"title":{},"body":{"license.html":{}}}],["class",{"_index":52,"title":{"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"license.html":{}}}],["class.pipe",{"_index":1119,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["class.pipe.ts",{"_index":4098,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{},"coverage.html":{}}}],["class.pipe.ts:7",{"_index":4102,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["class=\"text",{"_index":4085,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["classes",{"_index":818,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"overview.html":{}}}],["classidentifier",{"_index":1544,"title":{},"body":{"classes/EnumValue.html":{}}}],["classlist.js",{"_index":4488,"title":{},"body":{"dependencies.html":{}}}],["classname",{"_index":986,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["classnameblacklist",{"_index":825,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["classnamecomponent",{"_index":119,"title":{"components/ClassNameComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classpath",{"_index":698,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["classpathfetchtimeoutinmilliseconds",{"_index":826,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["clean",{"_index":4550,"title":{},"body":{"index.html":{}}}],["cleanstr",{"_index":1926,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["clear",{"_index":1016,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["clearactiondefinitions",{"_index":2151,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["clearallerrors",{"_index":1685,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["cleardocs",{"_index":1021,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["cleared",{"_index":1669,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["clearfielderrors",{"_index":1686,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["clearfields",{"_index":4022,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["clearformerrors",{"_index":1687,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["clearlines",{"_index":2726,"title":{},"body":{"classes/LineModel.html":{}}}],["clearmappings",{"_index":4112,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["clearpreviewerrors",{"_index":1688,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["cleartext(nodeid",{"_index":1915,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["cleartimeout(this.mouseeventtimer",{"_index":808,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["cleartoend(index",{"_index":2020,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["clearvalidationerrors",{"_index":1689,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["clearvalidationerrors(mapping",{"_index":1707,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["cli",{"_index":4504,"title":{},"body":{"dependencies.html":{}}}],["click",{"_index":1296,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["clicked",{"_index":1535,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["clone",{"_index":4546,"title":{},"body":{"index.html":{}}}],["close",{"_index":1519,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["closeclicked",{"_index":3806,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["closeclicked(event",{"_index":1517,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["closed",{"_index":1680,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["cluster_datamappermodule",{"_index":1045,"title":{},"body":{"modules/DataMapperModule.html":{},"overview.html":{}}}],["cluster_datamappermodule_declarations",{"_index":1046,"title":{},"body":{"modules/DataMapperModule.html":{},"overview.html":{}}}],["cluster_datamappermodule_exports",{"_index":1048,"title":{},"body":{"modules/DataMapperModule.html":{},"overview.html":{}}}],["cluster_datamappermodule_imports",{"_index":1047,"title":{},"body":{"modules/DataMapperModule.html":{},"overview.html":{}}}],["cluster_datamappermodule_providers",{"_index":1049,"title":{},"body":{"modules/DataMapperModule.html":{},"overview.html":{}}}],["cluster_exampleappmodule",{"_index":1826,"title":{},"body":{"modules/ExampleAppModule.html":{},"overview.html":{}}}],["cluster_exampleappmodule_bootstrap",{"_index":1829,"title":{},"body":{"modules/ExampleAppModule.html":{},"overview.html":{}}}],["cluster_exampleappmodule_declarations",{"_index":1827,"title":{},"body":{"modules/ExampleAppModule.html":{},"overview.html":{}}}],["cluster_exampleappmodule_imports",{"_index":1828,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["clz",{"_index":1369,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["code",{"_index":1360,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{},"license.html":{}}}],["cog",{"_index":4210,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["col",{"_index":587,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["collapsable",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["collapsableheadercomponent",{"_index":121,"title":{"components/CollapsableHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["collapsed",{"_index":283,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"classes/EnumValue.html":{}}}],["collection",{"_index":270,"title":{},"body":{"components/ClassNameComponent.html":{},"components/DataMapperErrorComponent.html":{},"injectables/FieldActionService.html":{}}}],["collectionclassname",{"_index":895,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["collectiontype",{"_index":261,"title":{},"body":{"components/ClassNameComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/enumerations.html":{}}}],["collectiontype.none",{"_index":253,"title":{},"body":{"components/ClassNameComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["collectiontypeselectionchanged",{"_index":222,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["collectiontypeselectionchanged(event",{"_index":230,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["colon",{"_index":4265,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["color",{"_index":564,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["color:#0088ce",{"_index":573,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["color:crimson",{"_index":543,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["color:rgb(54,54,54",{"_index":577,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["com.fasterxml.jackson.core",{"_index":1844,"title":{},"body":{"classes/Examples.html":{}}}],["combination",{"_index":4708,"title":{},"body":{"license.html":{}}}],["combobox",{"_index":4358,"title":{},"body":{"components/TransitionSelectionComponent.html":{},"dependencies.html":{}}}],["combobox').on('blur",{"_index":4373,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["combobox').on('input",{"_index":4377,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["coming",{"_index":1323,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["comma",{"_index":4266,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["command",{"_index":4576,"title":{},"body":{"index.html":{}}}],["comment",{"_index":4846,"title":{},"body":{"license.html":{}}}],["commented",{"_index":4247,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["commercial",{"_index":4814,"title":{},"body":{"license.html":{}}}],["commit",{"_index":2518,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["common",{"_index":4601,"title":{},"body":{"license.html":{}}}],["common/config.types",{"_index":262,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["common/data",{"_index":2532,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["common/focus.directive",{"_index":1105,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["common/to",{"_index":1117,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["commonmodule",{"_index":1061,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["communication",{"_index":4663,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":4630,"title":{},"body":{"license.html":{}}}],["complete",{"_index":1791,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["completed",{"_index":1679,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["complex",{"_index":359,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["complexfieldsbyclassidentifier",{"_index":3945,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["compliance",{"_index":486,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["complies",{"_index":4758,"title":{},"body":{"license.html":{}}}],["component",{"_index":98,"title":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["componentfactory",{"_index":1505,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["componentfactoryresolver",{"_index":1460,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["componentloaded",{"_index":1481,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["components",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"overview.html":{}}}],["components/app/constant",{"_index":1090,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/app/data",{"_index":1078,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/app/field",{"_index":1091,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/app/line",{"_index":1083,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/app/namespace",{"_index":1092,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/app/property",{"_index":1089,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/app/template",{"_index":1081,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/data",{"_index":1077,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/document/class",{"_index":1084,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/document/document",{"_index":1088,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/mapping",{"_index":1086,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/modal/modal",{"_index":1079,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/toolbar/expression.component",{"_index":1106,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/toolbar/toolbar.component",{"_index":1080,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["compound",{"_index":1299,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["compress",{"_index":2477,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["compressed",{"_index":2487,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["compressedbuffer",{"_index":2515,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["computer",{"_index":4811,"title":{},"body":{"license.html":{}}}],["concat(issource",{"_index":997,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["concat(targetvalues",{"_index":2882,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["concat(this.allfields",{"_index":3955,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["concat(this.cfg.getfirstxmldoc(false).namespaces",{"_index":3903,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["concat(this.cfg.mappings.getallmappings(true",{"_index":3574,"title":{},"body":{"components/MappingListComponent.html":{}}}],["concat(this.mappings",{"_index":3134,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["concat(this.terminalfields",{"_index":3988,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["condition",{"_index":1728,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["conditional",{"_index":3418,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["conditionalmappingexpressionenabled",{"_index":4113,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["conditions",{"_index":500,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["config",{"_index":658,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{}}}],["configmodel",{"_index":49,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["configmodel.cfg",{"_index":941,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["configmodel.errorservice.isrequiredfieldvalid(this.namespace.alias",{"_index":3854,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["configmodel.errorservice.isrequiredfieldvalid(this.namespace.uri",{"_index":3855,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["configmodel.getconfig",{"_index":37,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/NamespaceEditComponent.html":{}}}],["configmodel.getconfig().errorservice.isrequiredfieldvalid(this.field.name",{"_index":2430,"title":{},"body":{"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["configmodel.getconfig().errorservice.isrequiredfieldvalid(this.field.value",{"_index":349,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["configs",{"_index":2262,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["configselectionchanged",{"_index":3291,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["configselectionchanged(event",{"_index":3299,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["configuration",{"_index":882,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["configuring",{"_index":4531,"title":{},"body":{"index.html":{}}}],["confirmbuttondisabled",{"_index":1474,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["confirmbuttontext",{"_index":1475,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["confirmed",{"_index":4128,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["connect",{"_index":2258,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["consequential",{"_index":4805,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":4826,"title":{},"body":{"license.html":{}}}],["console",{"_index":1767,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log(\"copied",{"_index":1623,"title":{},"body":{"classes/EnumValue.html":{}}}],["conspicuously",{"_index":4676,"title":{},"body":{"license.html":{}}}],["const",{"_index":80,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"modules/AppRoutingModule.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["constant",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["constantcomponent",{"_index":1411,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["constantcomponent.getfield",{"_index":1421,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["constantcomponent.initialize(self.field",{"_index":1412,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["constantdoc",{"_index":924,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["constantfield",{"_index":3727,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfield.displayname",{"_index":3732,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfield.name",{"_index":3733,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfield.path",{"_index":3734,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfield.type",{"_index":3730,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfield.usercreated",{"_index":3735,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfield.value",{"_index":3728,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfieldeditcomponent",{"_index":124,"title":{"components/ConstantFieldEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["constants",{"_index":938,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/enumerations.html":{}}}],["constitutes",{"_index":4717,"title":{},"body":{"license.html":{}}}],["constrain",{"_index":3401,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["constructor",{"_index":228,"title":{},"body":{"components/ClassNameComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["constructor(componentfactoryresolver",{"_index":3807,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["constructor(delimiter",{"_index":4254,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["constructor(detector",{"_index":401,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/ModalErrorWindowComponent.html":{}}}],["constructor(elementref",{"_index":2649,"title":{},"body":{"directives/FocusDirective.html":{}}}],["constructor(errorservice",{"_index":2161,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["constructor(init",{"_index":1801,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["constructor(initializationservice",{"_index":640,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["constructor(logger",{"_index":2467,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["constructor(mapping",{"_index":2436,"title":{},"body":{"classes/FieldNode.html":{}}}],["constructor(mappingdefinitionid",{"_index":3091,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["constructor(node",{"_index":2067,"title":{},"body":{"classes/ExpressionUpdatedEvent.html":{}}}],["constructor(prefix",{"_index":1859,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["constructor(private",{"_index":657,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"injectables/MappingIdentifierService.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["constructor(public",{"_index":439,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"classes/TextNode.html":{}}}],["constructor(route",{"_index":3507,"title":{},"body":{"injectables/MappingIdentifierService.html":{}}}],["constructor(sanitizer",{"_index":1263,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["constructor(str",{"_index":4090,"title":{},"body":{"classes/TextNode.html":{}}}],["construed",{"_index":4754,"title":{},"body":{"license.html":{}}}],["consumers",{"_index":1108,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["contained",{"_index":4742,"title":{},"body":{"license.html":{}}}],["container",{"_index":3331,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container'},{'name",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["container.component",{"_index":1097,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["container.component.html",{"_index":3332,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts",{"_index":3330,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:114",{"_index":3358,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:118",{"_index":3355,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:128",{"_index":3360,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:149",{"_index":3357,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:155",{"_index":3356,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:179",{"_index":3381,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:183",{"_index":3366,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:187",{"_index":3377,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:194",{"_index":3370,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:203",{"_index":3367,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:207",{"_index":3361,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:211",{"_index":3375,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:33",{"_index":3351,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:34",{"_index":3352,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:35",{"_index":3353,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:36",{"_index":3354,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:38",{"_index":3384,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:40",{"_index":3385,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:41",{"_index":3383,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:42",{"_index":3387,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:43",{"_index":3382,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:44",{"_index":3386,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:45",{"_index":3350,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:53",{"_index":3374,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:57",{"_index":3373,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:60",{"_index":3363,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:64",{"_index":3371,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:68",{"_index":3365,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:72",{"_index":3369,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:88",{"_index":3379,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["contains",{"_index":1932,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["content",{"_index":563,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/DataMapperUtil.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["contentchanged",{"_index":3181,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["contents",{"_index":1009,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"license.html":{}}}],["context",{"_index":3696,"title":{},"body":{"classes/MappingUtil.html":{}}}],["continue",{"_index":1581,"title":{},"body":{"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingListComponent.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["contract",{"_index":4610,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":4653,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":4707,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":4760,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":4679,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":4718,"title":{},"body":{"license.html":{}}}],["control",{"_index":4599,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":4600,"title":{},"body":{"license.html":{}}}],["conversion",{"_index":3235,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["conversions",{"_index":4631,"title":{},"body":{"license.html":{}}}],["convert",{"_index":1197,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["cookie",{"_index":4870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cookiename",{"_index":4869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cookies",{"_index":19,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["copies",{"_index":1614,"title":{},"body":{"classes/EnumValue.html":{},"license.html":{}}}],["copy",{"_index":488,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"classes/EnumValue.html":{},"modules/ExampleAppModule.html":{},"classes/NamespaceModel.html":{},"license.html":{}}}],["copy.children",{"_index":1620,"title":{},"body":{"classes/EnumValue.html":{}}}],["copy.children.push(childfield.copy",{"_index":1622,"title":{},"body":{"classes/EnumValue.html":{}}}],["copy.docdef",{"_index":1619,"title":{},"body":{"classes/EnumValue.html":{}}}],["copy.parentfield",{"_index":1617,"title":{},"body":{"classes/EnumValue.html":{}}}],["copy.serviceobject",{"_index":1615,"title":{},"body":{"classes/EnumValue.html":{}}}],["copyfrom",{"_index":3917,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["copyfrom(that",{"_index":1626,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["copyright",{"_index":473,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["core",{"_index":1849,"title":{},"body":{"classes/Examples.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["correctly",{"_index":3400,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["corresponding",{"_index":2024,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["couldn't",{"_index":3404,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["count",{"_index":1638,"title":{},"body":{"classes/EnumValue.html":{}}}],["counter",{"_index":2843,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["counterclaim",{"_index":4714,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":4395,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1711,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/FieldAction.html":{},"miscellaneous/enumerations.html":{}}}],["create(definition",{"_index":2081,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["created",{"_index":1677,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["createdbyuser",{"_index":3913,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["createformerrorchannel",{"_index":1678,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["createlinestyle(l",{"_index":2753,"title":{},"body":{"classes/LineModel.html":{}}}],["createnodesfromtext(text",{"_index":2048,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["creation",{"_index":318,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["cross",{"_index":4712,"title":{},"body":{"license.html":{}}}],["css",{"_index":2758,"title":{},"body":{"classes/LineModel.html":{}}}],["cssclass",{"_index":1373,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/NamespaceListComponent.html":{}}}],["csv",{"_index":4521,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ctrl/cmd",{"_index":1298,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["current",{"_index":906,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/FileManagementService.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["currentdraggedfield",{"_index":917,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["currentparentpath",{"_index":3979,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["currentpathsection",{"_index":3980,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cursor:pointer",{"_index":574,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["custom_elements_schema",{"_index":1056,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["customaction",{"_index":3757,"title":{},"body":{"classes/MappingUtil.html":{}}}],["customary",{"_index":4775,"title":{},"body":{"license.html":{}}}],["d",{"_index":1032,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["d.id",{"_index":1034,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["d.push(tabledata",{"_index":2886,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["d.sourceenumvalue",{"_index":2898,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["damages",{"_index":4803,"title":{},"body":{"license.html":{}}}],["dash",{"_index":4267,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["data",{"_index":7,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["databind",{"_index":1848,"title":{},"body":{"classes/Examples.html":{}}}],["dataisvalid",{"_index":3853,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["datamapperappcomponent",{"_index":128,"title":{"components/DataMapperAppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datamapperappexamplehostcomponent",{"_index":130,"title":{"components/DataMapperAppExampleHostComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datamapperbody",{"_index":526,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["datamapperbodyhidden",{"_index":522,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["datamappercomponent",{"_index":639,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["datamappereditcomponent",{"_index":601,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["datamappererrorcomponent",{"_index":134,"title":{"components/DataMapperErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datamapperinitializationmodel",{"_index":817,"title":{"classes/DataMapperInitializationModel.html":{}},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{}}}],["datamapperloadingmessage",{"_index":534,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["datamappermodule",{"_index":1042,"title":{"modules/DataMapperModule.html":{}},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"modules.html":{},"overview.html":{}}}],["datamappermodule.withinterceptor",{"_index":1836,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["datamapperui",{"_index":555,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["datamapperutil",{"_index":1138,"title":{"classes/DataMapperUtil.html":{}},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["datamapperutil.http_status_no_content",{"_index":2549,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["datamapperutil.readbinaryfile(mappingsfilename",{"_index":2622,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["datamapperutil.removeitemfromarray(action",{"_index":2987,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["datamapperutil.removeitemfromarray(field",{"_index":4028,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["datamapperutil.removeitemfromarray(field.path",{"_index":4001,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["datamapperutil.removeitemfromarray(m",{"_index":3140,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["datamapperutil.removeitemfromarray(mappedfield",{"_index":3019,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["datamapperutil.removeitemfromarray(mappedfields.find(mf",{"_index":3006,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["datamapperutil.removeitemfromarray(ns",{"_index":3902,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["datamapperutil.str2bytes(aggregatebuffer",{"_index":2604,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["datamapperutil.todisplayable",{"_index":3308,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["datamapperutil.todisplayable(argconfigname",{"_index":3279,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["datamapperutil.writefile(filecontent",{"_index":2614,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["datamapperversion",{"_index":827,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["datasource",{"_index":2351,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["date",{"_index":366,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"license.html":{}}}],["date().gettime",{"_index":2831,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["date_time",{"_index":2344,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["date_time_tz",{"_index":2345,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["datetime",{"_index":367,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["datetimetz",{"_index":370,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["datetz",{"_index":368,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["ddd",{"_index":572,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["debug",{"_index":1818,"title":{},"body":{"classes/ErrorInfo.html":{},"miscellaneous/enumerations.html":{}}}],["decimal",{"_index":360,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["declarations",{"_index":210,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}],["declare",{"_index":929,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["decoration",{"_index":568,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["decoration:none",{"_index":575,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["decorators",{"_index":248,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["deep",{"_index":4068,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["default",{"_index":23,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaulttokenvalue",{"_index":4871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defend",{"_index":4832,"title":{},"body":{"license.html":{}}}],["defined",{"_index":32,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["definition",{"_index":1389,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"license.html":{}}}],["definition'},{'name",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["definition.component",{"_index":436,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"classes/LineModel.html":{}}}],["definition.component.ts",{"_index":4418,"title":{},"body":{"coverage.html":{}}}],["definition.model",{"_index":257,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["definition.model.ts",{"_index":3075,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["definition.model.ts:100",{"_index":3105,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:110",{"_index":3115,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:24",{"_index":3921,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["definition.model.ts:25",{"_index":3094,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:26",{"_index":3920,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["definition.model.ts:27",{"_index":3096,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:28",{"_index":3095,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:29",{"_index":3093,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:30",{"_index":3097,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:31",{"_index":3101,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:32",{"_index":3923,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["definition.model.ts:33",{"_index":3098,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:34",{"_index":3100,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:35",{"_index":3092,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:41",{"_index":3118,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:45",{"_index":3103,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:49",{"_index":3922,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["definition.model.ts:51",{"_index":3110,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:55",{"_index":3112,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:60",{"_index":3113,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:72",{"_index":3117,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:84",{"_index":3107,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.name",{"_index":2117,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["definitions",{"_index":1020,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["definitions.length",{"_index":2319,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["deflate",{"_index":2529,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["deflate(binbuffer",{"_index":2605,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["defnames",{"_index":2321,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["defnames.push(name",{"_index":2325,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["defnames.sort",{"_index":2327,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["defsbyname",{"_index":2320,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["defsbyname[name",{"_index":2324,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["delete",{"_index":2506,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["deliberate",{"_index":4798,"title":{},"body":{"license.html":{}}}],["delimiter",{"_index":4251,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["delimiter.prettyname",{"_index":3287,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["delimitermodel",{"_index":3228,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["delimitermodel.delimiter",{"_index":3282,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["delimitermodels",{"_index":4280,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["delimiters",{"_index":3178,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["delta",{"_index":1235,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["deltas",{"_index":2743,"title":{},"body":{"classes/LineModel.html":{}}}],["depend",{"_index":1335,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["dependencies",{"_index":1043,"title":{"dependencies.html":{}},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["depth",{"_index":4048,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["derivative",{"_index":4639,"title":{},"body":{"license.html":{}}}],["derived",{"_index":4641,"title":{},"body":{"license.html":{}}}],["describing",{"_index":2592,"title":{},"body":{"injectables/FileManagementService.html":{},"license.html":{}}}],["description",{"_index":10,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTableUtil.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"license.html":{}}}],["design",{"_index":2259,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["designated",{"_index":4678,"title":{},"body":{"license.html":{}}}],["designed",{"_index":4536,"title":{},"body":{"index.html":{}}}],["desire",{"_index":2402,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["detail",{"_index":1240,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ModalErrorDetailComponent.html":{}}}],["detail'},{'name",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["detail.component",{"_index":438,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"classes/LineModel.html":{}}}],["detail.component.css",{"_index":514,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["detail.component.html",{"_index":1241,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ModalErrorDetailComponent.html":{}}}],["detail.component.ts",{"_index":1239,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ModalErrorDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:100",{"_index":3459,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:105",{"_index":1286,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:117",{"_index":3471,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:118",{"_index":1280,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:122",{"_index":3472,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:123",{"_index":1291,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:127",{"_index":3457,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:130",{"_index":1287,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:131",{"_index":3456,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:141",{"_index":1281,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:158",{"_index":1282,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:171",{"_index":1301,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:177",{"_index":1288,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:188",{"_index":1292,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:193",{"_index":1284,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:212",{"_index":1277,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:25",{"_index":3764,"title":{},"body":{"components/ModalErrorDetailComponent.html":{}}}],["detail.component.ts:257",{"_index":1303,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:26",{"_index":3765,"title":{},"body":{"components/ModalErrorDetailComponent.html":{}}}],["detail.component.ts:276",{"_index":1289,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:28",{"_index":3766,"title":{},"body":{"components/ModalErrorDetailComponent.html":{}}}],["detail.component.ts:281",{"_index":1285,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:285",{"_index":1312,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:31",{"_index":3449,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:32",{"_index":3452,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/ModalErrorDetailComponent.html":{}}}],["detail.component.ts:33",{"_index":3450,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:34",{"_index":3451,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:35",{"_index":3145,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["detail.component.ts:36",{"_index":3146,"title":{},"body":{"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ModalErrorDetailComponent.html":{}}}],["detail.component.ts:37",{"_index":1267,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:38",{"_index":1268,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:39",{"_index":1269,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:40",{"_index":1270,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/ModalErrorDetailComponent.html":{}}}],["detail.component.ts:41",{"_index":3152,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["detail.component.ts:42",{"_index":1310,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:43",{"_index":1308,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:45",{"_index":1265,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:49",{"_index":1305,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{}}}],["detail.component.ts:51",{"_index":3453,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:53",{"_index":3147,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["detail.component.ts:57",{"_index":3149,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["detail.component.ts:64",{"_index":3455,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:66",{"_index":1275,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:71",{"_index":3454,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:73",{"_index":3151,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["detail.component.ts:74",{"_index":1272,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:88",{"_index":1279,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["detail/collapsable",{"_index":277,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"modules/DataMapperModule.html":{},"components/MappingDetailComponent.html":{},"coverage.html":{}}}],["detail/data",{"_index":513,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["detail/lookup",{"_index":1102,"title":{},"body":{"modules/DataMapperModule.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"coverage.html":{}}}],["detail/mapping",{"_index":437,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"coverage.html":{}}}],["detail/transition",{"_index":1104,"title":{},"body":{"modules/DataMapperModule.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["details",{"_index":3159,"title":{},"body":{"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["detected",{"_index":4009,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["detector",{"_index":385,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["determine",{"_index":1938,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/TextNode.html":{}}}],["determining",{"_index":4787,"title":{},"body":{"license.html":{}}}],["dev",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["developer",{"_index":4538,"title":{},"body":{"index.html":{}}}],["development",{"_index":4564,"title":{},"body":{"index.html":{}}}],["diagnostic",{"_index":1735,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["diff",{"_index":3333,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["different",{"_index":4567,"title":{},"body":{"index.html":{},"license.html":{}}}],["differing",{"_index":3257,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["direct",{"_index":4604,"title":{},"body":{"license.html":{}}}],["direction",{"_index":4607,"title":{},"body":{"license.html":{}}}],["directive",{"_index":113,"title":{"directives/FocusDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["directly",{"_index":4578,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1210,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["disable",{"_index":314,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["disableconsolelogging",{"_index":4868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disablemappingpreviewmode",{"_index":828,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disablenavbar",{"_index":829,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disableprivateonlyfields",{"_index":830,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disableprotectedonlyfields",{"_index":831,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disablepublicgettersetterfields",{"_index":832,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disablepubliconlyfields",{"_index":833,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disarm",{"_index":770,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["discard",{"_index":1579,"title":{},"body":{"classes/EnumValue.html":{}}}],["disclaimer",{"_index":4778,"title":{},"body":{"license.html":{}}}],["discovercomplexfields(fields",{"_index":4073,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["discussing",{"_index":4673,"title":{},"body":{"license.html":{}}}],["dismiss",{"_index":3786,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["dismissall",{"_index":3772,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["display",{"_index":560,"title":{},"body":{"components/DataMapperAppComponent.html":{},"license.html":{}}}],["displayablestring",{"_index":1231,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["displayed",{"_index":3214,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["displayfieldsearchbox",{"_index":3337,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["displayindex",{"_index":3441,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["displayname",{"_index":1545,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{}}}],["displayparentobject",{"_index":3442,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["displaytransitionselection",{"_index":3338,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["distribute",{"_index":4697,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":497,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["distribution",{"_index":4585,"title":{},"body":{"license.html":{}}}],["dm",{"_index":2503,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["doc",{"_index":1013,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"classes/MappingUtil.html":{}}}],["doc.addfield(constantfield",{"_index":3736,"title":{},"body":{"classes/MappingUtil.html":{}}}],["doc.addfield(mappedfield.field",{"_index":3752,"title":{},"body":{"classes/MappingUtil.html":{}}}],["doc.getfield(mappedfield.parseddata.parsedpath",{"_index":3726,"title":{},"body":{"classes/MappingUtil.html":{}}}],["doc.getfield(parentpath",{"_index":3751,"title":{},"body":{"classes/MappingUtil.html":{}}}],["doc.id",{"_index":3712,"title":{},"body":{"classes/MappingUtil.html":{}}}],["doc.initialized",{"_index":1041,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["doc.inspectionresult",{"_index":1030,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["doc.inspectionsource",{"_index":2596,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["doc.inspectiontype",{"_index":2597,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["doc.name",{"_index":3713,"title":{},"body":{"classes/MappingUtil.html":{}}}],["doc.type",{"_index":1027,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["doccount",{"_index":2588,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["docdef",{"_index":216,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["docdef.description",{"_index":964,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.fields[0",{"_index":2390,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["docdef.id",{"_index":958,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.initmodel",{"_index":956,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.inspectionresult",{"_index":974,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.inspectionsource",{"_index":972,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.inspectiontype",{"_index":970,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.issource",{"_index":966,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.name",{"_index":962,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.selectedroot",{"_index":976,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.showfields",{"_index":968,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.type",{"_index":960,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.type.tolowercase",{"_index":984,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.uri",{"_index":979,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdefcomponent",{"_index":2790,"title":{},"body":{"classes/LineModel.html":{}}}],["docdefcomponent.getdocdefelementposition(field.docdef",{"_index":2793,"title":{},"body":{"classes/LineModel.html":{}}}],["docdefcomponent.getfielddetailcomponentposition(parentfield",{"_index":2797,"title":{},"body":{"classes/LineModel.html":{}}}],["docdefin",{"_index":595,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["docdefinput",{"_index":386,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/LineModel.html":{}}}],["docdefout",{"_index":600,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["docdefoutput",{"_index":387,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/LineModel.html":{}}}],["docdefs",{"_index":992,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdefs.push(this.adddocument(docmodel",{"_index":995,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel",{"_index":957,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.collectionclassname",{"_index":988,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.collectiontype",{"_index":987,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.description",{"_index":965,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.id",{"_index":959,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.inspectionresult",{"_index":975,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.inspectionsource",{"_index":973,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.inspectiontype",{"_index":971,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.issource",{"_index":967,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.name",{"_index":963,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.selectedroot",{"_index":977,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.showfields",{"_index":969,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.type",{"_index":961,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docmap",{"_index":1012,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/MappingUtil.html":{}}}],["docmap[doc.uri",{"_index":1015,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docmap[mappedfield.parseddata.parseddocuri",{"_index":3720,"title":{},"body":{"classes/MappingUtil.html":{}}}],["docmodel",{"_index":993,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docmodels",{"_index":994,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docs",{"_index":1001,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{}}}],["document",{"_index":21,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["document).ready",{"_index":4355,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["document.component.css",{"_index":512,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["document/data",{"_index":511,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["document/document",{"_index":435,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/LineModel.html":{}}}],["documentation",{"_index":4396,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentdefinition",{"_index":237,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["documentdefinitioncomponent",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["documentfielddetailcomponent",{"_index":138,"title":{"components/DocumentFieldDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["documentid",{"_index":1035,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/MappingUtil.html":{}}}],["documentinitializationmodel",{"_index":889,"title":{"classes/DocumentInitializationModel.html":{}},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["documentmanagementservice",{"_index":636,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["documentmanagementservice.generateexportblockdata(doc.inspectionsource",{"_index":2602,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["documentmanagementservice.generateexportmappings(this.jsonbuffer[0",{"_index":2585,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["documentmanagementservice.generateexportmetastr(doc",{"_index":2601,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["documents",{"_index":1018,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["documentsareloaded",{"_index":1040,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["documentservice",{"_index":918,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["documenttype",{"_index":332,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"miscellaneous/enumerations.html":{}}}],["documenttype.constant",{"_index":352,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["documenttype.java",{"_index":985,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["documenttype.java_archive",{"_index":982,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["documenttype.json",{"_index":4233,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["documenttype.property",{"_index":932,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["documenttype.xml",{"_index":1037,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/FieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["documenttype.xsd",{"_index":978,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["doesn't",{"_index":66,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/FieldEditComponent.html":{},"index.html":{}}}],["dofetchfieldactions",{"_index":2152,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["dom",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["domsanitizer",{"_index":1264,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["don't",{"_index":2756,"title":{},"body":{"classes/LineModel.html":{},"license.html":{}}}],["dormant",{"_index":2669,"title":{},"body":{"classes/LineModel.html":{}}}],["double",{"_index":361,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["down",{"_index":297,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["download",{"_index":3394,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["downloads",{"_index":1209,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["drag",{"_index":1321,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["dragenter/dragleave/dragover",{"_index":1331,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["dragenterleave",{"_index":1246,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["dragenterleave(event",{"_index":1273,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["dragged",{"_index":1337,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["draggedmappedfield",{"_index":3378,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["draghover",{"_index":1379,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["drawcurrentline(x",{"_index":2731,"title":{},"body":{"classes/LineModel.html":{}}}],["drawing",{"_index":460,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["drawingline",{"_index":2678,"title":{},"body":{"classes/LineModel.html":{}}}],["drawline(event",{"_index":2728,"title":{},"body":{"classes/LineModel.html":{}}}],["drawlinesformapping(m",{"_index":2762,"title":{},"body":{"classes/LineModel.html":{}}}],["drop",{"_index":3405,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["dropdown",{"_index":557,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/FieldEditComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["dropdown:hover",{"_index":578,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["droppedfield",{"_index":1348,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["droppedmappedfield",{"_index":3414,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["dskiptests",{"_index":4558,"title":{},"body":{"index.html":{}}}],["dupe",{"_index":1578,"title":{},"body":{"classes/EnumValue.html":{}}}],["during",{"_index":1330,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["dynamic",{"_index":1134,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["dynamically",{"_index":1489,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["e",{"_index":754,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["e.identifier",{"_index":1797,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["e.level",{"_index":1757,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["e.mapping",{"_index":1756,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/MappingListComponent.html":{}}}],["e.message",{"_index":1774,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/ModalErrorDetailComponent.html":{}}}],["e.name",{"_index":2880,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["e.scope",{"_index":800,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MappingListComponent.html":{}}}],["e.sourcevalue",{"_index":2894,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["e.targetvalue",{"_index":2896,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["e.type",{"_index":1785,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/MappingListComponent.html":{}}}],["each",{"_index":3464,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"license.html":{}}}],["easier",{"_index":4850,"title":{},"body":{"license.html":{}}}],["edit",{"_index":300,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["edit'},{'name",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["edit.component",{"_index":1082,"title":{},"body":{"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["edit.component.html",{"_index":301,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["edit.component.ts",{"_index":299,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"coverage.html":{}}}],["edit.component.ts:108",{"_index":2365,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:112",{"_index":2375,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:116",{"_index":2373,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:120",{"_index":2363,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:140",{"_index":2366,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:158",{"_index":2371,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:162",{"_index":2367,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:27",{"_index":4089,"title":{},"body":{"components/TemplateEditComponent.html":{}}}],["edit.component.ts:28",{"_index":4088,"title":{},"body":{"components/TemplateEditComponent.html":{}}}],["edit.component.ts:29",{"_index":3843,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:30",{"_index":3844,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["edit.component.ts:31",{"_index":3842,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:32",{"_index":325,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:33",{"_index":326,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:34",{"_index":331,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["edit.component.ts:35",{"_index":323,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:36",{"_index":330,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:37",{"_index":329,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:38",{"_index":328,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:39",{"_index":2379,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:40",{"_index":310,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:41",{"_index":2381,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:42",{"_index":2377,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:43",{"_index":2376,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:44",{"_index":2378,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:45",{"_index":2361,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:50",{"_index":3840,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:52",{"_index":322,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:53",{"_index":2370,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:56",{"_index":307,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:57",{"_index":3838,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:65",{"_index":4081,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:66",{"_index":311,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["edit.component.ts:69",{"_index":4080,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:70",{"_index":308,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["edit.component.ts:77",{"_index":4082,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:78",{"_index":312,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["edit.component.ts:93",{"_index":2369,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:97",{"_index":2374,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edited",{"_index":3461,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["editfield",{"_index":1247,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["editfield(event",{"_index":1276,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["editmode",{"_index":2352,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["editorial",{"_index":4642,"title":{},"body":{"license.html":{}}}],["edittemplate",{"_index":4114,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["el",{"_index":1381,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["el.offsetheight",{"_index":2765,"title":{},"body":{"classes/LineModel.html":{}}}],["el.offsetleft",{"_index":1383,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["el.offsetparent",{"_index":1385,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["el.offsettop",{"_index":1384,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["elaborations",{"_index":4644,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":4660,"title":{},"body":{"license.html":{}}}],["elem",{"_index":719,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["element",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["elementref",{"_index":235,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["elements",{"_index":466,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["emits",{"_index":1934,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["emitupdatedevent",{"_index":1690,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["emitupdatedevent(scope",{"_index":1718,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["empty",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["emptymodalbodycomponent",{"_index":140,"title":{"components/EmptyModalBodyComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["enable",{"_index":319,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["enableexpression",{"_index":4207,"title":{},"body":{"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["enables",{"_index":4570,"title":{},"body":{"index.html":{}}}],["encapsulation",{"_index":377,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["enclosed",{"_index":4841,"title":{},"body":{"license.html":{}}}],["end",{"_index":1911,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"classes/TextNode.html":{},"license.html":{}}}],["enddrag",{"_index":1248,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["enddrag(event",{"_index":1278,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["endoffset",{"_index":1914,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["engine",{"_index":4534,"title":{},"body":{"index.html":{}}}],["entering",{"_index":1274,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["entities",{"_index":4598,"title":{},"body":{"license.html":{}}}],["entity",{"_index":4592,"title":{},"body":{"license.html":{}}}],["entries",{"_index":2543,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["entry",{"_index":2546,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["entry.sourcevalue",{"_index":2837,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["entry.targetvalue",{"_index":2845,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["entrycomponents",{"_index":1054,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["enum",{"_index":1817,"title":{},"body":{"classes/ErrorInfo.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["enumeration",{"_index":1549,"title":{},"body":{"classes/EnumValue.html":{},"components/TransitionSelectionComponent.html":{}}}],["enumerations",{"_index":4513,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumfieldsbyclassidentifier",{"_index":3946,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["enumvalue",{"_index":1538,"title":{"classes/EnumValue.html":{}},"body":{"classes/EnumValue.html":{},"coverage.html":{}}}],["enumvalues",{"_index":1550,"title":{},"body":{"classes/EnumValue.html":{}}}],["environment",{"_index":71,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.backendurls.atlasserviceurl",{"_index":680,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["environment.backendurls.javainspectionserviceurl",{"_index":674,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["environment.backendurls.jsoninspectionserviceurl",{"_index":678,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["environment.backendurls.xmlinspectionserviceurl",{"_index":676,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["environment.xsrf",{"_index":681,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["environment.xsrf.cookiename",{"_index":685,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["environment.xsrf.defaulttokenvalue",{"_index":687,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["environment.xsrf.headername",{"_index":683,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["environments/environment",{"_index":653,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["equal",{"_index":4268,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["equivalent",{"_index":1211,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["error",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["error'},{'name",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["error('could",{"_index":3985,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["error.component",{"_index":433,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{}}}],["error.component.html",{"_index":718,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts",{"_index":717,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:102",{"_index":768,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:112",{"_index":775,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:122",{"_index":741,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:130",{"_index":747,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:32",{"_index":735,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:33",{"_index":736,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:35",{"_index":781,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:36",{"_index":777,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:38",{"_index":778,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:39",{"_index":782,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:40",{"_index":779,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:41",{"_index":780,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:43",{"_index":774,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:50",{"_index":773,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:59",{"_index":737,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:64",{"_index":739,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:68",{"_index":751,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:72",{"_index":750,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:76",{"_index":753,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:87",{"_index":756,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.identifier",{"_index":3768,"title":{},"body":{"components/ModalErrorDetailComponent.html":{}}}],["error.message",{"_index":1768,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["error.model",{"_index":1866,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["error.object",{"_index":1760,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["error.object.message",{"_index":1761,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["error.scope",{"_index":1771,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/ModalErrorDetailComponent.html":{}}}],["error.status",{"_index":2255,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["error.statustext",{"_index":2616,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["error1",{"_index":2618,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["errorhandlerservice",{"_index":635,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"components/ModalErrorDetailComponent.html":{},"classes/TextNode.html":{},"coverage.html":{},"overview.html":{}}}],["errorhandlerservice.filterwith(this.errors",{"_index":791,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["erroridentifiercounter",{"_index":1800,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["errorinfo",{"_index":740,"title":{"classes/ErrorInfo.html":{}},"body":{"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["errorinfo({message",{"_index":1794,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["errorinfo.erroridentifiercounter",{"_index":1824,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["errorinfo.erroridentifiercounter.tostring",{"_index":1823,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["errorlevel",{"_index":783,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["errorlevel.error",{"_index":795,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["errorlevel.info",{"_index":797,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ModalErrorDetailComponent.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["errorlevel.warn",{"_index":796,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/FieldActionService.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["errormessage",{"_index":1792,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["erroroccurred",{"_index":3941,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["errorpanel",{"_index":388,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["errors",{"_index":720,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MappingListComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["errors.filter(e",{"_index":1755,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errors.foreach(e",{"_index":3589,"title":{},"body":{"components/MappingListComponent.html":{}}}],["errors.foreach(error",{"_index":1759,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errors.length",{"_index":1754,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errorscope",{"_index":1719,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["errorscope.application",{"_index":2239,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"classes/MappingUtil.html":{},"components/ToolbarComponent.html":{}}}],["errorscope.field",{"_index":1668,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["errorscope.form",{"_index":1770,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errorscope.mapping",{"_index":1667,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{}}}],["errorservice",{"_index":734,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"components/ModalErrorDetailComponent.html":{}}}],["errorservicerequired",{"_index":724,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["errorsubscription",{"_index":721,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingListComponent.html":{}}}],["errortype",{"_index":1666,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["errortype.internal",{"_index":2058,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["errortype.preview",{"_index":1786,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errortype.user",{"_index":2016,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{}}}],["errortype.validation",{"_index":1787,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/MappingListComponent.html":{}}}],["errorupdatedsource",{"_index":1681,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["erros",{"_index":1741,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["escaped",{"_index":693,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["establish",{"_index":2473,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["established",{"_index":275,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["establishing",{"_index":2574,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["even",{"_index":3569,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{},"license.html":{}}}],["event",{"_index":232,"title":{},"body":{"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["event's",{"_index":1327,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["event.ctrlkey",{"_index":1351,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["event.currenttarget",{"_index":3406,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["event.datatransfer.setdata('text",{"_index":1340,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["event.item['field",{"_index":2416,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["event.metakey",{"_index":1352,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["event.offsety.tostring",{"_index":2730,"title":{},"body":{"classes/LineModel.html":{}}}],["event.preventdefault",{"_index":1346,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{}}}],["event.srcelement.value",{"_index":4193,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["event.stoppropagation",{"_index":1347,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["event.target",{"_index":2707,"title":{},"body":{"classes/LineModel.html":{}}}],["event.target.files[0",{"_index":4181,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["event.target.selectedoptions",{"_index":3266,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["event.target.selectedoptions.item(0).attributes",{"_index":3268,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["event.target.selectedoptions.item(0).attributes.getnameditem('value').value",{"_index":269,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["event.target.value",{"_index":3261,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/ToolbarComponent.html":{}}}],["event.target.value.length",{"_index":3262,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["event['clienty",{"_index":3408,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["event['pagey",{"_index":3407,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["eventemitter",{"_index":867,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["everytime",{"_index":1670,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["evt",{"_index":3411,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["evt.preventdefault",{"_index":3413,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["evt.stoppropagation",{"_index":3412,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["evt1",{"_index":766,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["evt1.preventdefault",{"_index":805,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["evt1.stoppropagation",{"_index":804,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["evt1['clienty",{"_index":3396,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["evt1['pagey",{"_index":3395,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["example",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"license.html":{}}}],["exampleappmodule",{"_index":1825,"title":{"modules/ExampleAppModule.html":{}},"body":{"modules/ExampleAppModule.html":{},"modules.html":{},"overview.html":{}}}],["examples",{"_index":654,"title":{"classes/Examples.html":{}},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/Examples.html":{},"coverage.html":{}}}],["examples.pom",{"_index":695,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["except",{"_index":485,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["exchange",{"_index":4198,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["excludebyidentifier",{"_index":1691,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["excludebyidentifier(errors",{"_index":1722,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["excluding",{"_index":4675,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":4688,"title":{},"body":{"license.html":{}}}],["executed",{"_index":4767,"title":{},"body":{"license.html":{}}}],["executesearch",{"_index":2357,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["executesearch(filter",{"_index":2362,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["exercise",{"_index":4793,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":4621,"title":{},"body":{"license.html":{}}}],["exist",{"_index":2399,"title":{},"body":{"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{}}}],["existing",{"_index":3699,"title":{},"body":{"classes/MappingUtil.html":{}}}],["exists",{"_index":317,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["expand",{"_index":1591,"title":{},"body":{"classes/EnumValue.html":{}}}],["expandtoroot",{"_index":1593,"title":{},"body":{"classes/EnumValue.html":{}}}],["explicitly",{"_index":4761,"title":{},"body":{"license.html":{}}}],["export",{"_index":51,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["exportblockdata",{"_index":2587,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["exported",{"_index":2511,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["exportmappings",{"_index":4206,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["exportmappingscatalog",{"_index":2454,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["exportmappingscatalog(mappingsfilename",{"_index":2469,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["exportmeta",{"_index":2586,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["exports",{"_index":209,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}],["express",{"_index":502,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["expression",{"_index":1874,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["expression'},{'name",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["expression.component",{"_index":4173,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["expression.model",{"_index":4260,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["expressioncomponent",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["expressionmodel",{"_index":1887,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{}}}],["expressionnode",{"_index":1851,"title":{"classes/ExpressionNode.html":{}},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["expressionnode.sequence",{"_index":1870,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:27",{"_index":2440,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:28",{"_index":2441,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:34",{"_index":2444,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:38",{"_index":2446,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:39",{"_index":2445,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnodes",{"_index":1945,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressions",{"_index":3419,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["expressionupdated",{"_index":1889,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionupdatedevent",{"_index":1867,"title":{"classes/ExpressionUpdatedEvent.html":{}},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["expressionupdatedsource",{"_index":1888,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["extends",{"_index":1872,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["extractdisplaypath",{"_index":1143,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["extractdisplaypath(path",{"_index":1156,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["extracted",{"_index":2498,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["extractfieldactiondefinition",{"_index":2153,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["extractfieldactiondefinition(actiondetail",{"_index":2184,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["extractor",{"_index":17,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["f",{"_index":2993,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["f(x",{"_index":4246,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["f.field",{"_index":2997,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["f.field.enumeration",{"_index":3000,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["f.field.isincollection",{"_index":2996,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fa",{"_index":294,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["fade",{"_index":1478,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["failure",{"_index":4812,"title":{},"body":{"license.html":{}}}],["fake",{"_index":2400,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fakenamespace",{"_index":2410,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fakenamespace.alias",{"_index":2411,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["false",{"_index":267,"title":{},"body":{"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/variables.html":{}}}],["faster",{"_index":4556,"title":{},"body":{"index.html":{}}}],["fatal",{"_index":2615,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["fee",{"_index":4820,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":18,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["fetchedactionconfigs.foreach(action",{"_index":2250,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fetchedactionconfigs.length",{"_index":2245,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fetchfieldactions",{"_index":2154,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fetching",{"_index":881,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["field",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["field's",{"_index":3307,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"classes/NamespaceModel.html":{}}}],["field'},{'name",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["field.alphabetizefields(cachedfield.children",{"_index":4072,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.alphabetizefields(field.parentfield.children",{"_index":4006,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.alphabetizefields(fields",{"_index":3041,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["field.alphabetizefields(this.fields",{"_index":3991,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.children",{"_index":1565,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["field.children.length",{"_index":1586,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["field.children.push(childfield",{"_index":4021,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.component",{"_index":1095,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["field.component.html",{"_index":3595,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts",{"_index":3594,"title":{},"body":{"components/MappingListFieldComponent.html":{},"coverage.html":{}}}],["field.component.ts:28",{"_index":3600,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:29",{"_index":3599,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:30",{"_index":3598,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:31",{"_index":3597,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:33",{"_index":3604,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:37",{"_index":3602,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:44",{"_index":3601,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:52",{"_index":3603,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.copy",{"_index":339,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["field.docdef",{"_index":1392,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["field.docdef.showfields",{"_index":2791,"title":{},"body":{"classes/LineModel.html":{}}}],["field.docdef.type",{"_index":3960,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.enumeration",{"_index":4059,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.fielddepth",{"_index":4019,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.fieldhasunmappedchild(childfield",{"_index":1567,"title":{},"body":{"classes/EnumValue.html":{}}}],["field.fieldhasunmappedchild(field",{"_index":4046,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.getfieldlabel(cfg.showtypes",{"_index":1441,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["field.getfieldlabel(configmodel.getconfig().showtypes",{"_index":2422,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["field.getnamewithnamespace",{"_index":4049,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.hasunmappedchildren",{"_index":4032,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.isarray",{"_index":4050,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.isattribute",{"_index":4053,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.iscollection",{"_index":1639,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["field.isparentfield",{"_index":2421,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["field.issource",{"_index":3058,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["field.isterminal",{"_index":1562,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["field.model",{"_index":2964,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["field.name",{"_index":3959,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.parentfield",{"_index":1640,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["field.parentfield.children",{"_index":4030,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.parentfield.children.push(field",{"_index":4005,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.parentfield.fielddepth",{"_index":3999,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.parentfield.path",{"_index":3998,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.partofmapping",{"_index":1563,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["field.partoftransformation",{"_index":4033,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.path",{"_index":1391,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingListComponent.html":{},"classes/NamespaceModel.html":{}}}],["field.path.tolowercase().includes(filter",{"_index":3584,"title":{},"body":{"components/MappingListComponent.html":{}}}],["field.serviceobject",{"_index":4054,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.serviceobject.path",{"_index":4055,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.serviceobject.status",{"_index":4074,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.type",{"_index":334,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["field.uuidcounter",{"_index":1590,"title":{},"body":{"classes/EnumValue.html":{}}}],["field.uuidcounter.tostring",{"_index":1589,"title":{},"body":{"classes/EnumValue.html":{}}}],["field.visibleincurrentdocumentsearch",{"_index":2800,"title":{},"body":{"classes/LineModel.html":{}}}],["fieldaction",{"_index":2070,"title":{"classes/FieldAction.html":{}},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["fieldactionargument",{"_index":2088,"title":{"classes/FieldActionArgument.html":{}},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"coverage.html":{}}}],["fieldactionargumentvalue",{"_index":2076,"title":{"classes/FieldActionArgumentValue.html":{}},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"coverage.html":{}}}],["fieldactionconfig",{"_index":2285,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactionconfig.name",{"_index":2322,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition",{"_index":2078,"title":{"classes/FieldActionDefinition.html":{}},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["fieldactiondefinition.arguments.push(argumentdefinition",{"_index":2316,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.arguments[0",{"_index":3326,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["fieldactiondefinition.arguments[0].values",{"_index":3327,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["fieldactiondefinition.arguments[0].values.length",{"_index":3328,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["fieldactiondefinition.iscustom",{"_index":2294,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.method",{"_index":2300,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.multiplicity",{"_index":2227,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.name",{"_index":2229,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.populatefieldaction(action",{"_index":3320,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["fieldactiondefinition.serviceobject",{"_index":2303,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.sourcetype",{"_index":2296,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.targettype",{"_index":2298,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactions",{"_index":2273,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactionservice",{"_index":874,"title":{"injectables/FieldActionService.html":{}},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"coverage.html":{},"overview.html":{}}}],["fieldcomponent",{"_index":1413,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldcomponent.getfield",{"_index":1422,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldcomponent.initialize(self.field",{"_index":1416,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldcomponent.issource",{"_index":1414,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldcomponents",{"_index":1242,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fielddepth",{"_index":1552,"title":{},"body":{"classes/EnumValue.html":{}}}],["fielddescription",{"_index":1731,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["fielddetail",{"_index":1374,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fielddetailelement",{"_index":1243,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fielddocdefname",{"_index":608,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["fieldeditcomponent",{"_index":146,"title":{"components/FieldEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fieldexists(targetfield",{"_index":3957,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["fieldhasunmappedchild(field",{"_index":1561,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldisconstant",{"_index":2975,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldisproperty",{"_index":2974,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldmappingpair",{"_index":2177,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldmode",{"_index":302,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"miscellaneous/enumerations.html":{}}}],["fieldmode.create",{"_index":337,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["fieldmode.edit",{"_index":336,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["fieldname",{"_index":3639,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{}}}],["fieldname.indexof",{"_index":3744,"title":{},"body":{"classes/MappingUtil.html":{}}}],["fieldname.split(':')[0",{"_index":3745,"title":{},"body":{"classes/MappingUtil.html":{}}}],["fieldname.split(':')[1",{"_index":3746,"title":{},"body":{"classes/MappingUtil.html":{}}}],["fieldnameblacklist",{"_index":834,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["fieldnames",{"_index":1577,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldnames.push(field.name",{"_index":1582,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldnames.sort",{"_index":1583,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldnode",{"_index":1879,"title":{"classes/FieldNode.html":{}},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["fieldnode(this.mapping",{"_index":2039,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fieldnodes",{"_index":1981,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fieldnodes.find(n",{"_index":2037,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fieldpairmatchessearch",{"_index":3522,"title":{},"body":{"components/MappingListComponent.html":{}}}],["fieldpairmatchessearch(mapping",{"_index":3535,"title":{},"body":{"components/MappingListComponent.html":{}}}],["fieldpath",{"_index":1574,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["fieldpaths",{"_index":2980,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["fieldpaths.push(path",{"_index":2984,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldpaths.sort",{"_index":2985,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldpos",{"_index":2796,"title":{},"body":{"classes/LineModel.html":{}}}],["fields",{"_index":461,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["fields.length",{"_index":1584,"title":{},"body":{"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["fields.push(field",{"_index":3967,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["fields.push(fieldsbyname[name",{"_index":1585,"title":{},"body":{"classes/EnumValue.html":{}}}],["fields.push(mappedfield.field",{"_index":3038,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fields[fields.length",{"_index":3036,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldsbyname",{"_index":1576,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldsbyname[field.name",{"_index":1580,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldsbypath",{"_index":2979,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["fieldsbypath[path",{"_index":2983,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldshouldbevisible",{"_index":1249,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldtype",{"_index":2353,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fieldtypeselectionchanged",{"_index":2358,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fieldtypeselectionchanged(event",{"_index":2364,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fieldwidth",{"_index":1157,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["fifty",{"_index":4613,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"license.html":{}}}],["filebin",{"_index":2619,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["filebody",{"_index":1220,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["filecontent",{"_index":1212,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["filed",{"_index":4722,"title":{},"body":{"license.html":{}}}],["filedata",{"_index":4110,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filemanagementservice",{"_index":877,"title":{"injectables/FileManagementService.html":{}},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["filename",{"_index":1175,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/ToolbarComponent.html":{}}}],["filename.concat('.adm",{"_index":4243,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filename.length",{"_index":4238,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filename.split('.').pop",{"_index":4242,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filereader",{"_index":2620,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["files",{"_index":2471,"title":{},"body":{"injectables/FileManagementService.html":{},"license.html":{}}}],["fileservice",{"_index":920,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["filter",{"_index":1727,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["filtering",{"_index":884,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["filterwith",{"_index":1692,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["filterwith(errors",{"_index":1725,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["find",{"_index":2874,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{}}}],["findmappingfiles",{"_index":2455,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["findmappingfiles(filter",{"_index":2481,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["findmappingsforfield",{"_index":3083,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["findmappingsforfield(field",{"_index":3104,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["finish",{"_index":4391,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["firefox",{"_index":1341,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["first",{"_index":2196,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fitness",{"_index":4783,"title":{},"body":{"license.html":{}}}],["fits",{"_index":1159,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["fixed",{"_index":618,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{}}}],["fixme",{"_index":4034,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["flags",{"_index":885,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["float",{"_index":362,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["float:left",{"_index":596,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["fn",{"_index":2049,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fn.field",{"_index":2056,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fname",{"_index":1204,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["focus",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["focusdirective",{"_index":189,"title":{"directives/FocusDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["focusel",{"_index":217,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["following",{"_index":3462,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"index.html":{},"license.html":{}}}],["font",{"_index":609,"title":{},"body":{"components/DataMapperAppComponent.html":{},"dependencies.html":{}}}],["foo.bar",{"_index":1839,"title":{},"body":{"classes/Examples.html":{}}}],["for_each",{"_index":4261,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["forkjoin",{"_index":2531,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["forkjoin(operations).topromise().then((data",{"_index":2640,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["form",{"_index":602,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/DataMapperUtil.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"components/MappingFieldActionArgumentComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["format",{"_index":2475,"title":{},"body":{"injectables/FileManagementService.html":{},"license.html":{}}}],["formattedfield",{"_index":2423,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["formattedfield['displayname'].tolowercase().indexof(filter.tolowercase",{"_index":2424,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["formattedfields",{"_index":2419,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["formattedfields.length",{"_index":2426,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["formattedfields.push(formattedfield",{"_index":2425,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["formerrors",{"_index":1682,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["formerrorupdatedsource",{"_index":1683,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["formsmodule",{"_index":1069,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["found",{"_index":4540,"title":{},"body":{"index.html":{}}}],["foundfields",{"_index":3962,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["foundfields.length",{"_index":3964,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["foundselectedmapping",{"_index":2749,"title":{},"body":{"classes/LineModel.html":{}}}],["free",{"_index":4691,"title":{},"body":{"license.html":{}}}],["frequently",{"_index":1674,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["fromjson",{"_index":2903,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["fromjson(json",{"_index":2826,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["full",{"_index":745,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/FileManagementService.html":{}}}],["function",{"_index":1469,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FileManagementService.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/TransitionSelectionComponent.html":{}}}],["g",{"_index":1878,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["generated",{"_index":3027,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"license.html":{}}}],["generateinitialexpression",{"_index":1894,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["generating",{"_index":1734,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["generically",{"_index":2202,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["geometry",{"_index":2688,"title":{},"body":{"classes/LineModel.html":{}}}],["getactionconfigparamvalues",{"_index":3182,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getactionconfigparamvalues(argconfig",{"_index":3209,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getactionconfigparamvdefault",{"_index":3183,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getactionconfigparamvdefault(argconfig",{"_index":3211,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getactionconfigs",{"_index":3292,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["getactiondefinitionforname",{"_index":2155,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getactiondefinitionforname(actionname",{"_index":2188,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getactionsappliestofield",{"_index":2156,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getactionsappliestofield(mapping",{"_index":2191,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getactualfield",{"_index":2157,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getactualfield(mapping",{"_index":2194,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getaddbuttonlabel",{"_index":3339,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["getalldocs",{"_index":1038,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getallfields",{"_index":3048,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["getallmappedfields",{"_index":3050,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getallmappings",{"_index":3084,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["getallmappings(includeactivemapping",{"_index":3106,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["getargumentforname",{"_index":2132,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["getargumentforname(name",{"_index":2111,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["getargumentvalue",{"_index":2074,"title":{},"body":{"classes/FieldAction.html":{}}}],["getargumentvalue(argumentname",{"_index":2083,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["getcfg",{"_index":2525,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getclass",{"_index":3650,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getcollectioncount",{"_index":1637,"title":{},"body":{"classes/EnumValue.html":{}}}],["getcollectionparentfield",{"_index":1633,"title":{},"body":{"classes/EnumValue.html":{}}}],["getcollectiontype",{"_index":1642,"title":{},"body":{"classes/EnumValue.html":{}}}],["getcomplexfield(classidentifier",{"_index":3951,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getconfig",{"_index":397,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getcssclass",{"_index":280,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["getcssclass(action",{"_index":4131,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["getcurrentadmcatalog",{"_index":2456,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getcurrentmappingcatalog",{"_index":2457,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getcurrentmappingdefinitionid",{"_index":3506,"title":{},"body":{"injectables/MappingIdentifierService.html":{}}}],["getcurrentmappingjson",{"_index":2458,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getdisplayname",{"_index":3340,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["getdisplayname(model",{"_index":3362,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["getdocbyid",{"_index":3682,"title":{},"body":{"classes/MappingUtil.html":{}}}],["getdocbyid(documentid",{"_index":3688,"title":{},"body":{"classes/MappingUtil.html":{}}}],["getdocforidentifier(documentid",{"_index":1031,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getdocs(issource",{"_index":1000,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getdocswithoutpropertydoc(issource",{"_index":996,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getdocurimap(cfg",{"_index":1010,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["geteditorsettingscssclass",{"_index":4115,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["geteditorsettingscssclass(open",{"_index":4133,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["getelementposition",{"_index":1250,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getentryforsource",{"_index":2806,"title":{},"body":{"classes/LookupTable.html":{}}}],["getentryforsource(sourcevalue",{"_index":2814,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["getenumfield(classidentifier",{"_index":3953,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["geterrors",{"_index":725,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["geterrors().length",{"_index":3801,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["getfield",{"_index":305,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["getfield(fieldpath",{"_index":1573,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["getfielddetailcomponent",{"_index":1251,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getfielddetailcomponent(field",{"_index":1283,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getfieldid",{"_index":1252,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getfieldlabel(showtypes",{"_index":1644,"title":{},"body":{"classes/EnumValue.html":{}}}],["getfieldnames(fields",{"_index":1571,"title":{},"body":{"classes/EnumValue.html":{}}}],["getfieldnames(issource",{"_index":3039,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getfieldpath",{"_index":3443,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["getfieldpaths(fields",{"_index":1568,"title":{},"body":{"classes/EnumValue.html":{}}}],["getfieldpaths(issource",{"_index":3044,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getfields(fieldpaths",{"_index":3965,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getfields(issource",{"_index":3037,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getfieldtypeicon",{"_index":1253,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getfilesuffix",{"_index":4116,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["getfirstcollectionfield(issource",{"_index":2992,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getfirsterror",{"_index":726,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["getfirsterror().message",{"_index":815,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["getfirstmappingforlookuptable",{"_index":2913,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["getfirstmappingforlookuptable(mappingdefinition",{"_index":2916,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["getfirstwarning",{"_index":727,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["getfirstwarning().message",{"_index":816,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["getfirstxmldoc(issource",{"_index":1036,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getformattedoutputpath",{"_index":3611,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["getformattedoutputpath(path",{"_index":3615,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["getformattedoutputpath(selectedfield.path",{"_index":3647,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["getformattedoutputpath(sourcefield.field.path",{"_index":3677,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getformattedoutputpath(targetfield.field.path",{"_index":3679,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getidentifier",{"_index":1814,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["getindexformappedfield(mappedfield",{"_index":3025,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getinfos",{"_index":728,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/ModalErrorDetailComponent.html":{}}}],["getinitialfocuselement",{"_index":223,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["getinputoutputkey",{"_index":2807,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["getitemscssclass",{"_index":3523,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["getjsonbuf",{"_index":2459,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getlabel",{"_index":3184,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["getlabel(actionconfig.name",{"_index":3329,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["getlabel(argconfig.name",{"_index":3285,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getlabel(argconfigname",{"_index":3219,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getlastmappedfield(issource",{"_index":3035,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getlastnode",{"_index":1902,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["getlastnodeindex",{"_index":1900,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["getmappedfieldactions",{"_index":3185,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["getmappedfieldforfield(field",{"_index":3021,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getmappedfieldforindex(index",{"_index":3022,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getmappedfields",{"_index":3524,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappedfields(issource",{"_index":3034,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getmappedfields(mapping",{"_index":3538,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappedtarget(field",{"_index":3057,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getmappedvaluecount",{"_index":4341,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["getmappingclass",{"_index":1254,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getmappingcssclass",{"_index":3525,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappingcssclass(mapping",{"_index":3540,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappingdefinitionid",{"_index":2460,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getmappingmodename",{"_index":4324,"title":{},"body":{"classes/TransitionModel.html":{}}}],["getmappingmodename(mode",{"_index":4308,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["getmappingrowscssclass",{"_index":3526,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappings",{"_index":3527,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmultiplicityactionconfigs",{"_index":4342,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["getname(showtypes",{"_index":3968,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getnamespacecssclass",{"_index":3859,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getnamespacecssclass(namespace",{"_index":3869,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getnamespaceforalias(alias",{"_index":3969,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getnamespaces",{"_index":3860,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getnamespaces().length",{"_index":3911,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getnamewithnamespace",{"_index":1600,"title":{},"body":{"classes/EnumValue.html":{}}}],["getnode(nodeid",{"_index":1904,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["getpaneliconcssclass",{"_index":3341,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["getpaneliconcssclass(model",{"_index":3364,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["getparentobjectname",{"_index":3444,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["getparenttoggleclass",{"_index":1255,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getprettylabel",{"_index":3918,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getprettyname",{"_index":4312,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["getrowscssclass",{"_index":3861,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getrowtitlecssclass",{"_index":3528,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["getscreenposforfield(field",{"_index":2789,"title":{},"body":{"classes/LineModel.html":{}}}],["getsearchiconcssclass",{"_index":3529,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["getsearchplaceholder",{"_index":3342,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["getselected",{"_index":1311,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getselectedmapping",{"_index":3612,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["getselectedmappingcomponent",{"_index":3613,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["getsourceiconcssclass",{"_index":3445,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["getsourcetargetlabeltext",{"_index":3651,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getsourcetargetlabeltext(false",{"_index":3678,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getsourcetargetlabeltext(issource",{"_index":3666,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getsourcetargetlabeltext(true",{"_index":3676,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getspacerwidth",{"_index":1256,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["gettablebyname",{"_index":3085,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettablebyname(name",{"_index":3109,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettablebysourcetarget",{"_index":3086,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettablebysourcetarget(sourceidentifier",{"_index":3111,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettables",{"_index":3087,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettargetfieldfromline(selectedlineattrs",{"_index":2690,"title":{},"body":{"classes/LineModel.html":{}}}],["getterminalfields",{"_index":3987,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getting",{"_index":4524,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettitle",{"_index":3143,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["gettoken",{"_index":31,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["gettopfieldtypelabel",{"_index":3343,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["gettransformationclass",{"_index":1257,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getunqualifiednamespace",{"_index":3919,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getuserfieldcount(field",{"_index":3008,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getusermappedfields(issource",{"_index":3029,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getuuid",{"_index":1855,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["getwarnings",{"_index":729,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["getwarnings().length",{"_index":3800,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["git",{"_index":4545,"title":{},"body":{"index.html":{}}}],["github",{"_index":4544,"title":{},"body":{"index.html":{}}}],["give",{"_index":4726,"title":{},"body":{"license.html":{}}}],["global",{"_index":1332,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["global/mapping",{"_index":1740,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["glue",{"_index":1979,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["go",{"_index":1985,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["goodwill",{"_index":4809,"title":{},"body":{"license.html":{}}}],["google",{"_index":4526,"title":{},"body":{"index.html":{}}}],["governing",{"_index":507,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["gradient",{"_index":2668,"title":{},"body":{"classes/LineModel.html":{}}}],["grant",{"_index":4683,"title":{},"body":{"license.html":{}}}],["granted",{"_index":4622,"title":{},"body":{"license.html":{}}}],["granting",{"_index":4594,"title":{},"body":{"license.html":{}}}],["grants",{"_index":4685,"title":{},"body":{"license.html":{}}}],["graph",{"_index":4854,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":4799,"title":{},"body":{"license.html":{}}}],["group",{"_index":603,"title":{},"body":{"components/DataMapperAppComponent.html":{},"index.html":{}}}],["grouped",{"_index":1665,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gzip",{"_index":2478,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["half",{"_index":763,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["hand",{"_index":3460,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["handle",{"_index":757,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlealertclick",{"_index":3763,"title":{},"body":{"components/ModalErrorDetailComponent.html":{}}}],["handlealertclick(error",{"_index":3767,"title":{},"body":{"components/ModalErrorDetailComponent.html":{}}}],["handlealertclose",{"_index":730,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlealertclose(e",{"_index":752,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handled",{"_index":2232,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["handledocumentfieldmouseover(component",{"_index":2734,"title":{},"body":{"classes/LineModel.html":{}}}],["handleerror",{"_index":2461,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["handleerror(message",{"_index":2492,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["handleexportclick",{"_index":4117,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handleexportclick(event",{"_index":4137,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handleexportmapping",{"_index":4118,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handleexportmapping(event",{"_index":4140,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handleexportmappingcancel",{"_index":4119,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handlelineclick(event",{"_index":2705,"title":{},"body":{"classes/LineModel.html":{}}}],["handlemappingsinstancename",{"_index":4120,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handlemappingsinstancename(event",{"_index":4145,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handlemouseclick",{"_index":281,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["handlemouseclick(event",{"_index":288,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["handlemouseenter",{"_index":731,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlemouseenter(evt1",{"_index":755,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlemouseleave",{"_index":732,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlemouseleave(evt1",{"_index":767,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlemouseover",{"_index":1258,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["handlemouseover(event",{"_index":1300,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["handlemouseover(evt1",{"_index":3368,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["handleonblur",{"_index":2359,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["handleonblur(event",{"_index":2368,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["handler.service",{"_index":646,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"components/ModalErrorDetailComponent.html":{},"classes/TextNode.html":{}}}],["handler.service.ts",{"_index":1655,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:104",{"_index":1739,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:115",{"_index":1701,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:123",{"_index":1706,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:131",{"_index":1708,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:140",{"_index":1703,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:148",{"_index":1705,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:158",{"_index":1743,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:167",{"_index":1710,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:182",{"_index":1732,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:192",{"_index":1720,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:202",{"_index":1724,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:39",{"_index":1749,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:40",{"_index":1751,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:41",{"_index":1750,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:42",{"_index":1752,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:50",{"_index":1726,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:64",{"_index":1698,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:83",{"_index":1729,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:91",{"_index":1737,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handles",{"_index":1656,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FileManagementService.html":{}}}],["handling",{"_index":1959,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LookupTableUtil.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{}}}],["happen",{"_index":4038,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["happening",{"_index":4036,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["happens",{"_index":1713,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["harmless",{"_index":4834,"title":{},"body":{"license.html":{}}}],["hasfieldactions",{"_index":3045,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["hasfocus",{"_index":2647,"title":{},"body":{"directives/FocusDirective.html":{}}}],["hash",{"_index":4269,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["hasjavadocuments",{"_index":1025,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["hasmappedfield(issource",{"_index":3011,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["hassourcedoc",{"_index":389,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["hastargetdoc",{"_index":390,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["hastransformation",{"_index":3054,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["hasunmappedchildren",{"_index":1554,"title":{},"body":{"classes/EnumValue.html":{}}}],["hat",{"_index":477,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["hdd",{"_index":3393,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["header",{"_index":60,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/CollapsableHeaderComponent.html":{}}}],["header'},{'name",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["header.component",{"_index":1087,"title":{},"body":{"modules/DataMapperModule.html":{},"components/MappingDetailComponent.html":{}}}],["header.component.html",{"_index":279,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["header.component.ts",{"_index":278,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:25",{"_index":286,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["header.component.ts:26",{"_index":285,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["header.component.ts:28",{"_index":290,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["header.component.ts:32",{"_index":287,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["headername",{"_index":82,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":85,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["headertext",{"_index":1466,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["height",{"_index":616,"title":{},"body":{"components/DataMapperAppComponent.html":{},"dependencies.html":{}}}],["height:0px",{"_index":525,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["height:100",{"_index":528,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["height:12px",{"_index":552,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["height:calc(100",{"_index":584,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["hello",{"_index":3798,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["hereby",{"_index":4684,"title":{},"body":{"license.html":{}}}],["herein",{"_index":4764,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":620,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["hold",{"_index":4833,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3463,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["host",{"_index":638,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["host'},{'name",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["host.component",{"_index":203,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DataMapperModule.html":{}}}],["host.component.ts",{"_index":632,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"coverage.html":{}}}],["host.component.ts:39",{"_index":642,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["host.component.ts:43",{"_index":643,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["html",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["htmlcache",{"_index":1893,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["http",{"_index":14,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["http://127.0.0.1:8585",{"_index":4563,"title":{},"body":{"index.html":{}}}],["http://localhost:3000",{"_index":4579,"title":{},"body":{"index.html":{}}}],["http://localhost:8585/v2/atlas",{"_index":4874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8585/v2/atlas/java",{"_index":4876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8585/v2/atlas/json",{"_index":4880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8585/v2/atlas/xml",{"_index":4878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://stackoverflow.com/questions/40811809/add",{"_index":1488,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["http://www.apache.org/licenses",{"_index":4582,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":489,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["http://www.w3schools.com/howto/howto_css_modals.asp",{"_index":1463,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["http_interceptors",{"_index":1068,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["http_status_no_content",{"_index":1141,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["http_status_ok",{"_index":1142,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["httpclient",{"_index":2162,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["httpclientmodule",{"_index":1066,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["httpclientxsrfmodule",{"_index":1067,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["httpclientxsrfmodule.withoptions(environment.xsrf",{"_index":1129,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["httpclientxsrfmoduleforroot",{"_index":1128,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpevent",{"_index":41,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httphandler",{"_index":43,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httpheaders",{"_index":2213,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["httpinterceptor",{"_index":42,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httprequest",{"_index":44,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httprequest.clone",{"_index":84,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httprequest.headers.has(headername",{"_index":83,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httprequest.headers.set(headername",{"_index":86,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["https://github.com/atlasmap/atlasmap",{"_index":4547,"title":{},"body":{"index.html":{}}}],["https://github.com/atlasmap/atlasmap/issues/1128",{"_index":3984,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["https://github.com/atlasmap/atlasmap/issues/329",{"_index":4228,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["httpxsrftokenextractor",{"_index":45,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"modules/DataMapperModule.html":{}}}],["human",{"_index":1199,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["i.link:hover",{"_index":576,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["i.message",{"_index":814,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/ModalErrorDetailComponent.html":{}}}],["icon",{"_index":1118,"title":{},"body":{"modules/DataMapperModule.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"coverage.html":{}}}],["id",{"_index":890,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/MappingIdentifierService.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["id/:id",{"_index":205,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["identification",{"_index":4851,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":1723,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"coverage.html":{}}}],["identifier.service",{"_index":656,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["identifier.service.ts",{"_index":3505,"title":{},"body":{"injectables/MappingIdentifierService.html":{},"coverage.html":{}}}],["identifier.service.ts:10",{"_index":3511,"title":{},"body":{"injectables/MappingIdentifierService.html":{}}}],["identifier.service.ts:5",{"_index":3509,"title":{},"body":{"injectables/MappingIdentifierService.html":{}}}],["identify",{"_index":3265,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["identifying",{"_index":4844,"title":{},"body":{"license.html":{}}}],["ignore",{"_index":1320,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["ignoring",{"_index":2252,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["ii",{"_index":4611,"title":{},"body":{"license.html":{}}}],["iii",{"_index":4618,"title":{},"body":{"license.html":{}}}],["img",{"_index":551,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["implements",{"_index":53,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["implied",{"_index":503,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["import",{"_index":39,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["import/export",{"_index":711,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{}}}],["importadmcatalog",{"_index":2462,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["importadmcatalog(mappingsfilename",{"_index":2494,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["imported",{"_index":2512,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["importmappings",{"_index":4205,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["imports",{"_index":208,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"components/ToolbarComponent.html":{}}}],["improving",{"_index":4674,"title":{},"body":{"license.html":{}}}],["inability",{"_index":4807,"title":{},"body":{"license.html":{}}}],["inc",{"_index":478,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["incidental",{"_index":4804,"title":{},"body":{"license.html":{}}}],["include",{"_index":4647,"title":{},"body":{"license.html":{}}}],["includeactivemapping",{"_index":3108,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["included",{"_index":3028,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"license.html":{}}}],["includepath",{"_index":1645,"title":{},"body":{"classes/EnumValue.html":{}}}],["includes",{"_index":4741,"title":{},"body":{"license.html":{}}}],["including",{"_index":2450,"title":{},"body":{"injectables/FileManagementService.html":{},"license.html":{}}}],["inclusion",{"_index":4657,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":4682,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":4835,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":4831,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":4822,"title":{},"body":{"license.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexing",{"_index":3417,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["indexselectionchanged",{"_index":3446,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["indexselectionchanged(event",{"_index":3458,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["indicated",{"_index":4634,"title":{},"body":{"license.html":{}}}],["indicator",{"_index":1912,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["indices",{"_index":3466,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["indirect",{"_index":4605,"title":{},"body":{"license.html":{}}}],["individual",{"_index":4620,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["information",{"_index":659,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"license.html":{}}}],["informational",{"_index":4749,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":4706,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":4719,"title":{},"body":{"license.html":{}}}],["ingoring",{"_index":2231,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["inherit",{"_index":2395,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["inherited",{"_index":2439,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["init",{"_index":1804,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["initcfg",{"_index":905,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["initialfocuselement",{"_index":1511,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["initialfocuselement.nativeelement.focus",{"_index":1513,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["initialization",{"_index":4218,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["initializationerroroccurred",{"_index":835,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["initializationservice",{"_index":641,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{},"overview.html":{}}}],["initializationstatuschangedsubscription",{"_index":391,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["initialize",{"_index":224,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["initialize(cfg",{"_index":2851,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["initialize(field",{"_index":236,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["initialize(namespace",{"_index":3839,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["initialized",{"_index":70,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/NamespaceModel.html":{}}}],["initializefromfields",{"_index":3989,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["initializing",{"_index":661,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["initmodel",{"_index":3939,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"injectables/MappingIdentifierService.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"injectables/MappingIdentifierService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"injectables/MappingIdentifierService.html":{},"overview.html":{}}}],["inline",{"_index":561,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["input",{"_index":291,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceListComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["inputclassidentifier",{"_index":2930,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["inputfield",{"_index":2771,"title":{},"body":{"classes/LineModel.html":{},"classes/LookupTableUtil.html":{}}}],["inputfield.classidentifier",{"_index":2933,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["inputfieldpos",{"_index":2774,"title":{},"body":{"classes/LineModel.html":{}}}],["inputfieldpos.y",{"_index":2777,"title":{},"body":{"classes/LineModel.html":{}}}],["inputid",{"_index":3334,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["inputs",{"_index":282,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"directives/FocusDirective.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["inputvalue",{"_index":4369,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["inputvalue.length",{"_index":4378,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["insert",{"_index":1930,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["insertbeforemappedfield",{"_index":3359,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["inserted",{"_index":2022,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["insertion",{"_index":3492,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["insertionindex",{"_index":3487,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["insertnodes(newnodes",{"_index":1949,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["insertposition",{"_index":1946,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["inserttext(str",{"_index":1943,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["inside",{"_index":1490,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["inspection",{"_index":883,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["inspectionresult",{"_index":893,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["inspectionsource",{"_index":892,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["inspectiontype",{"_index":873,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["inspectiontype.instance",{"_index":2598,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["inspectiontype.java_class",{"_index":2600,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["inspectiontype.schema",{"_index":2599,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["install",{"_index":4557,"title":{},"body":{"index.html":{}}}],["installor",{"_index":4551,"title":{},"body":{"index.html":{}}}],["instance",{"_index":2114,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["instance.definition",{"_index":2115,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["instance.name",{"_index":2116,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["instance/schema/mappings",{"_index":2594,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["instanceof",{"_index":1919,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["instant",{"_index":1661,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["instead",{"_index":25,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["institute",{"_index":4709,"title":{},"body":{"license.html":{}}}],["instr",{"_index":1189,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["int8array(reader.result",{"_index":1224,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["integer",{"_index":355,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["integrations",{"_index":4532,"title":{},"body":{"index.html":{}}}],["intentionally",{"_index":4655,"title":{},"body":{"license.html":{}}}],["interactive",{"_index":4528,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":92,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{}}}],["intercept(httprequest",{"_index":63,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["interceptor",{"_index":56,"title":{"interceptors/ApiXsrfInterceptor.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":91,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{}}}],["interface",{"_index":1464,"title":{"interfaces/ModalErrorWindowValidator.html":{},"interfaces/ModalWindowValidator.html":{}},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":3802,"title":{},"body":{"interfaces/ModalErrorWindowValidator.html":{},"interfaces/ModalWindowValidator.html":{},"license.html":{},"overview.html":{}}}],["internal",{"_index":1821,"title":{},"body":{"classes/ErrorInfo.html":{},"components/MappingFieldActionArgumentComponent.html":{},"miscellaneous/enumerations.html":{}}}],["introducing",{"_index":4248,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["invalidate",{"_index":3317,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["invoke",{"_index":4357,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["io.atlasmap.java.v2",{"_index":900,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["io.atlasmap.json.v2",{"_index":902,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["io.atlasmap.json.v2.jsonfield",{"_index":2428,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["io.atlasmap.v2",{"_index":898,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["io.atlasmap.xml.v2",{"_index":904,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["io.atlasmap.xml.v2.xmlfield",{"_index":2429,"title":{},"body":{"components/FieldEditComponent.html":{},"classes/MappingUtil.html":{}}}],["iokey",{"_index":3130,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["irrevocable",{"_index":4692,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":3596,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["isactivemapping",{"_index":3530,"title":{},"body":{"components/MappingListComponent.html":{}}}],["isactivemapping(mapping",{"_index":3546,"title":{},"body":{"components/MappingListComponent.html":{}}}],["isadd",{"_index":238,"title":{},"body":{"components/ClassNameComponent.html":{},"components/FieldEditComponent.html":{}}}],["isaddbuttonvisible",{"_index":3344,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["isarray",{"_index":1556,"title":{},"body":{"classes/EnumValue.html":{}}}],["isattribute",{"_index":1557,"title":{},"body":{"classes/EnumValue.html":{}}}],["isclasspathresolutionneeded",{"_index":1028,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["isclosing",{"_index":303,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["iscollection",{"_index":1555,"title":{},"body":{"classes/EnumValue.html":{}}}],["isconstant",{"_index":1402,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{}}}],["iscustom",{"_index":2095,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["isdatavalid",{"_index":225,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["isdebugenabled",{"_index":949,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["isdragdroptarget",{"_index":1244,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["iseditmode",{"_index":3887,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["isempty",{"_index":3014,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["isenumerationmode",{"_index":4323,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["isfieldmapped(field",{"_index":3052,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["isfieldsexist(fields",{"_index":3961,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["isforeachmode",{"_index":4322,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["isfullymapped",{"_index":3015,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["isincollection",{"_index":1635,"title":{},"body":{"classes/EnumValue.html":{}}}],["isindexarg",{"_index":3293,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["isindexarg(argval",{"_index":3303,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["isinitialized",{"_index":2147,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["islookupmode",{"_index":2998,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["ismanytoonemode",{"_index":4321,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["ismappingstale",{"_index":3683,"title":{},"body":{"classes/MappingUtil.html":{}}}],["ismappingstale(mapping",{"_index":3690,"title":{},"body":{"classes/MappingUtil.html":{}}}],["isn't",{"_index":1329,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["isnan(mappingdefinitionid",{"_index":3516,"title":{},"body":{"injectables/MappingIdentifierService.html":{}}}],["isoddrow",{"_index":3652,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["isonetomanymode",{"_index":4319,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["isonetoonemode",{"_index":4320,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["isopen",{"_index":722,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["ispadfield",{"_index":2951,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["isparentfield",{"_index":1603,"title":{},"body":{"classes/EnumValue.html":{}}}],["ispartialcomponent",{"_index":3345,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["isprimitive",{"_index":1558,"title":{},"body":{"classes/EnumValue.html":{}}}],["isproperty",{"_index":1400,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{}}}],["ispropertyorconstant",{"_index":1651,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["isrequiredfieldvalid",{"_index":1693,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["isrequiredfieldvalid(value",{"_index":1730,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["isselectedmapping",{"_index":2766,"title":{},"body":{"classes/LineModel.html":{}}}],["issource",{"_index":218,"title":{},"body":{"components/ClassNameComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{}}}],["isstringfield",{"_index":1607,"title":{},"body":{"classes/EnumValue.html":{}}}],["issue",{"_index":4669,"title":{},"body":{"license.html":{}}}],["istarget",{"_index":3914,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["isterminal",{"_index":1608,"title":{},"body":{"classes/EnumValue.html":{}}}],["istraceenabled",{"_index":952,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["istransformcapable",{"_index":3447,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["isuserdelimiter",{"_index":3186,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["isuserdelimiter(delimitermodel",{"_index":3225,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["isxml",{"_index":2354,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["it's",{"_index":1322,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["item",{"_index":1183,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["itemisdocument",{"_index":3346,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["itemisdocument(model",{"_index":3372,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["itemrow",{"_index":3884,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["items",{"_index":1181,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["items.length",{"_index":1215,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["itemwasremoved",{"_index":1216,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["jackson",{"_index":1845,"title":{},"body":{"classes/Examples.html":{}}}],["january",{"_index":4580,"title":{},"body":{"license.html":{}}}],["jar",{"_index":1842,"title":{},"body":{"classes/Examples.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["jars",{"_index":4161,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["java",{"_index":983,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["java_archive",{"_index":4519,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["java_class",{"_index":4522,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["javainspectionserviceurl",{"_index":4875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["javaservicespackageprefix",{"_index":899,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["jquery",{"_index":4494,"title":{},"body":{"dependencies.html":{}}}],["jquery(function",{"_index":4356,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["js",{"_index":4490,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":2474,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/LookupTableEntry.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["json.sourcetype",{"_index":2828,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["json.sourcevalue",{"_index":2827,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["json.stringify(actiondetail",{"_index":2292,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["json.stringify(body",{"_index":2281,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["json.stringify(data",{"_index":2642,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["json.stringify(res",{"_index":2565,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["json.targettype",{"_index":2830,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["json.targetvalue",{"_index":2829,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["jsonbuffer",{"_index":2453,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["jsonheaders",{"_index":2636,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["jsoninspectionserviceurl",{"_index":4879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jsonservicespackageprefix",{"_index":901,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["kept",{"_index":2520,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["key",{"_index":1011,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["keypos",{"_index":1920,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["kind",{"_index":501,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["knowing",{"_index":1336,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["l",{"_index":2713,"title":{},"body":{"classes/LineModel.html":{}}}],["l.sourcex",{"_index":2714,"title":{},"body":{"classes/LineModel.html":{}}}],["l.sourcey",{"_index":2715,"title":{},"body":{"classes/LineModel.html":{}}}],["l.stroke",{"_index":2718,"title":{},"body":{"classes/LineModel.html":{}}}],["l.style",{"_index":2759,"title":{},"body":{"classes/LineModel.html":{}}}],["l.targetfield",{"_index":2719,"title":{},"body":{"classes/LineModel.html":{}}}],["l.targetx",{"_index":2716,"title":{},"body":{"classes/LineModel.html":{}}}],["l.targety",{"_index":2717,"title":{},"body":{"classes/LineModel.html":{}}}],["label",{"_index":548,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["language",{"_index":506,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["last",{"_index":1951,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["last.str",{"_index":2005,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["last.str.length",{"_index":2004,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["last.str.substring(0",{"_index":2006,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastaddedindex",{"_index":1976,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastfieldrefremoved(removed.field",{"_index":2003,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastfieldrefremoved(targetfieldnode.field",{"_index":2008,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastnewnodeindex",{"_index":1963,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastnode",{"_index":1918,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastnode.str.indexof",{"_index":1921,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastnode.str.length",{"_index":2065,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastseparator",{"_index":3740,"title":{},"body":{"classes/MappingUtil.html":{}}}],["lasttextnode",{"_index":1954,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["latest",{"_index":1935,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["law",{"_index":493,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["lawsuit",{"_index":4715,"title":{},"body":{"license.html":{}}}],["leaf",{"_index":1163,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["leaf.length",{"_index":1236,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["leaf.substr(0",{"_index":1234,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["leave",{"_index":2403,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["left",{"_index":532,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["left:0",{"_index":537,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["left_bracket",{"_index":3935,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["legal",{"_index":4595,"title":{},"body":{"license.html":{}}}],["legend",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"overview.html":{}}}],["legible",{"_index":3222,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["length",{"_index":4381,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["level",{"_index":1659,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/variables.html":{}}}],["liability",{"_index":4794,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4802,"title":{},"body":{"license.html":{}}}],["lib/atlasmap",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ExampleAppModule.html":{}}}],["libraries",{"_index":2570,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["library",{"_index":2507,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["libs",{"_index":2571,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["licensable",{"_index":4704,"title":{},"body":{"license.html":{}}}],["license",{"_index":482,"title":{"license.html":{}},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["license.you",{"_index":4756,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":479,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["licenses",{"_index":4720,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":4590,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":4781,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":509,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["limited",{"_index":4626,"title":{},"body":{"license.html":{}}}],["line",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["line.sourcex",{"_index":2694,"title":{},"body":{"classes/LineModel.html":{}}}],["line.sourcey",{"_index":2696,"title":{},"body":{"classes/LineModel.html":{}}}],["line.targetfield",{"_index":2701,"title":{},"body":{"classes/LineModel.html":{}}}],["line.targetx",{"_index":2698,"title":{},"body":{"classes/LineModel.html":{}}}],["line.targety",{"_index":2700,"title":{},"body":{"classes/LineModel.html":{}}}],["line:hover",{"_index":625,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["linebeingformed",{"_index":2677,"title":{},"body":{"classes/LineModel.html":{}}}],["linemachine",{"_index":392,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["linemachinecomponent",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["linemachineelement",{"_index":2681,"title":{},"body":{"classes/LineModel.html":{}}}],["linemachineheight",{"_index":2764,"title":{},"body":{"classes/LineModel.html":{}}}],["linemodel",{"_index":2656,"title":{"classes/LineModel.html":{}},"body":{"classes/LineModel.html":{},"coverage.html":{}}}],["linerefreshsubscription",{"_index":2683,"title":{},"body":{"classes/LineModel.html":{}}}],["lines",{"_index":2676,"title":{},"body":{"classes/LineModel.html":{},"components/ToolbarComponent.html":{}}}],["link",{"_index":1753,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["list",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["list'},{'name",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["list.component",{"_index":1094,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["list.component.css",{"_index":516,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["list.component.html",{"_index":3518,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts",{"_index":3517,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{},"coverage.html":{}}}],["list.component.ts:103",{"_index":3536,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:104",{"_index":3882,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:109",{"_index":3873,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:114",{"_index":3875,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:124",{"_index":3547,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:128",{"_index":3551,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:134",{"_index":3877,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:145",{"_index":3556,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:148",{"_index":3878,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:31",{"_index":3534,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts:32",{"_index":3865,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:33",{"_index":3560,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:34",{"_index":3559,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts:35",{"_index":3562,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts:36",{"_index":3561,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts:37",{"_index":3558,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts:39",{"_index":3549,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts:47",{"_index":3548,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:48",{"_index":3879,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:53",{"_index":3537,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:55",{"_index":3881,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:57",{"_index":3552,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:59",{"_index":3868,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:63",{"_index":3872,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:64",{"_index":3541,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:67",{"_index":3871,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:71",{"_index":3870,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:73",{"_index":3554,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:75",{"_index":3867,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:77",{"_index":3544,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:81",{"_index":3542,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:85",{"_index":3543,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:89",{"_index":3539,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:93",{"_index":3557,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:98",{"_index":3545,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list/data",{"_index":515,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["list/mapping",{"_index":1093,"title":{},"body":{"modules/DataMapperModule.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"coverage.html":{}}}],["list/namespace",{"_index":1096,"title":{},"body":{"modules/DataMapperModule.html":{},"components/NamespaceListComponent.html":{},"coverage.html":{}}}],["lists",{"_index":4667,"title":{},"body":{"license.html":{}}}],["literal",{"_index":3099,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["litigation",{"_index":4710,"title":{},"body":{"license.html":{}}}],["little",{"_index":4554,"title":{},"body":{"index.html":{}}}],["live",{"_index":4147,"title":{},"body":{"components/ToolbarComponent.html":{},"index.html":{}}}],["load",{"_index":2261,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["loadcomponent",{"_index":1502,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["loading",{"_index":420,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["loadingstatus",{"_index":393,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["local",{"_index":77,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["locale",{"_index":3948,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["location",{"_index":3856,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{}}}],["locationuri",{"_index":3915,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["logger",{"_index":871,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["loggermodule",{"_index":1076,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["loggermodule.forroot(environment.ngxloggerconfig",{"_index":1133,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["loggermoduleforroot",{"_index":1132,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["long",{"_index":363,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["looking",{"_index":3972,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["lookup",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["lookuptable",{"_index":2801,"title":{"classes/LookupTable.html":{}},"body":{"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["lookuptablecomponent",{"_index":150,"title":{"components/LookupTableComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["lookuptabledata",{"_index":2855,"title":{"classes/LookupTableData.html":{}},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"coverage.html":{}}}],["lookuptableentry",{"_index":2810,"title":{"classes/LookupTableEntry.html":{}},"body":{"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"coverage.html":{}}}],["lookuptablename",{"_index":2917,"title":{},"body":{"classes/LookupTableUtil.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["lookuptableutil",{"_index":2910,"title":{"classes/LookupTableUtil.html":{}},"body":{"classes/LookupTableUtil.html":{},"coverage.html":{}}}],["lookuptableutil.getfirstmappingforlookuptable(mappingdefinition",{"_index":2944,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["lookuptableutil.populatemappinglookuptable(mappingdefinition",{"_index":2948,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["loss",{"_index":4808,"title":{},"body":{"license.html":{}}}],["losses",{"_index":4815,"title":{},"body":{"license.html":{}}}],["lost",{"_index":4372,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["m",{"_index":2750,"title":{},"body":{"classes/LineModel.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{}}}],["m.getfields(false).length",{"_index":2929,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["m.getfields(false)[0",{"_index":2946,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["m.getfields(true).length",{"_index":2928,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["m.getfields(true)[0",{"_index":2932,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["m.isfieldmapped(field",{"_index":3061,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{}}}],["m.sourcefields",{"_index":2770,"title":{},"body":{"classes/LineModel.html":{}}}],["m.sourcefields.length",{"_index":2767,"title":{},"body":{"classes/LineModel.html":{}}}],["m.sourcefields[0].field.name",{"_index":3062,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["m.targetfields",{"_index":2780,"title":{},"body":{"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["m.targetfields.length",{"_index":2768,"title":{},"body":{"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["m.transition.lookuptablename",{"_index":2927,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["m.transition.mode",{"_index":2925,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["m1",{"_index":1297,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["machine",{"_index":623,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/LineModel.html":{}}}],["machine'},{'name",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["machine.component",{"_index":434,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["machine.component.html",{"_index":2675,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts",{"_index":2658,"title":{},"body":{"classes/LineModel.html":{},"coverage.html":{}}}],["machine.component.ts:29",{"_index":2665,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:30",{"_index":2666,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:31",{"_index":2673,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:32",{"_index":2674,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:33",{"_index":2670,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:34",{"_index":2671,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:35",{"_index":2672,"title":{},"body":{"classes/LineModel.html":{}}}],["made",{"_index":3204,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["mailing",{"_index":4666,"title":{},"body":{"license.html":{}}}],["make",{"_index":1611,"title":{},"body":{"classes/EnumValue.html":{},"components/MappingFieldActionArgumentComponent.html":{},"license.html":{}}}],["making",{"_index":4624,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":4813,"title":{},"body":{"license.html":{}}}],["manage",{"_index":1717,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["managed",{"_index":4671,"title":{},"body":{"license.html":{}}}],["management",{"_index":4143,"title":{},"body":{"components/ToolbarComponent.html":{},"license.html":{}}}],["management.service",{"_index":648,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{}}}],["management.service.ts",{"_index":2448,"title":{},"body":{"injectables/FileManagementService.html":{},"coverage.html":{}}}],["management.service.ts:109",{"_index":2483,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:138",{"_index":2508,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:159",{"_index":2505,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:183",{"_index":2517,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:207",{"_index":2510,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:234",{"_index":2470,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:339",{"_index":2495,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:34",{"_index":2523,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:36",{"_index":2524,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:385",{"_index":2490,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:39",{"_index":2468,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:412",{"_index":2489,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:43",{"_index":2526,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:447",{"_index":2491,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:451",{"_index":2493,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:47",{"_index":2528,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:54",{"_index":2482,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:83",{"_index":2484,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["manipulation",{"_index":2449,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["manner",{"_index":2234,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["manually",{"_index":4573,"title":{},"body":{"index.html":{}}}],["many",{"_index":4310,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["many_to_one",{"_index":2093,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["map",{"_index":273,"title":{},"body":{"components/ClassNameComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingListComponent.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["mapped",{"_index":1658,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["mappedfield",{"_index":1807,"title":{"classes/MappedField.html":{}},"body":{"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["mappedfield.actions",{"_index":3754,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.actions.length",{"_index":3047,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedfield.actions.push(action",{"_index":3760,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.field",{"_index":2981,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingListComponent.html":{},"classes/MappingUtil.html":{}}}],["mappedfield.field.displayname",{"_index":3747,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.field.isattribute",{"_index":3748,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.field.issource",{"_index":3494,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["mappedfield.field.name",{"_index":3501,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{}}}],["mappedfield.field.namespacealias",{"_index":3749,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.field.parentfield",{"_index":3750,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.field.path",{"_index":2982,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingUtil.html":{}}}],["mappedfield.field.serviceobject.jsontype",{"_index":3738,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.field.type",{"_index":3500,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{}}}],["mappedfield.field.usercreated",{"_index":3739,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.ispadfield",{"_index":3010,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedfield.parseddata.fieldisconstant",{"_index":3718,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.fieldisproperty",{"_index":3716,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedactions",{"_index":3756,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedactions.length",{"_index":3755,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parseddocid",{"_index":3724,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parseddocuri",{"_index":3723,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedindex",{"_index":3762,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedname",{"_index":3721,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedpath",{"_index":3737,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedvalue",{"_index":3729,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedvaluetype",{"_index":3731,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.usercreated",{"_index":3725,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfieldindex",{"_index":3715,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfieldparsingdata",{"_index":2956,"title":{"classes/MappedFieldParsingData.html":{}},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"coverage.html":{}}}],["mappedfields",{"_index":2026,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{}}}],["mappedfields.includes(node.field",{"_index":2032,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["mappedfields.length",{"_index":2978,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["mappedfields[+index",{"_index":3024,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedfields[0].field.isincollection",{"_index":3427,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["mappedinputfield",{"_index":2769,"title":{},"body":{"classes/LineModel.html":{}}}],["mappedinputfield.field",{"_index":2772,"title":{},"body":{"classes/LineModel.html":{}}}],["mappedoutputfield",{"_index":2779,"title":{},"body":{"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedoutputfield.field",{"_index":2781,"title":{},"body":{"classes/LineModel.html":{}}}],["mappedoutputfield.field.docdef",{"_index":3059,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedoutputfield.field.path",{"_index":3060,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mapper",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"index.html":{}}}],["mapper'},{'name",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["mapper.module",{"_index":1834,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["mapper.module.ts",{"_index":1053,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapper.module.ts:173",{"_index":1058,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["mapper/common/config.types.ts",{"_index":4518,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mapper/common/data",{"_index":1139,"title":{},"body":{"classes/DataMapperUtil.html":{},"coverage.html":{}}}],["mapper/common/focus.directive.ts",{"_index":2645,"title":{},"body":{"directives/FocusDirective.html":{},"coverage.html":{}}}],["mapper/common/focus.directive.ts:14",{"_index":2652,"title":{},"body":{"directives/FocusDirective.html":{}}}],["mapper/common/focus.directive.ts:8",{"_index":2651,"title":{},"body":{"directives/FocusDirective.html":{}}}],["mapper/common/focus.directive.ts:9",{"_index":2650,"title":{},"body":{"directives/FocusDirective.html":{}}}],["mapper/common/to",{"_index":4097,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{},"coverage.html":{}}}],["mapper/components/app/constant",{"_index":298,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"coverage.html":{}}}],["mapper/components/app/data",{"_index":373,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"coverage.html":{}}}],["mapper/components/app/field",{"_index":2350,"title":{},"body":{"components/FieldEditComponent.html":{},"coverage.html":{}}}],["mapper/components/app/line",{"_index":2657,"title":{},"body":{"classes/LineModel.html":{},"coverage.html":{}}}],["mapper/components/app/namespace",{"_index":3835,"title":{},"body":{"components/NamespaceEditComponent.html":{},"coverage.html":{}}}],["mapper/components/app/property",{"_index":4078,"title":{},"body":{"components/PropertyFieldEditComponent.html":{},"coverage.html":{}}}],["mapper/components/app/template",{"_index":4086,"title":{},"body":{"components/TemplateEditComponent.html":{},"coverage.html":{}}}],["mapper/components/data",{"_index":202,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DataMapperAppExampleHostComponent.html":{},"coverage.html":{}}}],["mapper/components/document/class",{"_index":211,"title":{},"body":{"components/ClassNameComponent.html":{},"coverage.html":{}}}],["mapper/components/document/document",{"_index":1238,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"coverage.html":{}}}],["mapper/components/mapping",{"_index":276,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/NamespaceListComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["mapper/components/modal/modal",{"_index":1454,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"coverage.html":{}}}],["mapper/components/toolbar/expression.component.ts",{"_index":4439,"title":{},"body":{"coverage.html":{}}}],["mapper/components/toolbar/toolbar.component.ts",{"_index":4107,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:100",{"_index":4154,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:105",{"_index":4136,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:109",{"_index":4132,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:134",{"_index":4134,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:138",{"_index":4164,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:183",{"_index":4148,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:195",{"_index":4126,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:211",{"_index":4160,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:239",{"_index":4130,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:262",{"_index":4138,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:277",{"_index":4146,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:295",{"_index":4141,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:306",{"_index":4144,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:310",{"_index":4129,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:32",{"_index":4124,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:33",{"_index":4125,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:35",{"_index":4166,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:37",{"_index":4170,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:39",{"_index":4167,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:40",{"_index":4168,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:41",{"_index":4169,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:48",{"_index":4158,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:64",{"_index":4150,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/data",{"_index":1052,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapper/models/config.model.ts",{"_index":819,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{}}}],["mapper/models/config.model.ts:34",{"_index":852,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:35",{"_index":861,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:36",{"_index":862,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:37",{"_index":843,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:38",{"_index":860,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:40",{"_index":844,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:41",{"_index":847,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:42",{"_index":845,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:43",{"_index":846,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:45",{"_index":866,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:46",{"_index":864,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:47",{"_index":865,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:50",{"_index":850,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:52",{"_index":863,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:54",{"_index":849,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:57",{"_index":859,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:58",{"_index":848,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:59",{"_index":855,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:60",{"_index":856,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:61",{"_index":858,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:62",{"_index":857,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:64",{"_index":853,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:67",{"_index":854,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:69",{"_index":841,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:82",{"_index":1445,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:83",{"_index":1453,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:84",{"_index":1450,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:85",{"_index":1444,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:86",{"_index":1449,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:87",{"_index":1452,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:88",{"_index":1448,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:89",{"_index":1447,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:90",{"_index":1446,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:91",{"_index":1451,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:92",{"_index":1443,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:93",{"_index":1442,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/document",{"_index":3912,"title":{},"body":{"classes/NamespaceModel.html":{},"coverage.html":{}}}],["mapper/models/error.model.ts",{"_index":1798,"title":{},"body":{"classes/ErrorInfo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["mapper/models/error.model.ts:42",{"_index":1806,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:43",{"_index":1805,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:45",{"_index":1811,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:46",{"_index":1809,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:47",{"_index":1812,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:48",{"_index":1813,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:49",{"_index":1810,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:50",{"_index":1808,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:51",{"_index":1803,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:59",{"_index":1815,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/examples.ts",{"_index":1837,"title":{},"body":{"classes/Examples.html":{},"coverage.html":{}}}],["mapper/models/examples.ts:18",{"_index":1850,"title":{},"body":{"classes/Examples.html":{}}}],["mapper/models/expression.model.ts",{"_index":1852,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["mapper/models/expression.model.ts:22",{"_index":2068,"title":{},"body":{"classes/ExpressionUpdatedEvent.html":{}}}],["mapper/models/expression.model.ts:23",{"_index":2069,"title":{},"body":{"classes/ExpressionUpdatedEvent.html":{}}}],["mapper/models/expression.model.ts:27",{"_index":1862,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:28",{"_index":1860,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:34",{"_index":1863,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:38",{"_index":1865,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:39",{"_index":1864,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:44",{"_index":4091,"title":{},"body":{"classes/TextNode.html":{}}}],["mapper/models/expression.model.ts:46",{"_index":4092,"title":{},"body":{"classes/TextNode.html":{}}}],["mapper/models/expression.model.ts:50",{"_index":4094,"title":{},"body":{"classes/TextNode.html":{}}}],["mapper/models/expression.model.ts:54",{"_index":4093,"title":{},"body":{"classes/TextNode.html":{}}}],["mapper/models/expression.model.ts:62",{"_index":2437,"title":{},"body":{"classes/FieldNode.html":{}}}],["mapper/models/expression.model.ts:64",{"_index":2438,"title":{},"body":{"classes/FieldNode.html":{}}}],["mapper/models/expression.model.ts:71",{"_index":2443,"title":{},"body":{"classes/FieldNode.html":{}}}],["mapper/models/expression.model.ts:75",{"_index":2442,"title":{},"body":{"classes/FieldNode.html":{}}}],["mapper/models/field",{"_index":2071,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["mapper/models/field.model.ts",{"_index":1539,"title":{},"body":{"classes/EnumValue.html":{},"coverage.html":{}}}],["mapper/models/field.model.ts:21",{"_index":1541,"title":{},"body":{"classes/EnumValue.html":{}}}],["mapper/models/field.model.ts:22",{"_index":1542,"title":{},"body":{"classes/EnumValue.html":{}}}],["mapper/models/lookup",{"_index":2802,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"coverage.html":{}}}],["mapper/models/mapping",{"_index":3074,"title":{},"body":{"classes/MappingDefinition.html":{},"coverage.html":{}}}],["mapper/models/mapping.model.ts",{"_index":2949,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"coverage.html":{}}}],["mapper/models/mapping.model.ts:25",{"_index":3069,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:26",{"_index":3070,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:27",{"_index":3071,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:28",{"_index":3066,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:29",{"_index":3067,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:30",{"_index":3068,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:31",{"_index":3064,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:32",{"_index":3063,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:33",{"_index":3072,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:34",{"_index":3065,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:35",{"_index":3073,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:39",{"_index":2957,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:40",{"_index":2955,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:41",{"_index":2954,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:43",{"_index":2963,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:65",{"_index":2958,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:69",{"_index":2959,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:73",{"_index":2961,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/transition.model.ts",{"_index":4249,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["mapper/models/transition.model.ts:122",{"_index":4334,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:137",{"_index":4339,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:141",{"_index":4340,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:145",{"_index":4338,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:149",{"_index":4337,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:153",{"_index":4336,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:33",{"_index":4257,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["mapper/models/transition.model.ts:34",{"_index":4259,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["mapper/models/transition.model.ts:35",{"_index":4258,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["mapper/models/transition.model.ts:36",{"_index":4255,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["mapper/models/transition.model.ts:48",{"_index":4327,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:50",{"_index":4331,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:51",{"_index":4326,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:52",{"_index":4332,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:53",{"_index":4330,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:54",{"_index":4329,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:55",{"_index":4328,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:56",{"_index":4325,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:62",{"_index":4335,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:90",{"_index":4333,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/services/api",{"_index":8,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"coverage.html":{}}}],["mapper/services/document",{"_index":4460,"title":{},"body":{"coverage.html":{}}}],["mapper/services/error",{"_index":1654,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["mapper/services/field",{"_index":2144,"title":{},"body":{"injectables/FieldActionService.html":{},"coverage.html":{}}}],["mapper/services/file",{"_index":2447,"title":{},"body":{"injectables/FileManagementService.html":{},"coverage.html":{}}}],["mapper/services/initialization.service.ts",{"_index":4467,"title":{},"body":{"coverage.html":{}}}],["mapper/services/mapping",{"_index":3504,"title":{},"body":{"injectables/MappingIdentifierService.html":{},"coverage.html":{}}}],["mapper/utils/lookup",{"_index":2911,"title":{},"body":{"classes/LookupTableUtil.html":{},"coverage.html":{}}}],["mapper/utils/mapping",{"_index":3681,"title":{},"body":{"classes/MappingUtil.html":{},"coverage.html":{}}}],["mapping",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["mapping.adm",{"_index":2582,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mapping.getallfields",{"_index":4042,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mapping.getallmappedfields",{"_index":3583,"title":{},"body":{"components/MappingListComponent.html":{}}}],["mapping.getfields(false)[0",{"_index":2866,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["mapping.getfields(issource",{"_index":2333,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["mapping.getfields(true)[0",{"_index":2876,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["mapping.getindexformappedfield(mappedfield",{"_index":3502,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["mapping.getmappedfieldforfield(field).actions.length",{"_index":4043,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mapping.getmappedfieldforindex((index",{"_index":1881,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["mapping.getmappedfields(issource",{"_index":3714,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mapping.getusermappedfields(issource",{"_index":3575,"title":{},"body":{"components/MappingListComponent.html":{}}}],["mapping.getusermappedfields(true",{"_index":2027,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["mapping.isfullymapped",{"_index":4390,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["mapping.model",{"_index":1816,"title":{},"body":{"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappingDefinition.html":{},"classes/TextNode.html":{}}}],["mapping.sourcefields.length",{"_index":3673,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["mapping.targetfields.length",{"_index":3674,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["mapping.transition.getprettyname",{"_index":3581,"title":{},"body":{"components/MappingListComponent.html":{}}}],["mapping.transition.userdelimiter",{"_index":4394,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["mapping/gz",{"_index":2555,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mapping/json",{"_index":2572,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mapping/reset",{"_index":2562,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mapping/resetlibs",{"_index":2569,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mapping/zip",{"_index":2561,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mapping_name_prefix",{"_index":3076,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["mappingchanged",{"_index":2738,"title":{},"body":{"classes/LineModel.html":{}}}],["mappingdefinition",{"_index":872,"title":{"classes/MappingDefinition.html":{}},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["mappingdefinition.activemapping",{"_index":4041,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mappingdefinition.addtable(table",{"_index":2938,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["mappingdefinition.getallmappings(true",{"_index":4039,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mappingdefinition.gettablebysourcetarget(inputclassidentifier",{"_index":2935,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["mappingdefinition.gettables",{"_index":2941,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["mappingdefinition.mapping_name_prefix",{"_index":3119,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["mappingdefinition.mappings",{"_index":2947,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["mappingdefinitionid",{"_index":930,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"classes/MappingDefinition.html":{},"injectables/MappingIdentifierService.html":{}}}],["mappingdefinitionids",{"_index":2634,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mappingdetailcomponent",{"_index":153,"title":{"components/MappingDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingfieldactionargumentcomponent",{"_index":155,"title":{"components/MappingFieldActionArgumentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingfieldactioncomponent",{"_index":158,"title":{"components/MappingFieldActionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingfieldcontainercomponent",{"_index":160,"title":{"components/MappingFieldContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingfielddetailcomponent",{"_index":162,"title":{"components/MappingFieldDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingfilenames",{"_index":2545,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mappingfilenames.push(entry.name",{"_index":2547,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mappingfiles",{"_index":925,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["mappingidentifierservice",{"_index":637,"title":{"injectables/MappingIdentifierService.html":{}},"body":{"components/DataMapperAppExampleHostComponent.html":{},"injectables/MappingIdentifierService.html":{},"coverage.html":{}}}],["mappinginitialized",{"_index":836,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["mappingisactive",{"_index":4040,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mappinglistcomponent",{"_index":163,"title":{"components/MappingListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappinglistfieldcomponent",{"_index":165,"title":{"components/MappingListFieldComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingmanagementservice",{"_index":634,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{},"overview.html":{}}}],["mappingmodel",{"_index":1112,"title":{},"body":{"modules/DataMapperModule.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["mappings",{"_index":926,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/ToolbarComponent.html":{}}}],["mappings.push(this.activemapping",{"_index":3136,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["mappingselectioncomponent",{"_index":168,"title":{"components/MappingSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingselectionrequiredsubscription",{"_index":3141,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["mappingselectionsection",{"_index":3669,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["mappingselectionsectioncomponent",{"_index":170,"title":{"components/MappingSelectionSectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingserializer",{"_index":1114,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{}}}],["mappingservice",{"_index":919,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["mappingservicespackageprefix",{"_index":897,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["mappingsfilename",{"_index":2480,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["mappingsfilename.length",{"_index":2581,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mappingsforfield",{"_index":3137,"title":{},"body":{"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{}}}],["mappingsforfield.push(m",{"_index":3139,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["mappingutil",{"_index":3680,"title":{"classes/MappingUtil.html":{}},"body":{"classes/MappingUtil.html":{},"coverage.html":{}}}],["mappingutil.updatemappedfieldsfromdocuments(mapping",{"_index":3710,"title":{},"body":{"classes/MappingUtil.html":{}}}],["margin",{"_index":531,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["margin:0px",{"_index":580,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["margin:auto",{"_index":607,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["marked",{"_index":4677,"title":{},"body":{"license.html":{}}}],["marks",{"_index":4772,"title":{},"body":{"license.html":{}}}],["master",{"_index":2504,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["match",{"_index":1390,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"dependencies.html":{}}}],["matches",{"_index":2170,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["matchesdate",{"_index":2158,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["matchesdate(candidatetype",{"_index":2198,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["matchesnumeric",{"_index":2159,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["matchesnumeric(candidatetype",{"_index":2204,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["matching",{"_index":89,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materializing",{"_index":4221,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["math.floor((math.random",{"_index":2990,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingUtil.html":{}}}],["math.floor(math.random",{"_index":2832,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["maven",{"_index":700,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["max",{"_index":3491,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["max_path_width",{"_index":1233,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["maybe",{"_index":1765,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["md",{"_index":588,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["mean",{"_index":4587,"title":{},"body":{"license.html":{}}}],["means",{"_index":1942,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"license.html":{}}}],["mechanical",{"_index":4628,"title":{},"body":{"license.html":{}}}],["media",{"_index":4632,"title":{},"body":{"license.html":{}}}],["medium",{"_index":4724,"title":{},"body":{"license.html":{}}}],["meet",{"_index":4725,"title":{},"body":{"license.html":{}}}],["menu",{"_index":3206,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["menus",{"_index":3324,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["merchantability",{"_index":4782,"title":{},"body":{"license.html":{}}}],["merely",{"_index":4650,"title":{},"body":{"license.html":{}}}],["mergedtextnode",{"_index":1966,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["mergedtextnode.str",{"_index":1968,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["message",{"_index":1472,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/ErrorInfo.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["messed",{"_index":467,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["meta",{"_index":2591,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["metadata",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["method",{"_index":57,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/ToolbarComponent.html":{}}}],["methods",{"_index":30,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/FieldAction.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["mf.field",{"_index":3007,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mfield",{"_index":2036,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["min",{"_index":582,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["minimal",{"_index":2521,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["misaligned",{"_index":469,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["miscellaneous",{"_index":4512,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":2230,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["mkdirp",{"_index":4497,"title":{},"body":{"dependencies.html":{}}}],["modal",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["modal.component.css",{"_index":518,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["modal//modal",{"_index":4171,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["modal/data",{"_index":517,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["modal/modal",{"_index":259,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["modalerrordetailcomponent",{"_index":173,"title":{"components/ModalErrorDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalerrorsubject",{"_index":1483,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["modalerrorsubscription",{"_index":1484,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["modalerrorwindow",{"_index":394,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["modalerrorwindowcomponent",{"_index":175,"title":{"components/ModalErrorWindowComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalerrorwindowvalidator",{"_index":3794,"title":{"interfaces/ModalErrorWindowValidator.html":{}},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"coverage.html":{}}}],["modalwindow",{"_index":395,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["modalwindowcomponent",{"_index":177,"title":{"components/ModalWindowComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalwindowvalidator",{"_index":213,"title":{"interfaces/ModalWindowValidator.html":{}},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"coverage.html":{}}}],["mode",{"_index":706,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["modeisenum",{"_index":4343,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["modeissupported",{"_index":3187,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["modeissupported(delimitermodel",{"_index":3229,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["model",{"_index":668,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/Examples.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/MappingFieldContainerComponent.html":{}}}],["model.displayname",{"_index":3392,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["model.field",{"_index":3391,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["model['field'].docdef",{"_index":3499,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["model['field'].docdef.name",{"_index":2431,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["model['field'].path",{"_index":2432,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["model[\\'field\\'].docdef",{"_index":3503,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["model[\\'field\\'].docdef.name",{"_index":2434,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["model[\\'field\\'].path",{"_index":2435,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["models",{"_index":4284,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["models.push(new",{"_index":4285,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["models/config.model",{"_index":50,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["models/document",{"_index":256,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"modules/DataMapperModule.html":{},"components/FieldEditComponent.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["models/error.model",{"_index":784,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["models/examples",{"_index":655,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["models/field",{"_index":2220,"title":{},"body":{"injectables/FieldActionService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"components/TransitionSelectionComponent.html":{}}}],["models/field.model",{"_index":258,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/PropertyFieldEditComponent.html":{}}}],["models/lookup",{"_index":2861,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"components/TransitionSelectionComponent.html":{}}}],["models/mapping",{"_index":1111,"title":{},"body":{"modules/DataMapperModule.html":{},"classes/LookupTableUtil.html":{},"classes/NamespaceModel.html":{}}}],["models/mapping.model",{"_index":1113,"title":{},"body":{"modules/DataMapperModule.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/TransitionSelectionComponent.html":{}}}],["models/transition.model",{"_index":2924,"title":{},"body":{"classes/LookupTableUtil.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["modifications",{"_index":4625,"title":{},"body":{"license.html":{}}}],["modified",{"_index":4729,"title":{},"body":{"license.html":{}}}],["modify",{"_index":4750,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":4755,"title":{},"body":{"license.html":{}}}],["module",{"_index":192,"title":{"modules/AppRoutingModule.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}],["module.id",{"_index":380,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["moduleid",{"_index":379,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["modules",{"_index":194,"title":{"modules.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":1060,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["moment",{"_index":1664,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"dependencies.html":{}}}],["more",{"_index":1673,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/MappingFieldContainerComponent.html":{},"classes/NamespaceModel.html":{},"license.html":{}}}],["mostly",{"_index":1672,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["mouse",{"_index":1295,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["mouseevent",{"_index":289,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["mouseeventtimer",{"_index":723,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["mousing",{"_index":759,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["movement",{"_index":3402,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["much",{"_index":1162,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["multi",{"_index":1137,"title":{},"body":{"modules/DataMapperModule.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["multi_space",{"_index":4270,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["multiple",{"_index":3218,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["multiplicity",{"_index":2090,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionComponent.html":{},"classes/MappingUtil.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["multiplicity.many_to_one",{"_index":2209,"title":{},"body":{"injectables/FieldActionService.html":{},"components/TransitionSelectionComponent.html":{}}}],["multiplicity.one_to_many",{"_index":2208,"title":{},"body":{"injectables/FieldActionService.html":{},"components/TransitionSelectionComponent.html":{}}}],["multiplicity.one_to_one",{"_index":2098,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionComponent.html":{},"classes/MappingUtil.html":{}}}],["multiplicity.one_to_one).length",{"_index":3312,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["multiplicity.zero_to_one",{"_index":2210,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["multispace",{"_index":4298,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["mvnw",{"_index":4549,"title":{},"body":{"index.html":{}}}],["mw",{"_index":1406,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["mw.nestedcomponent",{"_index":1408,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["mwc",{"_index":309,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["mytarget",{"_index":1480,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["mytargetchangessubscription",{"_index":1482,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["n",{"_index":1769,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["n.field",{"_index":2001,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["n.getuuid",{"_index":1908,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["n/a",{"_index":1886,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["n\\sourceidentifier",{"_index":2841,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["n\\targetidentifier",{"_index":2842,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["n\\tentry",{"_index":2844,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["name",{"_index":61,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["name'},{'name",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["name.component",{"_index":1085,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["name.component.html",{"_index":215,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts",{"_index":212,"title":{},"body":{"components/ClassNameComponent.html":{},"coverage.html":{}}}],["name.component.ts:31",{"_index":245,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:32",{"_index":250,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:33",{"_index":251,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:34",{"_index":254,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:35",{"_index":252,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:36",{"_index":247,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:37",{"_index":229,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:42",{"_index":240,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:47",{"_index":243,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:50",{"_index":241,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:54",{"_index":234,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:58",{"_index":244,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:62",{"_index":231,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["namednodemap",{"_index":2691,"title":{},"body":{"classes/LineModel.html":{}}}],["nameexistsoncreation",{"_index":4079,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["nameonly",{"_index":3616,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["names",{"_index":3042,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"license.html":{}}}],["names.push(field.name",{"_index":3043,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["namespace",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["namespace.alias",{"_index":3908,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespace.copy",{"_index":3846,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["namespace.istarget",{"_index":3847,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{}}}],["namespace.locationuri",{"_index":3910,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespace.uri",{"_index":3909,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacealias",{"_index":1560,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/MappingUtil.html":{}}}],["namespacecomponent",{"_index":3889,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacecomponent.initialize(ns",{"_index":3890,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacecomponent.namespace",{"_index":3892,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespaceeditcomponent",{"_index":178,"title":{"components/NamespaceEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["namespacefound",{"_index":2407,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["namespacelistcomponent",{"_index":180,"title":{"components/NamespaceListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["namespacematchessearch",{"_index":3862,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacematchessearch(ns",{"_index":3874,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacemodel",{"_index":2380,"title":{"classes/NamespaceModel.html":{}},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["namespacemodel.getunqualifiednamespace",{"_index":2392,"title":{},"body":{"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{}}}],["namespacemodel.unqualifiednamespace",{"_index":3924,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["namespaces",{"_index":2355,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["namespaceselectionchanged",{"_index":2360,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["namespaceselectionchanged(event",{"_index":2372,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["navbar'},{'name",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["navbar.component",{"_index":1833,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["navbar.component.ts",{"_index":4401,"title":{},"body":{"coverage.html":{}}}],["navigation",{"_index":709,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["nbsp",{"_index":1440,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingListComponent.html":{},"classes/TextNode.html":{}}}],["ncp",{"_index":4500,"title":{},"body":{"dependencies.html":{}}}],["necessarily",{"_index":4705,"title":{},"body":{"license.html":{}}}],["necessary",{"_index":738,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["need",{"_index":75,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["need/use",{"_index":67,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["needed",{"_index":3323,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["needs",{"_index":742,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["negligence",{"_index":4797,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":4800,"title":{},"body":{"license.html":{}}}],["nestedcomponent",{"_index":1473,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["nestedcomponentinitializedcallback",{"_index":1468,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["nestedcomponenttype",{"_index":1467,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["network",{"_index":2257,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["new",{"_index":324,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["newargvalue",{"_index":2121,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["newargvalue.name",{"_index":2122,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["newargvalue.value",{"_index":2123,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["newfield",{"_index":1419,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["newlines",{"_index":691,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["newnamespace",{"_index":3891,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["newnodes",{"_index":1948,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.length",{"_index":1964,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.pop",{"_index":1996,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.push(new",{"_index":1972,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.push(targetnode",{"_index":1974,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.splice(0",{"_index":1956,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.splice(lastnewnodeindex",{"_index":1971,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes[0",{"_index":1953,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes[lastnewnodeindex",{"_index":1965,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes[lastnewnodeindex]as",{"_index":1970,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes[newnodes.length",{"_index":1994,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newoffset",{"_index":2010,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["next",{"_index":64,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["next.handle(httprequest",{"_index":87,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["nextnode",{"_index":1992,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["nextnode.str",{"_index":1995,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["nextnodeindex",{"_index":1991,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["ng",{"_index":4508,"title":{},"body":{"dependencies.html":{}}}],["ngaftercontentchecked",{"_index":2648,"title":{},"body":{"directives/FocusDirective.html":{}}}],["ngafterviewinit",{"_index":1485,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["ngif",{"_index":1491,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["ngmodule",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["ngondestroy",{"_index":398,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingListComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["ngoninit",{"_index":399,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["ngx",{"_index":870,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"dependencies.html":{}}}],["ngxlogger",{"_index":868,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["ngxloggerconfig",{"_index":4866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxloggerlevel",{"_index":869,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["ngxloggerlevel.debug",{"_index":950,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/variables.html":{}}}],["ngxloggerlevel.info",{"_index":4881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxloggerlevel.off",{"_index":4867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxloggerlevel.trace",{"_index":954,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/variables.html":{}}}],["ngxloggerlevel.trace].includes(this.logger.getconfigsnapshot().level",{"_index":951,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["node",{"_index":1868,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["node.tohtml",{"_index":2047,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["node.totext",{"_index":2046,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["nodeid",{"_index":1905,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["nodes",{"_index":1897,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["non",{"_index":2197,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["none",{"_index":271,"title":{},"body":{"components/ClassNameComponent.html":{},"components/DataMapperAppComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["normally",{"_index":4748,"title":{},"body":{"license.html":{}}}],["note",{"_index":689,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["nothing",{"_index":4763,"title":{},"body":{"license.html":{}}}],["notice",{"_index":4635,"title":{},"body":{"license.html":{}}}],["notices",{"_index":4732,"title":{},"body":{"license.html":{}}}],["notified",{"_index":1746,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["notwithstanding",{"_index":4762,"title":{},"body":{"license.html":{}}}],["ns",{"_index":2408,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["ns.alias",{"_index":2409,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["ns.alias.tolowercase().includes(filter",{"_index":3897,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.copyfrom(newnamespace",{"_index":3893,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.createdbyuser",{"_index":3888,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.getprettylabel",{"_index":2433,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["ns.istarget",{"_index":3848,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{}}}],["ns.locationuri",{"_index":3900,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.locationuri.tolowercase().includes(filter",{"_index":3901,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.uri",{"_index":3898,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.uri.tolowercase().includes(filter",{"_index":3899,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["null",{"_index":246,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["null).length",{"_index":794,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["number",{"_index":842,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["number'].indexof(arg.type",{"_index":2109,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["number'].indexof(selectedtype",{"_index":2347,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["number(event.target.value",{"_index":3488,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["numeric",{"_index":2206,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["numerical",{"_index":3469,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["numerics",{"_index":2108,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["o",{"_index":1355,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{}}}],["object",{"_index":1174,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object(s",{"_index":1700,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["object.assign",{"_index":1777,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["object.assign(copy",{"_index":1610,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["object.assign(this",{"_index":1627,"title":{},"body":{"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/NamespaceModel.html":{}}}],["object.keys(actiondetail.actionschema.properties",{"_index":2305,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["object.keys(multiplicity).foreach(m",{"_index":2348,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["object.keys(this.actions).foreach(multiplicity",{"_index":2317,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["object.values(this.actions).foreach(arr",{"_index":2265,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["obligations",{"_index":4823,"title":{},"body":{"license.html":{}}}],["observable",{"_index":47,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{}}}],["observable((observer",{"_index":2271,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["observable.create((observer",{"_index":2383,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["observer",{"_index":1745,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["observer.complete",{"_index":2288,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["observer.error(error",{"_index":2289,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["observer.next('no",{"_index":2641,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["observer.next(actionconfigs",{"_index":2287,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["observer.next(body",{"_index":2560,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["observer.next(data",{"_index":2643,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["observer.next(mappingfilenames",{"_index":2548,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["observer.next(this.cfg.mappingservice.executefieldsearch(this.cfg",{"_index":3388,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["observer.next(this.executesearch(observer.outervalue",{"_index":2384,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["observer.next(true",{"_index":2566,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["obtain",{"_index":487,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["occurred",{"_index":2551,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["octet",{"_index":2621,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["odd",{"_index":3672,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["offer",{"_index":4700,"title":{},"body":{"license.html":{}}}],["offset",{"_index":1869,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["ok",{"_index":1476,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["okbuttonhandler",{"_index":1470,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["okclicked",{"_index":1530,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["oldparentfield",{"_index":2415,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["oldpath",{"_index":1397,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/NamespaceModel.html":{}}}],["oldselecteditem",{"_index":3632,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["oldselecteditem.selected",{"_index":3634,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["once",{"_index":1714,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{}}}],["ondestroy",{"_index":376,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingListComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["one",{"_index":744,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["one_to_many",{"_index":2092,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["one_to_one",{"_index":2091,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["oninit",{"_index":375,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["open",{"_index":4135,"title":{},"body":{"components/ToolbarComponent.html":{},"index.html":{}}}],["operation",{"_index":2637,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["operations",{"_index":2635,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["operations.push(operation",{"_index":2639,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["opn",{"_index":4503,"title":{},"body":{"dependencies.html":{}}}],["option",{"_index":2401,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["optional",{"_index":96,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["optionselected",{"_index":4362,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["optionselected.val",{"_index":4365,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["order",{"_index":3470,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["ordinal",{"_index":1540,"title":{},"body":{"classes/EnumValue.html":{}}}],["origin",{"_index":4776,"title":{},"body":{"license.html":{}}}],["original",{"_index":3236,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"license.html":{}}}],["originalpath",{"_index":3974,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["originalpath.indexof(pathseparator",{"_index":3977,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["originalpath.substr(0",{"_index":3981,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["originalpath.substr(originalpath.indexof(pathseparator",{"_index":3983,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["originalpath.substring(1",{"_index":3978,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["otherwise",{"_index":320,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"license.html":{}}}],["out",{"_index":769,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"license.html":{},"overview.html":{}}}],["outcome",{"_index":4571,"title":{},"body":{"index.html":{}}}],["output",{"_index":2783,"title":{},"body":{"classes/LineModel.html":{}}}],["outputclassidentifier",{"_index":2931,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["outputfield",{"_index":1378,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{},"classes/LookupTableUtil.html":{}}}],["outputfield.classidentifier",{"_index":2934,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["outputfieldpos",{"_index":2784,"title":{},"body":{"classes/LineModel.html":{}}}],["outputfieldpos.y",{"_index":2786,"title":{},"body":{"classes/LineModel.html":{}}}],["outputnumber",{"_index":3653,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["outputselects",{"_index":2848,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["outstanding",{"_index":4616,"title":{},"body":{"license.html":{}}}],["over",{"_index":760,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["overflow",{"_index":619,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["overhead",{"_index":2522,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["override",{"_index":11,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["overview",{"_index":4856,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":4591,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":4612,"title":{},"body":{"license.html":{}}}],["package",{"_index":15,"title":{"dependencies.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{}}}],["padding",{"_index":538,"title":{},"body":{"components/DataMapperAppComponent.html":{},"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["padding:0",{"_index":593,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["padding:0px",{"_index":590,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["paddingfield",{"_index":2967,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["padfield",{"_index":3934,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["page",{"_index":4849,"title":{},"body":{"license.html":{}}}],["pair",{"_index":2193,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["pako",{"_index":2530,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["panel",{"_index":1008,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["panels",{"_index":2702,"title":{},"body":{"classes/LineModel.html":{}}}],["param",{"_index":801,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["parameter",{"_index":3203,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["parameters",{"_index":94,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["params",{"_index":3513,"title":{},"body":{"injectables/MappingIdentifierService.html":{}}}],["parent",{"_index":1594,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/ToolbarComponent.html":{}}}],["parent.collapsed",{"_index":1595,"title":{},"body":{"classes/EnumValue.html":{}}}],["parent.docdef",{"_index":1597,"title":{},"body":{"classes/EnumValue.html":{}}}],["parent.docdef.showfields",{"_index":1598,"title":{},"body":{"classes/EnumValue.html":{}}}],["parent.iscollection",{"_index":1634,"title":{},"body":{"classes/EnumValue.html":{}}}],["parent.ispropertyorconstant",{"_index":1596,"title":{},"body":{"classes/EnumValue.html":{}}}],["parent.parentfield",{"_index":1599,"title":{},"body":{"classes/EnumValue.html":{}}}],["parentcomponent",{"_index":3654,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["parentfield",{"_index":1377,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"classes/NamespaceModel.html":{}}}],["parentfield.parentfield",{"_index":2798,"title":{},"body":{"classes/LineModel.html":{},"classes/NamespaceModel.html":{}}}],["parentfield.partofmapping",{"_index":4044,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["parentfield.partoftransformation",{"_index":4045,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["parentfieldname",{"_index":2356,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["parentobjectname",{"_index":3438,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["parentpath",{"_index":3741,"title":{},"body":{"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{}}}],["parentselectionchanged",{"_index":226,"title":{},"body":{"components/ClassNameComponent.html":{},"components/FieldEditComponent.html":{}}}],["parentselectionchanged(event",{"_index":242,"title":{},"body":{"components/ClassNameComponent.html":{},"components/FieldEditComponent.html":{}}}],["parsed",{"_index":2102,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["parsedactions",{"_index":2977,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parseddata",{"_index":2950,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parseddocid",{"_index":2971,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parseddocs",{"_index":3077,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["parseddocuri",{"_index":2972,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedindex",{"_index":2973,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedname",{"_index":2968,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedpath",{"_index":2969,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedvalue",{"_index":2970,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedvaluetype",{"_index":2976,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parseint(selectedvalue",{"_index":4367,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["parseint(text.substring(position",{"_index":2053,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["parses",{"_index":1931,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["part",{"_index":4739,"title":{},"body":{"license.html":{}}}],["partial",{"_index":1802,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["particular",{"_index":4784,"title":{},"body":{"license.html":{}}}],["partofmapping",{"_index":1361,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{}}}],["partofmappingicon",{"_index":1366,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["partofmappingiconhidden",{"_index":1367,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["partoftransformation",{"_index":1547,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["party",{"_index":4747,"title":{},"body":{"license.html":{}}}],["passed",{"_index":4007,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["patent",{"_index":4698,"title":{},"body":{"license.html":{}}}],["path",{"_index":204,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"index.html":{}}}],["path.lastindexof",{"_index":3638,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{}}}],["path.replace",{"_index":3637,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["path.substr(0",{"_index":1237,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["path.substr(path.lastindexof",{"_index":3640,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["path.substring(0",{"_index":3742,"title":{},"body":{"classes/MappingUtil.html":{}}}],["path.substring(lastseparator",{"_index":3743,"title":{},"body":{"classes/MappingUtil.html":{}}}],["paths",{"_index":1569,"title":{},"body":{"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["paths.push(field.name",{"_index":1572,"title":{},"body":{"classes/EnumValue.html":{}}}],["paths.push(field.path",{"_index":1570,"title":{},"body":{"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["pathseparator",{"_index":3942,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["patternfly",{"_index":4506,"title":{},"body":{"dependencies.html":{}}}],["peer",{"_index":4482,"title":{},"body":{"dependencies.html":{}}}],["percent",{"_index":4614,"title":{},"body":{"license.html":{}}}],["perform",{"_index":1171,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldDetailComponent.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["performance",{"_index":2500,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["period",{"_index":4271,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["permission",{"_index":4770,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":508,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["perpetual",{"_index":4686,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":4738,"title":{},"body":{"license.html":{}}}],["pficon",{"_index":4105,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{}}}],["pipe",{"_index":4095,"title":{"pipes/ToErrorIconClassPipe.html":{}},"body":{"pipes/ToErrorIconClassPipe.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["pipe(map((res",{"_index":2638,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["pipe(timeout(this.cfg.initcfg.admhttptimeout",{"_index":2553,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["pipes",{"_index":4096,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["pipetransform",{"_index":4103,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["pitests",{"_index":4560,"title":{},"body":{"index.html":{}}}],["place",{"_index":2406,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["places",{"_index":4743,"title":{},"body":{"license.html":{}}}],["please",{"_index":3256,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["pointers",{"_index":1612,"title":{},"body":{"classes/EnumValue.html":{}}}],["polished",{"_index":1763,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["pom",{"_index":702,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/Examples.html":{}}}],["pompayload",{"_index":837,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["populate",{"_index":3322,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"classes/NamespaceModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["populatechildren(field",{"_index":4010,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["populatefieldaction",{"_index":2133,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["populatefieldaction(action",{"_index":2099,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["populatefielddata(field",{"_index":4056,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["populatefieldparentpaths(field",{"_index":4047,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["populatemappinglookuptable",{"_index":2914,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["populatemappinglookuptable(mappingdefinition",{"_index":2919,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["popup",{"_index":4127,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["port",{"_index":4568,"title":{},"body":{"index.html":{}}}],["pos",{"_index":2792,"title":{},"body":{"classes/LineModel.html":{}}}],["pos['y",{"_index":2794,"title":{},"body":{"classes/LineModel.html":{}}}],["position",{"_index":558,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["position:absolute",{"_index":535,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["position:relative",{"_index":524,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["possibility",{"_index":4817,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1164,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["post",{"_index":1969,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["post.length",{"_index":1962,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["power",{"_index":4603,"title":{},"body":{"license.html":{}}}],["pre",{"_index":1961,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["pre.length",{"_index":1967,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["predefines",{"_index":3321,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["preferred",{"_index":4623,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":1861,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["preloadedfieldactionmetadata",{"_index":928,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["preloadedmappingjson",{"_index":927,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["prepare",{"_index":4694,"title":{},"body":{"license.html":{}}}],["preparecomplexfields",{"_index":4062,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["present",{"_index":2103,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["prettyname",{"_index":4252,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["preview",{"_index":705,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["previous",{"_index":3056,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldDetailComponent.html":{}}}],["previously",{"_index":3318,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["primarily",{"_index":4535,"title":{},"body":{"index.html":{}}}],["printed",{"_index":4848,"title":{},"body":{"license.html":{}}}],["private",{"_index":28,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["process",{"_index":3753,"title":{},"body":{"classes/MappingUtil.html":{},"components/ToolbarComponent.html":{}}}],["processimportedfile",{"_index":4121,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["processimportedfile(event",{"_index":4149,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["processing",{"_index":4188,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["processmappingscatalog",{"_index":4122,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["processmappingscatalog(selectedfile",{"_index":4153,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["product",{"_index":4773,"title":{},"body":{"license.html":{}}}],["production",{"_index":4865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prominent",{"_index":4731,"title":{},"body":{"license.html":{}}}],["promise",{"_index":1176,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["promise((resolve",{"_index":1217,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["promise(async(resolve",{"_index":2577,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["properties",{"_index":27,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["property",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["propertycomponent",{"_index":1407,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["propertycomponent.getfield",{"_index":1420,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["propertycomponent.initialize(self.field",{"_index":1409,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["propertydoc",{"_index":923,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["propertyeditfieldcomponent",{"_index":627,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["propertyfieldeditcomponent",{"_index":181,"title":{"components/PropertyFieldEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["propertyobject",{"_index":2306,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["propertyobject.const",{"_index":2308,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["propertyobject.enum",{"_index":2314,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["propertyobject.type",{"_index":2312,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["protected",{"_index":1853,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["provide",{"_index":1135,"title":{},"body":{"modules/DataMapperModule.html":{},"license.html":{}}}],["provided",{"_index":1160,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"license.html":{}}}],["providers",{"_index":633,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}],["provides",{"_index":4780,"title":{},"body":{"license.html":{}}}],["public",{"_index":384,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{}}}],["publicly",{"_index":4695,"title":{},"body":{"license.html":{}}}],["pull",{"_index":3205,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["purpose",{"_index":4672,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":4602,"title":{},"body":{"license.html":{}}}],["push",{"_index":2496,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["pushed",{"_index":2497,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["put",{"_index":1939,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["px",{"_index":1437,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["querylist",{"_index":1306,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["quotes",{"_index":690,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["range",{"_index":1910,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["re",{"_index":3465,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["reactiveformsmodule",{"_index":1070,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["read",{"_index":76,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/DataMapperUtil.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/FileManagementService.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["readable",{"_index":1200,"title":{},"body":{"classes/DataMapperUtil.html":{},"license.html":{}}}],["readbinaryfile",{"_index":1145,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["readbinaryfile(filename",{"_index":1168,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["reader",{"_index":1169,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["reader.onload",{"_index":1219,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["reader.readasarraybuffer(filename",{"_index":1225,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["reader.readastext(filename",{"_index":1223,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["reader.result",{"_index":1221,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["readfile",{"_index":1146,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/ToolbarComponent.html":{}}}],["readfile(filecontent",{"_index":4157,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["readfile(filename",{"_index":1177,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["readonly",{"_index":1873,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["readonlyarray",{"_index":1898,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["reason",{"_index":4837,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":4774,"title":{},"body":{"license.html":{}}}],["reasons",{"_index":2501,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["received",{"_index":4680,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":4727,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":4847,"title":{},"body":{"license.html":{}}}],["red",{"_index":476,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["redistributing",{"_index":4790,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":4723,"title":{},"body":{"license.html":{}}}],["redrawlinesformappings",{"_index":2740,"title":{},"body":{"classes/LineModel.html":{}}}],["redrawn",{"_index":462,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["reference",{"_index":1933,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["references",{"_index":667,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["refers",{"_index":3697,"title":{},"body":{"classes/MappingUtil.html":{}}}],["reflect",{"_index":2021,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["regarding",{"_index":4768,"title":{},"body":{"license.html":{}}}],["reinitialize",{"_index":4162,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["reject",{"_index":1218,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["reject(`could",{"_index":2260,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["reject(`fatal",{"_index":2256,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["related",{"_index":4539,"title":{},"body":{"index.html":{}}}],["relative",{"_index":559,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["remain",{"_index":4648,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":1166,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["remova",{"_index":1702,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["remove",{"_index":1427,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionComponent.html":{},"classes/MappingUtil.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["removeaction",{"_index":2952,"title":{},"body":{"classes/MappedField.html":{},"components/MappingFieldActionComponent.html":{}}}],["removeaction(action",{"_index":2960,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionComponent.html":{}}}],["removed",{"_index":1748,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["removed.field",{"_index":2002,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["removeerror",{"_index":1694,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["removeerror(identifier",{"_index":1736,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["removefield",{"_index":1259,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["removefield(event",{"_index":1302,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["removefield(field",{"_index":3004,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["removeitemfromarray",{"_index":1147,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["removeitemfromarray(item",{"_index":1180,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["removemappedfield",{"_index":3347,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["removemappedfield(mappedfield",{"_index":3018,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["removemapping",{"_index":3088,"title":{},"body":{"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{}}}],["removemapping(event",{"_index":3148,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["removemapping(m",{"_index":3114,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["removenamespace",{"_index":3863,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["removenamespace(ns",{"_index":3876,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["removestalemappings",{"_index":3684,"title":{},"body":{"classes/MappingUtil.html":{}}}],["removestalemappings(cfg",{"_index":3694,"title":{},"body":{"classes/MappingUtil.html":{}}}],["removetablebyname",{"_index":3089,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["removetablebyname(name",{"_index":3116,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["removetoken(lastfieldrefremoved",{"_index":1998,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["replace",{"_index":2018,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{}}}],["replaced",{"_index":4843,"title":{},"body":{"license.html":{}}}],["repo",{"_index":4543,"title":{},"body":{"index.html":{}}}],["represent",{"_index":4645,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":4665,"title":{},"body":{"license.html":{}}}],["representing",{"_index":3213,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["reproduce",{"_index":4693,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":4777,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":4584,"title":{},"body":{"license.html":{}}}],["request",{"_index":55,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["requested",{"_index":4142,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["requests",{"_index":73,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["required",{"_index":491,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/ExampleAppModule.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"license.html":{}}}],["requires",{"_index":1958,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["res",{"_index":2567,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["reset",{"_index":1019,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"injectables/FileManagementService.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["resetall",{"_index":1695,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/ToolbarComponent.html":{}}}],["resetlibs",{"_index":2463,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["resetmappings",{"_index":2464,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["resetting",{"_index":2568,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["resolve",{"_index":701,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["resolve(bytes",{"_index":4178,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["resolve(false",{"_index":2249,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["resolve(filebody",{"_index":1222,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["resolve(true",{"_index":1227,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["respective",{"_index":2168,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["response",{"_index":2280,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["responsetype",{"_index":2558,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["responsibility",{"_index":4829,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":4786,"title":{},"body":{"license.html":{}}}],["restart",{"_index":2502,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["result",{"_index":88,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.push(fieldsbypath[name",{"_index":2986,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["resultfields",{"_index":3031,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["resultfields.push(mappedfield",{"_index":3032,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["resultfields.shift",{"_index":3033,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["resulting",{"_index":4627,"title":{},"body":{"license.html":{}}}],["results",{"_index":90,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":4735,"title":{},"body":{"license.html":{}}}],["retrieve",{"_index":2485,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["return",{"_index":22,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["returned",{"_index":2247,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["returnedcomponent",{"_index":1394,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["returning",{"_index":4159,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["returns",{"_index":34,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/FieldAction.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["revisions",{"_index":4643,"title":{},"body":{"license.html":{}}}],["revisit",{"_index":1716,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["right",{"_index":296,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["right:3px",{"_index":550,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["right_bracket",{"_index":3937,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["rights",{"_index":4825,"title":{},"body":{"license.html":{}}}],["risks",{"_index":4792,"title":{},"body":{"license.html":{}}}],["root",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["root'},{'name",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["route",{"_index":3510,"title":{},"body":{"injectables/MappingIdentifierService.html":{}}}],["router",{"_index":3512,"title":{},"body":{"injectables/MappingIdentifierService.html":{}}}],["routermodule",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ExampleAppModule.html":{}}}],["routermodule.forroot",{"_index":1835,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["routermodule.forroot(routes",{"_index":207,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["routermoduleforroot",{"_index":206,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ToolbarComponent.html":{}}}],["routines",{"_index":2912,"title":{},"body":{"classes/LookupTableUtil.html":{},"classes/MappingUtil.html":{}}}],["routing.module",{"_index":1121,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["routing.module.ts",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":579,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["row.maindisplay",{"_index":583,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["row.modalwindow",{"_index":581,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["rows",{"_index":3572,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["rowtitles",{"_index":3571,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["royalty",{"_index":4690,"title":{},"body":{"license.html":{}}}],["run",{"_index":4533,"title":{},"body":{"index.html":{}}}],["running",{"_index":4565,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":2242,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["rxjs",{"_index":48,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":2535,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["safestyle",{"_index":1290,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["same",{"_index":1613,"title":{},"body":{"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"license.html":{}}}],["samenameddefs",{"_index":2323,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["samenameddefs.push(fieldactionconfig",{"_index":2326,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["sanitizer",{"_index":1266,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["save",{"_index":315,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/FileManagementService.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["saveas",{"_index":1213,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["saveas(filecontent",{"_index":1226,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["saver",{"_index":1214,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["savetable",{"_index":2849,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["saving",{"_index":2514,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["schema",{"_index":2476,"title":{},"body":{"injectables/FileManagementService.html":{},"miscellaneous/enumerations.html":{}}}],["schemas",{"_index":1055,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["scope",{"_index":1721,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["scoped",{"_index":1704,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["screen",{"_index":521,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["scroll",{"_index":2742,"title":{},"body":{"classes/LineModel.html":{}}}],["search",{"_index":3434,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["search(searchfilter",{"_index":3550,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchboxicon",{"_index":3577,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchfilter",{"_index":3335,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchmode",{"_index":3519,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchresults",{"_index":3520,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchresultsvisible",{"_index":3531,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchshown",{"_index":3567,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["second",{"_index":764,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["seconds",{"_index":880,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["section",{"_index":3403,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"license.html":{}}}],["section'},{'name",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["section.component",{"_index":1101,"title":{},"body":{"modules/DataMapperModule.html":{},"components/MappingSelectionComponent.html":{}}}],["section.component.html",{"_index":3649,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts",{"_index":3648,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{},"coverage.html":{}}}],["section.component.ts:27",{"_index":3659,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:28",{"_index":3658,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:29",{"_index":3662,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:30",{"_index":3661,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:31",{"_index":3663,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:32",{"_index":3660,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:33",{"_index":3657,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:35",{"_index":3664,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:46",{"_index":3667,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:53",{"_index":3665,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:64",{"_index":3668,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["sectioncomponents",{"_index":3608,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["sections",{"_index":4588,"title":{},"body":{"license.html":{}}}],["see",{"_index":504,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"components/MappingFieldContainerComponent.html":{},"index.html":{},"license.html":{}}}],["select",{"_index":604,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["select#separator').combobox({clearifnomatch",{"_index":4360,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["select#separator').on('change",{"_index":4361,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selecte",{"_index":2417,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["selected",{"_index":1262,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selected.targetvalue",{"_index":2885,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedactionindex",{"_index":3315,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["selectedactionname",{"_index":3314,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selectedargvalname",{"_index":3269,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["selectedcallback",{"_index":3655,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["selectedelement",{"_index":2706,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedelement.nodename",{"_index":2708,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedfield",{"_index":1376,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingSelectionComponent.html":{}}}],["selectedfield.issource",{"_index":3646,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selectedfieldissource",{"_index":3656,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["selectedfile",{"_index":4156,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["selectedicon",{"_index":3578,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["selectedlineattrs",{"_index":2689,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedlineattrs[1].nodevalue",{"_index":2693,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedlineattrs[2].nodevalue",{"_index":2695,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedlineattrs[3].nodevalue",{"_index":2697,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedlineattrs[4].nodevalue",{"_index":2699,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedmappingcomponent",{"_index":3609,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selectedmappingselectionsection",{"_index":3670,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["selectednamespace",{"_index":3857,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["selectedoptions",{"_index":2890,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedoptions.length",{"_index":2892,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedoptions[0].label",{"_index":2893,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedroot",{"_index":894,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["selectedsourcefield",{"_index":2173,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["selectedsourcefield.type",{"_index":2336,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["selectedtargetenumvalue",{"_index":2865,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedtargetfield",{"_index":2179,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["selectedtargetfield.type",{"_index":2339,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["selectedtype",{"_index":2199,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["selectedvalue",{"_index":4364,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["selection'},{'name",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selection.component",{"_index":1100,"title":{},"body":{"modules/DataMapperModule.html":{},"components/MappingDetailComponent.html":{}}}],["selection.component.html",{"_index":3607,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts",{"_index":3606,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:101",{"_index":4351,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:105",{"_index":4348,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:117",{"_index":4353,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:141",{"_index":4349,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:156",{"_index":4347,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:180",{"_index":4350,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:32",{"_index":3626,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:33",{"_index":3625,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:34",{"_index":3629,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:35",{"_index":3624,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:36",{"_index":4346,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:37",{"_index":3628,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:38",{"_index":4345,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:39",{"_index":3630,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:40",{"_index":4354,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:41",{"_index":3621,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:42",{"_index":4352,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:45",{"_index":3618,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:49",{"_index":3623,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:57",{"_index":3617,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:65",{"_index":3614,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:70",{"_index":3619,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:74",{"_index":3620,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selectionchanged",{"_index":3348,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionComponent.html":{}}}],["selectionchanged(c",{"_index":3622,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selectionchanged(event",{"_index":3376,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["selectmapping",{"_index":3144,"title":{},"body":{"components/MappingDetailComponent.html":{},"components/MappingListComponent.html":{}}}],["selectmapping(field",{"_index":3150,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["selectmapping(mapping",{"_index":3553,"title":{},"body":{"components/MappingListComponent.html":{}}}],["selectnamespace",{"_index":3864,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["selectnamespace(ns",{"_index":3880,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["selector",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["self",{"_index":1396,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ToolbarComponent.html":{}}}],["self.cfg",{"_index":3167,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["self.cfg.mappingservice.notifymappingupdated",{"_index":1425,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["self.cfg.mappingservice.removefieldfromallmappings(self.field",{"_index":1432,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.cfg.mappingservice.selectmapping(mapping",{"_index":3172,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["self.cfg.mappingservice.selectmapping(null",{"_index":3174,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["self.field.copyfrom(newfield",{"_index":1423,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.field.docdef.removefield(self.field",{"_index":1433,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.field.docdef.updatefield(self.field",{"_index":1424,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.field.issource",{"_index":1415,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.getselectedmappingcomponent",{"_index":3633,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["self.selectedmappingcomponent",{"_index":3636,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["sell",{"_index":4701,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1293,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["semicolon",{"_index":4272,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["send",{"_index":2628,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["sent",{"_index":4664,"title":{},"body":{"license.html":{}}}],["separable",{"_index":4649,"title":{},"body":{"license.html":{}}}],["separate",{"_index":776,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/FileManagementService.html":{},"license.html":{}}}],["separately",{"_index":2499,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["separator",{"_index":3976,"title":{},"body":{"classes/NamespaceModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["sequence",{"_index":1854,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{}}}],["sequential",{"_index":3216,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["serializedvalue",{"_index":4253,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["serializer",{"_index":1116,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["serializer.ts",{"_index":4474,"title":{},"body":{"coverage.html":{}}}],["server",{"_index":2486,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["service",{"_index":671,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["serviceobject",{"_index":1546,"title":{},"body":{"classes/EnumValue.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["services",{"_index":662,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["services/api",{"_index":1109,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["services/document",{"_index":647,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/error",{"_index":645,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/ModalErrorDetailComponent.html":{},"classes/TextNode.html":{}}}],["services/field",{"_index":875,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/file",{"_index":878,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/initialization.service",{"_index":650,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/mapping",{"_index":649,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/types",{"_index":1107,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["set",{"_index":943,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["setargumentvalue",{"_index":2075,"title":{},"body":{"classes/FieldAction.html":{}}}],["setargumentvalue(argumentname",{"_index":2086,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["setbinaryfiletoservice",{"_index":2465,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["setbinaryfiletoservice(compressedbuffer",{"_index":2509,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["setcfg(cfg",{"_index":2527,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["setconfig(cfg",{"_index":942,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["setconfigmodel(cfg",{"_index":1909,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["seterrors",{"_index":3773,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["seterrors(errors",{"_index":3782,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["setlinebeingformed(l",{"_index":2724,"title":{},"body":{"classes/LineModel.html":{}}}],["setmappingtoservice",{"_index":2466,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["setmappingtoservice(jsonbuffer",{"_index":2516,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["settimeout",{"_index":447,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["shall",{"_index":4586,"title":{},"body":{"license.html":{}}}],["share",{"_index":4201,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["shares",{"_index":4617,"title":{},"body":{"license.html":{}}}],["short",{"_index":364,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["shortest",{"_index":4541,"title":{},"body":{"index.html":{}}}],["show",{"_index":743,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["showactiveerrors",{"_index":733,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["showdetails",{"_index":4197,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["showfields",{"_index":891,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["showlines",{"_index":4200,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["showlinesalways",{"_index":912,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["showlookuptable",{"_index":4344,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["showmappedfields",{"_index":914,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["showmappingdetailtray",{"_index":909,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["showmappingpreview",{"_index":948,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["showmappingpreview(show",{"_index":944,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["showmappingtable",{"_index":910,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["shownamespacetable",{"_index":911,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["showtypes",{"_index":913,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/NamespaceModel.html":{},"components/ToolbarComponent.html":{}}}],["showunmappedfields",{"_index":915,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["sign",{"_index":4290,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["signal",{"_index":2757,"title":{},"body":{"classes/LineModel.html":{}}}],["simplifies",{"_index":4530,"title":{},"body":{"index.html":{}}}],["simply",{"_index":3233,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["sizing",{"_index":612,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["skip",{"_index":4552,"title":{},"body":{"index.html":{}}}],["skipped",{"_index":703,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["slash",{"_index":4273,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["software",{"_index":496,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["sole",{"_index":4828,"title":{},"body":{"license.html":{}}}],["solely",{"_index":4785,"title":{},"body":{"license.html":{}}}],["solution",{"_index":4527,"title":{},"body":{"index.html":{}}}],["something",{"_index":3260,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["somethingtoshow",{"_index":3774,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["somewhere",{"_index":1333,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["sort",{"_index":3467,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["sortedactiondefinitions",{"_index":2318,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["sortedactiondefinitions.push(fieldactiondefinition",{"_index":2328,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["sortfieldactiondefinitions",{"_index":2160,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["sortmappedfieldsbypath",{"_index":2953,"title":{},"body":{"classes/MappedField.html":{}}}],["sortmappedfieldsbypath(mappedfields",{"_index":2962,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["source/target",{"_index":1338,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"injectables/FieldActionService.html":{},"classes/NamespaceModel.html":{}}}],["source/target/mapping",{"_index":1017,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["sourcedocmap",{"_index":3706,"title":{},"body":{"classes/MappingUtil.html":{}}}],["sourcedocs",{"_index":921,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["sourceenumvalue",{"_index":2863,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["sourcefield",{"_index":2875,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["sourcefield.enumvalues",{"_index":2877,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["sourcefieldpaths",{"_index":3691,"title":{},"body":{"classes/MappingUtil.html":{}}}],["sourcefields",{"_index":2988,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["sourceiconcssclass",{"_index":3439,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["sourceidentifier",{"_index":2804,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappingDefinition.html":{}}}],["sources",{"_index":1006,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/LineModel.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"index.html":{}}}],["sourcesheader",{"_index":3142,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["sourcetype",{"_index":2097,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["sourcevalue",{"_index":2817,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["sourcex",{"_index":2659,"title":{},"body":{"classes/LineModel.html":{}}}],["sourcey",{"_index":2660,"title":{},"body":{"classes/LineModel.html":{}}}],["space",{"_index":1167,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["spaces",{"_index":4299,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["special",{"_index":2233,"title":{},"body":{"injectables/FieldActionService.html":{},"license.html":{}}}],["specific",{"_index":505,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"components/MappingFieldActionArgumentComponent.html":{},"license.html":{}}}],["specified",{"_index":699,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["specify",{"_index":3263,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["specifying",{"_index":1738,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["spinner",{"_index":544,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["split",{"_index":1187,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/ErrorHandlerService.html":{}}}],["splitbystring",{"_index":1148,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["splitbystring(instr",{"_index":1184,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["splitmarker",{"_index":1185,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["spring",{"_index":4561,"title":{},"body":{"index.html":{}}}],["src",{"_index":1624,"title":{},"body":{"classes/EnumValue.html":{}}}],["src/.../app",{"_index":4864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.types.ts",{"_index":4514,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../data",{"_index":4859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.dev.ts",{"_index":4863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":4860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.trace.ts",{"_index":4862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":4861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error.model.ts",{"_index":4515,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../field",{"_index":4516,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../transition.model.ts",{"_index":4517,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/atlasmap",{"_index":4400,"title":{},"body":{"coverage.html":{}}}],["src/app/example",{"_index":1830,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["src/app/lib/atlasmap",{"_index":6,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.dev.ts",{"_index":4477,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":4478,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.trace.ts",{"_index":4479,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":4480,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stand",{"_index":712,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["standalone",{"_index":707,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"index.html":{}}}],["standard",{"_index":4376,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["start",{"_index":3336,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"index.html":{}}}],["startdrag",{"_index":1260,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["startdrag(event",{"_index":1304,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["started",{"_index":4525,"title":{"index.html":{},"license.html":{}},"body":{}}],["startoffset",{"_index":1913,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["state",{"_index":908,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"license.html":{}}}],["stated",{"_index":4699,"title":{},"body":{"license.html":{}}}],["statement",{"_index":4757,"title":{},"body":{"license.html":{}}}],["statements",{"_index":4397,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":896,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["stating",{"_index":4733,"title":{},"body":{"license.html":{}}}],["stay",{"_index":761,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["stock",{"_index":12,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/TransitionSelectionComponent.html":{}}}],["stoppage",{"_index":4810,"title":{},"body":{"license.html":{}}}],["storage",{"_index":78,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["store",{"_index":666,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["store.find(e",{"_index":1773,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["store.unshift(error",{"_index":1775,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["stored",{"_index":1663,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FileManagementService.html":{}}}],["storeerrors",{"_index":3532,"title":{},"body":{"components/MappingListComponent.html":{}}}],["storeerrors(errors",{"_index":3555,"title":{},"body":{"components/MappingListComponent.html":{}}}],["str",{"_index":1193,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["str2bytes",{"_index":1149,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["str2bytes(str",{"_index":1190,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["stream",{"_index":2216,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["string",{"_index":36,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["strip",{"_index":3975,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["stroke",{"_index":2661,"title":{},"body":{"classes/LineModel.html":{}}}],["style",{"_index":2662,"title":{},"body":{"classes/LineModel.html":{}}}],["style:italic",{"_index":610,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["styles",{"_index":372,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["styleurls",{"_index":381,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["subject",{"_index":1462,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{},"license.html":{}}}],["sublicense",{"_index":4696,"title":{},"body":{"license.html":{}}}],["submission",{"_index":4759,"title":{},"body":{"license.html":{}}}],["submit",{"_index":4658,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":4656,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":1696,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["subscribe(observer",{"_index":1742,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["subscriber",{"_index":1937,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["subscription",{"_index":417,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingListComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["subsequently",{"_index":4681,"title":{},"body":{"license.html":{}}}],["substring",{"_index":1188,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["such",{"_index":4608,"title":{},"body":{"license.html":{}}}],["suffix",{"_index":4240,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["super",{"_index":3930,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["super(fieldnode.prefix",{"_index":1880,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["super(textnode.prefix",{"_index":1875,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["supersede",{"_index":4765,"title":{},"body":{"license.html":{}}}],["supersedes",{"_index":4359,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["support",{"_index":1294,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{},"modules.html":{}}}],["supported",{"_index":4075,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["supports",{"_index":4227,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["supposed",{"_index":1675,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["sure",{"_index":1430,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["svg",{"_index":626,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules.html":{}}}],["svgstyle",{"_index":2679,"title":{},"body":{"classes/LineModel.html":{}}}],["switch",{"_index":4309,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["switched",{"_index":1671,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["syndesis",{"_index":4537,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":1984,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"license.html":{}}}],["system",{"_index":715,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["systeminitializedsubscription",{"_index":396,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["systems",{"_index":4668,"title":{},"body":{"license.html":{}}}],["t",{"_index":2940,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["t.name",{"_index":2945,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["t.sourceidentifier",{"_index":2942,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["t.targetidentifier",{"_index":2943,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["table",{"_index":2839,"title":{},"body":{"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["table.component",{"_index":1103,"title":{},"body":{"modules/DataMapperModule.html":{},"components/TransitionSelectionComponent.html":{}}}],["table.component.html",{"_index":2847,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["table.component.ts",{"_index":2846,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"coverage.html":{}}}],["table.component.ts:28",{"_index":2901,"title":{},"body":{"classes/LookupTableData.html":{}}}],["table.component.ts:29",{"_index":2902,"title":{},"body":{"classes/LookupTableData.html":{}}}],["table.component.ts:30",{"_index":2900,"title":{},"body":{"classes/LookupTableData.html":{}}}],["table.component.ts:39",{"_index":2857,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:41",{"_index":2860,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:42",{"_index":2856,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:44",{"_index":2859,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:46",{"_index":2852,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:75",{"_index":2853,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:79",{"_index":2850,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:83",{"_index":2854,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.entries",{"_index":4388,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["table.entries.length",{"_index":4389,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["table.getinputoutputkey",{"_index":3131,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["table.model",{"_index":2862,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"components/TransitionSelectionComponent.html":{}}}],["table.model.ts",{"_index":2803,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"coverage.html":{}}}],["table.model.ts:18",{"_index":2905,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:19",{"_index":2904,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:20",{"_index":2907,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:21",{"_index":2906,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:23",{"_index":2909,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:32",{"_index":2908,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:41",{"_index":2812,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:42",{"_index":2811,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:43",{"_index":2813,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:44",{"_index":2809,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:50",{"_index":2818,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:54",{"_index":2816,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:69",{"_index":2819,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.name",{"_index":2939,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["table.sourceidentifier",{"_index":2936,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["table.targetidentifier",{"_index":2937,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["tabledata",{"_index":2878,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["tabledata.selectedtargetenumvalue",{"_index":2884,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["tabledata.sourceenumvalue",{"_index":2879,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["tabledata.targetenumvalues",{"_index":2881,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["tablename",{"_index":4385,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["tables",{"_index":3078,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["tables.push(table",{"_index":3129,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["tablesbyname",{"_index":3079,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["tablesbysourcetargetkey",{"_index":3080,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":4481,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":692,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["tack",{"_index":4239,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["target",{"_index":1625,"title":{},"body":{"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{}}}],["target'.includes(filter",{"_index":3896,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["targetdoc",{"_index":4229,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["targetdoc.type",{"_index":4232,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["targetdocmap",{"_index":3708,"title":{},"body":{"classes/MappingUtil.html":{}}}],["targetdocs",{"_index":922,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["targetenabled",{"_index":3836,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["targetenumvalue",{"_index":2899,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["targetenumvalues",{"_index":2864,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetfield",{"_index":2332,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/NamespaceModel.html":{}}}],["targetfield.enumvalues",{"_index":2869,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetfield.name",{"_index":2334,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/NamespaceModel.html":{}}}],["targetfielddocdeftype",{"_index":3956,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["targetfieldnode.field",{"_index":2007,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetfields",{"_index":2989,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["targetidentifier",{"_index":2805,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappingDefinition.html":{}}}],["targetindex",{"_index":3490,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["targetnode",{"_index":1916,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetnode.str",{"_index":1923,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetnode.str.replace(targetnode.str.substring(startoffset",{"_index":1927,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetnode.str.substring(0",{"_index":1924,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetnodeindex",{"_index":1917,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targets",{"_index":1007,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/LineModel.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["targetsourcepaths",{"_index":3692,"title":{},"body":{"classes/MappingUtil.html":{}}}],["targetstring",{"_index":2011,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetstring.substr(1",{"_index":2012,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetstring.substring(0",{"_index":2013,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetstring.substring(offset",{"_index":2014,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetsupportstemplate",{"_index":4111,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["targettoggled",{"_index":3837,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["targettype",{"_index":629,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["targetvalue",{"_index":2820,"title":{},"body":{"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{}}}],["targetvalues",{"_index":2867,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetvalues.push",{"_index":2868,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetvalues.push(e.name",{"_index":2870,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetx",{"_index":2663,"title":{},"body":{"classes/LineModel.html":{}}}],["targety",{"_index":2664,"title":{},"body":{"classes/LineModel.html":{}}}],["template",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["templatecomponent",{"_index":4235,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["templatecomponent.templatetext",{"_index":4236,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["templateeditcomponent",{"_index":183,"title":{"components/TemplateEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["templateexists",{"_index":3090,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["templatetext",{"_index":3081,"title":{},"body":{"classes/MappingDefinition.html":{},"components/TemplateEditComponent.html":{}}}],["templateurl",{"_index":214,"title":{},"body":{"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["terminal",{"_index":4008,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["terminalfields",{"_index":3944,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["terminate",{"_index":4721,"title":{},"body":{"license.html":{}}}],["terminating",{"_index":2019,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["terms",{"_index":4583,"title":{},"body":{"license.html":{}}}],["test",{"_index":1843,"title":{},"body":{"classes/Examples.html":{}}}],["test.model",{"_index":1840,"title":{},"body":{"classes/Examples.html":{}}}],["tests",{"_index":4553,"title":{},"body":{"index.html":{}}}],["text",{"_index":541,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["text.indexof",{"_index":2055,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["text.length",{"_index":2061,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["text.search(/\\$\\{[0",{"_index":2050,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["text.substring(text.indexof",{"_index":2060,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textarea",{"_index":606,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["textcache",{"_index":1892,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textinput",{"_index":3284,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["textnode",{"_index":1871,"title":{"classes/TextNode.html":{}},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["textnode(post",{"_index":1973,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textnode(text",{"_index":2062,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textnode(text.substring(0",{"_index":2052,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textnode).str",{"_index":1955,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textnode).str.length",{"_index":1989,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["that.cfg.errorservice.error('the",{"_index":4379,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.cfg.mappingservice.notifymappingupdated",{"_index":4368,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.cfg.mappingservice.updatemappedfield(that.fieldpair",{"_index":4384,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.children",{"_index":1631,"title":{},"body":{"classes/EnumValue.html":{}}}],["that.docdef",{"_index":1630,"title":{},"body":{"classes/EnumValue.html":{}}}],["that.fieldpair.transition.delimiter",{"_index":4382,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.fieldpair.transition.userdelimiter",{"_index":4383,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.mapping.transition.delimiter",{"_index":4366,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.mapping.transition.userdelimiter",{"_index":4371,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.parentfield",{"_index":1629,"title":{},"body":{"classes/EnumValue.html":{}}}],["that.serviceobject",{"_index":1628,"title":{},"body":{"classes/EnumValue.html":{}}}],["themselves",{"_index":463,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["then((fetchedactionconfigs",{"_index":2244,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["then(async(result",{"_index":2609,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["theory",{"_index":4795,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":4652,"title":{},"body":{"license.html":{}}}],["they've",{"_index":3259,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["third",{"_index":4746,"title":{},"body":{"license.html":{}}}],["this).find('option:selected",{"_index":4363,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this).find('option:selected').val(that.mapping.transition.userdelimiter",{"_index":4374,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this).val",{"_index":4370,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this).val(that.mapping.transition.userdelimiter).trigger('input",{"_index":4375,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this._cfg",{"_index":2536,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this._cfg.logger",{"_index":2538,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this._identifier",{"_index":1822,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["this._issource",{"_index":3933,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this._nodes",{"_index":1899,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.filter(n",{"_index":2030,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.find(n",{"_index":1907,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.foreach(node",{"_index":2045,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.indexof(lastnode",{"_index":1922,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.indexof(node",{"_index":2033,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.indexof(targetnode",{"_index":1925,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.length",{"_index":1901,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.pop",{"_index":2000,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.push(...newnodes",{"_index":1952,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.push(lastnode",{"_index":2064,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.push(new",{"_index":2066,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(index",{"_index":2034,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(lastaddedindex",{"_index":1986,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(nextnodeindex",{"_index":1997,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(targetnodeindex",{"_index":1975,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(this.getlastnodeindex",{"_index":1957,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[index",{"_index":2035,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[lastaddedindex",{"_index":1977,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[nextnodeindex",{"_index":1993,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[targetnodeindex",{"_index":2009,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[this.getlastnodeindex",{"_index":1903,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._showmappingpreview",{"_index":945,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this._type",{"_index":3950,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.action",{"_index":3245,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.actionconfigparamselectionchanged(event",{"_index":3248,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.actions",{"_index":2263,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.actions[action.multiplicity].push(action",{"_index":2253,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.actions[fieldactiondefinition.multiplicity].push(fieldactiondefinition",{"_index":2235,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.actions[m",{"_index":2349,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.actions[multiplicity",{"_index":2264,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.actions[multiplicity].filter(d",{"_index":2269,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.activemapping",{"_index":3135,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.actualdelimiter",{"_index":4279,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.adderror(new",{"_index":1793,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.addline(l",{"_index":2720,"title":{},"body":{"classes/LineModel.html":{}}}],["this.addlinefromparams('0",{"_index":2788,"title":{},"body":{"classes/LineModel.html":{}}}],["this.alias",{"_index":3926,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.allfields",{"_index":4023,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.allfields.push(field",{"_index":4058,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.alphabetizefields(field.children",{"_index":1587,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.appendfieldnode(f",{"_index":1896,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.appendfieldnode(mfield",{"_index":2040,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.appliestofield(d",{"_index":2270,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.appliestosourcefield(action",{"_index":2330,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.appliestotargetfield(action",{"_index":2331,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.arguments",{"_index":2107,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.argumentvalues",{"_index":2119,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.argumentvalues.push(newargvalue",{"_index":2124,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.buttonclicked(false",{"_index":1518,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.cancelbuttonhandler",{"_index":1528,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.cancelbuttonhandler(this",{"_index":1536,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.cfg",{"_index":785,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"classes/TextNode.html":{}}}],["this.cfg.cleardocs",{"_index":2626,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.currentdraggedfield",{"_index":1326,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["this.cfg.currentdraggedfield.issource",{"_index":1344,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.currentdraggedfield.selected",{"_index":1349,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.documentservice.processdocument(event.target.files[0",{"_index":4192,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.errorservice.adderror(new",{"_index":2015,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.errorservice.clearallerrors",{"_index":3799,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.cfg.errorservice.clearfielderrors",{"_index":3252,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.cfg.errorservice.clearformerrors",{"_index":1531,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.cfg.errorservice.clearvalidationerrors",{"_index":3170,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.errorservice.createformerrorchannel",{"_index":1515,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.cfg.errorservice.isrequiredfieldvalid(this.userclassname",{"_index":265,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["this.cfg.errorservice.resetall",{"_index":4187,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.errorservice.subscribe(errors",{"_index":3564,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.cfg.fieldactionservice.getactiondefinitionforname(selectedactionname",{"_index":3319,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.fieldactionservice.getactionsappliestofield(this.mapping",{"_index":3310,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.fileservice.exportmappingscatalog(filename",{"_index":4245,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.fileservice.importadmcatalog(selectedfile",{"_index":4195,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.fileservice.resetlibs().topromise().then",{"_index":4190,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.fileservice.resetmappings().topromise().then",{"_index":4189,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.getalldocs",{"_index":2595,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.getfirstxmldoc(false).namespaces",{"_index":3886,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.cfg.getfirstxmldoc(false).namespaces.push(newnamespace",{"_index":3894,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.cfg.initcfg.basemappingserviceurl",{"_index":2240,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["this.cfg.initcfg.initialized",{"_index":2644,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/LineModel.html":{}}}],["this.cfg.initcfg.xsrfdefaulttokenvalue",{"_index":54,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["this.cfg.initcfg.xsrfheadername",{"_index":79,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["this.cfg.initializationservice.initialize",{"_index":2627,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.initializationservice.systeminitializedsource.next",{"_index":4222,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.initializationservice.updateloadingstatus('importing",{"_index":4194,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.isdebugenabled",{"_index":2290,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.istraceenabled",{"_index":2278,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["this.cfg.logger.debug(`deserializing",{"_index":2291,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.logger.trace('field",{"_index":2274,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.logger.trace('mapping",{"_index":2541,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.logger.trace('set",{"_index":2575,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.logger.trace(`field",{"_index":2279,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.logger.trace(`mapping",{"_index":2542,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.logger.trace(`set",{"_index":2576,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.mappingdefinitionid",{"_index":2540,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.mappingfiles[0",{"_index":2629,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.mappings",{"_index":792,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.mappings.activemapping",{"_index":793,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.mappings.activemapping.getfields(this.field.issource()).includes(this.field",{"_index":1439,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.mappings.activemapping.islookupmode",{"_index":3158,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappings.activemapping.transition",{"_index":4208,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappings.activemapping.transition.enableexpression",{"_index":4209,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappings.findmappingsforfield(field",{"_index":3164,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappings.getallmappings(true",{"_index":3585,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.cfg.mappings.gettablebyname(tablename",{"_index":4387,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this.cfg.mappings.mappings",{"_index":2747,"title":{},"body":{"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.cfg.mappings.name",{"_index":2630,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.mappings.removetablebyname(activemapping.transition.lookuptablename",{"_index":3161,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappings.templateexists",{"_index":4199,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappings.templatetext",{"_index":4237,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappingservice",{"_index":2238,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.mappingservice.addnewmapping(null",{"_index":4213,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappingservice.addnewmapping(this.selectedfield",{"_index":3641,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.cfg.mappingservice.addplaceholders(insertionindex",{"_index":3493,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.cfg.mappingservice.fieldselected(event.item['field",{"_index":3435,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.cfg.mappingservice.fieldselected(targetfield",{"_index":2710,"title":{},"body":{"classes/LineModel.html":{}}}],["this.cfg.mappingservice.fieldselected(this.cfg.currentdraggedfield",{"_index":1350,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.mappingservice.fieldselected(this.field",{"_index":1353,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.mappingservice.linerefresh$.subscribe",{"_index":2685,"title":{},"body":{"classes/LineModel.html":{}}}],["this.cfg.mappingservice.mappingselectionrequired$.subscribe((field",{"_index":3155,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappingservice.movemappedfieldto(this.mapping",{"_index":3415,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["this.cfg.mappingservice.notifylinerefresh",{"_index":1388,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.mappingservice.notifymappingupdated",{"_index":3247,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.mappingservice.removeallmappings",{"_index":4234,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappingservice.removemapping(activemapping",{"_index":3162,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappingservice.selectmapping(mapping",{"_index":3570,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.cfg.mappingservice.toggleexpressionmode",{"_index":4217,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappingservice.updatemappedfield(this.mapping",{"_index":3437,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["this.cfg.preloadedfieldactionmetadata",{"_index":2222,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.preloadedfieldactionmetadata.actiondetails",{"_index":2224,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.preloadedfieldactionmetadata.actiondetails.actiondetail",{"_index":2225,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.showlinesalways",{"_index":2787,"title":{},"body":{"classes/LineModel.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.showmappedfields",{"_index":1363,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.showmappingdetailtray",{"_index":3163,"title":{},"body":{"components/MappingDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.showmappingpreview",{"_index":4214,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.showmappingtable",{"_index":4203,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.shownamespacetable",{"_index":4204,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.showtypes",{"_index":4212,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.showunmappedfields",{"_index":1364,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.targetdocs[0",{"_index":4230,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.checkfieldeligibiltyforlinedrawing(inputfield",{"_index":2773,"title":{},"body":{"classes/LineModel.html":{}}}],["this.checkfieldeligibiltyforlinedrawing(outputfield",{"_index":2782,"title":{},"body":{"classes/LineModel.html":{}}}],["this.checkiconenabled",{"_index":3246,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.children",{"_index":1621,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.children.push(childfield.copy",{"_index":1632,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.classidentifier",{"_index":3931,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.clearactiondefinitions",{"_index":2223,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.clearallerrors",{"_index":1781,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.clearlines",{"_index":2741,"title":{},"body":{"classes/LineModel.html":{}}}],["this.clearmappings",{"_index":4215,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.close",{"_index":1537,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.collapsed",{"_index":292,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["this.complexfieldsbyclassidentifier",{"_index":4026,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.complexfieldsbyclassidentifier.hasownproperty(key",{"_index":4066,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.complexfieldsbyclassidentifier[classidentifier",{"_index":3952,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.complexfieldsbyclassidentifier[field.classidentifier",{"_index":4076,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.complexfieldsbyclassidentifier[key",{"_index":4067,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(this.nestedcomponenttype",{"_index":1506,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.componentloaded",{"_index":1493,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.confirmbuttondisabled",{"_index":1522,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.confirmbuttontext",{"_index":1523,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.constantdoc.clearfields",{"_index":1023,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc.issource",{"_index":939,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc.name",{"_index":937,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc.showfields",{"_index":940,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc.type",{"_index":936,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc].concat(docs",{"_index":1004,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc].concat(this.sourcedocs).concat(this.targetdocs",{"_index":1039,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.createlinestyle(l",{"_index":2722,"title":{},"body":{"classes/LineModel.html":{}}}],["this.data",{"_index":2887,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.datasource",{"_index":2382,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["this.delimiter",{"_index":4276,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.delimiters",{"_index":3241,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.detector.detectchanges",{"_index":448,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.diff",{"_index":3397,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.discovercomplexfields(field.children",{"_index":4077,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.discovercomplexfields(fields",{"_index":4065,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.displayname",{"_index":3932,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.docdef",{"_index":263,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.docdef.fieldexists(this.getfield",{"_index":351,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.docdef.getallfields",{"_index":2420,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.docdef.ispropertyorconstant",{"_index":1652,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.docdef.issource",{"_index":1641,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.docdef.type",{"_index":1653,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{}}}],["this.docdefinput",{"_index":2776,"title":{},"body":{"classes/LineModel.html":{}}}],["this.docdefinput.handlescroll(null",{"_index":2745,"title":{},"body":{"classes/LineModel.html":{}}}],["this.docdefoutput",{"_index":2744,"title":{},"body":{"classes/LineModel.html":{}}}],["this.docdefoutput.getfielddetailcomponentposition(component.field).y",{"_index":2735,"title":{},"body":{"classes/LineModel.html":{}}}],["this.docdefoutput.handlescroll(null",{"_index":2746,"title":{},"body":{"classes/LineModel.html":{}}}],["this.dofetchfieldactions().topromise",{"_index":2243,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.drawcurrentline('100",{"_index":2736,"title":{},"body":{"classes/LineModel.html":{}}}],["this.drawcurrentline(event.offsetx.tostring",{"_index":2729,"title":{},"body":{"classes/LineModel.html":{}}}],["this.drawingline",{"_index":2727,"title":{},"body":{"classes/LineModel.html":{}}}],["this.drawlinesformapping(activemapping",{"_index":2752,"title":{},"body":{"classes/LineModel.html":{}}}],["this.drawlinesformapping(m",{"_index":2751,"title":{},"body":{"classes/LineModel.html":{}}}],["this.editmode",{"_index":2385,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.edittemplate",{"_index":4211,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.elem",{"_index":803,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["this.elem.onmouseup",{"_index":3410,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.elem.style.position",{"_index":3409,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.elem.style['top",{"_index":3399,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.elementref.nativeelement.focus",{"_index":2655,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.emitupdatedevent",{"_index":1776,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.emitupdatedevent(errorscope.form",{"_index":1788,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.enablecheck",{"_index":3276,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.entries",{"_index":2836,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.entries.length",{"_index":2840,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.entries.push(entry",{"_index":2838,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.enumeration",{"_index":1609,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.enumfieldsbyclassidentifier",{"_index":4027,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.enumfieldsbyclassidentifier[classidentifier",{"_index":3954,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.enumfieldsbyclassidentifier[field.classidentifier",{"_index":4060,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.errors",{"_index":788,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.errors.filter(e",{"_index":1784,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.errors.length",{"_index":3797,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.errorservice",{"_index":790,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.errorservice.removeerror(e.identifier",{"_index":799,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.errorservice.removeerror(error.identifier",{"_index":3769,"title":{},"body":{"components/ModalErrorDetailComponent.html":{}}}],["this.errorservice.subscribe((errors",{"_index":787,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.errorsubscription",{"_index":786,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingListComponent.html":{}}}],["this.errorsubscription.unsubscribe",{"_index":789,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingListComponent.html":{}}}],["this.errorupdatedsource.next(this.errors",{"_index":1796,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.errorupdatedsource.subscribe(observer",{"_index":1789,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.excludebyidentifier(this.errors",{"_index":1780,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.excludebyidentifier(this.formerrors",{"_index":1779,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.expressionupdatedsource.asobservable",{"_index":1890,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.expressionupdatedsource.next",{"_index":1929,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.expressionupdatedsource.next(updatedevent",{"_index":1990,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.extractfieldactiondefinition(actiondetail",{"_index":2226,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.fade",{"_index":1520,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.field",{"_index":338,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{}}}],["this.field.collapsed",{"_index":1387,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.displayname",{"_index":342,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.docdef",{"_index":348,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.docdef.type",{"_index":1358,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.enumeration",{"_index":1354,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.field",{"_index":1884,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.field.field.name",{"_index":1885,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.field.fielddepth",{"_index":1434,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.hasunmappedchildren",{"_index":1371,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.isattribute",{"_index":1359,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{}}}],["this.field.iscollection",{"_index":1356,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.isconstant",{"_index":1403,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.isproperty",{"_index":1401,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.ispropertyorconstant",{"_index":1428,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.issource",{"_index":1343,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.field.isterminal",{"_index":1319,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.name",{"_index":344,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.name.length",{"_index":1438,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.namespacealias",{"_index":2394,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.field.parentfield",{"_index":2386,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.field.partofmapping",{"_index":1362,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.partoftransformation",{"_index":1365,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.path",{"_index":345,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.serviceobject.jsontype",{"_index":2427,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.field.type",{"_index":346,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.usercreated",{"_index":347,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.value",{"_index":343,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["this.fieldcomponents.toarray",{"_index":1393,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.fielddetailelement.nativeelement",{"_index":1382,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.fieldmode",{"_index":335,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.fieldpairmatchessearch(mapping",{"_index":3586,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.fieldpaths",{"_index":4002,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldpaths.push(field.path",{"_index":4057,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldpaths.sort",{"_index":3995,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fields",{"_index":3992,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fields.push(field",{"_index":4003,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath",{"_index":4025,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath[currentparentpath",{"_index":3982,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath[field.path",{"_index":4029,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath[fieldpath",{"_index":3970,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath[oldpath",{"_index":4000,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldtype",{"_index":2388,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.filedata",{"_index":4224,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.focus",{"_index":2653,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.focusel",{"_index":266,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["this.formerrors",{"_index":1772,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.formerrorupdatedsource",{"_index":1782,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.formerrorupdatedsource.closed",{"_index":1778,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.formerrorupdatedsource.complete",{"_index":1783,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.formerrorupdatedsource.next(this.formerrors",{"_index":1795,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.formerrorupdatedsource.subscribe",{"_index":1790,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.getactualfield(mapping",{"_index":2329,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.getalldocs",{"_index":1026,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.getallfields",{"_index":3958,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.getallmappedfields",{"_index":3046,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getargumentvalue(argumentname).value",{"_index":2125,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.getcollectionparentfield",{"_index":1636,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.getcomplexfield(field.classidentifier",{"_index":4012,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.getconfig().initcfg.loadingstatus",{"_index":446,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.getconfig().initializationservice.initializationstatuschanged$.subscribe",{"_index":444,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.getconfig().initializationservice.systeminitialized$.subscribe",{"_index":441,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.getconfig().sourcedocs",{"_index":451,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.getconfig().sourcedocs.length",{"_index":452,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.getconfig().targetdocs",{"_index":455,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.getconfig().targetdocs.length",{"_index":456,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.getcurrentadmcatalog().subscribe",{"_index":2611,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getcurrentmappingjson().topromise().then((result",{"_index":2631,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getdocs(issource",{"_index":1033,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.getdocswithoutpropertydoc(issource",{"_index":1002,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.geterrors()[0",{"_index":812,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.getfield(fieldpath",{"_index":3966,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.getfields(field.getfieldpaths(fields",{"_index":3963,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.getfields(issource",{"_index":3040,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getfields(true).concat(this.getfields(false",{"_index":3049,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getjsonbuf",{"_index":2584,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getlastnode",{"_index":1906,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.getmappedfieldactions()[actionindex",{"_index":3277,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.getmappedfieldactions()[selectedactionindex",{"_index":3316,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["this.getmappedfieldforfield(field",{"_index":3053,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(field.issource",{"_index":3005,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(field.issource()).push(mappedfield",{"_index":3003,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(field.issource()).unshift(mappedfield",{"_index":3002,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(issource",{"_index":3023,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(issource).push(mappedfield",{"_index":3017,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(mappedfield.field.issource",{"_index":3020,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(mappedfield.field.issource()).indexof(mappedfield",{"_index":3026,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(true).concat(this.getmappedfields(false",{"_index":3051,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappingdefinitionid",{"_index":2556,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getmappingdefinitionid()).topromise",{"_index":2608,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getmappingdefinitionid()).topromise().then",{"_index":2624,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getnamewithnamespace",{"_index":1647,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.getparentobjectname",{"_index":3497,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.getscreenposforfield(inputfield",{"_index":2775,"title":{},"body":{"classes/LineModel.html":{}}}],["this.getscreenposforfield(outputfield",{"_index":2785,"title":{},"body":{"classes/LineModel.html":{}}}],["this.getselectedmappingcomponent().mapping",{"_index":3643,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.getsourceiconcssclass",{"_index":3496,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.gettargetfieldfromline(selectedelement.attributes",{"_index":2709,"title":{},"body":{"classes/LineModel.html":{}}}],["this.getwarnings()[0",{"_index":813,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.handleerror('error",{"_index":2550,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.hasfocus",{"_index":2654,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.hassourcedoc",{"_index":450,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.hastargetdoc",{"_index":454,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.headers",{"_index":2276,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["this.headertext",{"_index":1525,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.htmlcache",{"_index":2042,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.http.delete(url",{"_index":2563,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.http.get(url",{"_index":2275,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["this.http.put(url",{"_index":2573,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.initcfg.classpath",{"_index":1029,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.initializationservice.cfg",{"_index":663,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["this.initializationservice.initialize",{"_index":716,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["this.initializationstatuschangedsubscription",{"_index":443,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.initializationstatuschangedsubscription.unsubscribe",{"_index":458,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.initialized",{"_index":3996,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.inputid",{"_index":3390,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.insertnodes([new",{"_index":2038,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.insertnodes(this.createnodesfromtext(str",{"_index":1944,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.isarray",{"_index":1643,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.isclosing",{"_index":341,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.iscollection",{"_index":1604,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.isdragdroptarget",{"_index":1345,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["this.isinitialized",{"_index":2237,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.isoddrow",{"_index":3671,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["this.isopen",{"_index":798,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.isprimitive",{"_index":1605,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.isproperty",{"_index":1649,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.ispropertyorconstant",{"_index":1648,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["this.issource",{"_index":3311,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.issource)[0",{"_index":3477,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.istarget",{"_index":3927,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.isxml",{"_index":2387,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.jsonbuffer",{"_index":2632,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.left_bracket",{"_index":4051,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.linebeingformed",{"_index":2725,"title":{},"body":{"classes/LineModel.html":{}}}],["this.linebeingformed.targetx",{"_index":2732,"title":{},"body":{"classes/LineModel.html":{}}}],["this.linebeingformed.targety",{"_index":2733,"title":{},"body":{"classes/LineModel.html":{}}}],["this.linemachine",{"_index":470,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["this.linemachine.handledocumentfieldmouseover(this",{"_index":1386,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.linemachine.redrawlinesformappings",{"_index":471,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.linemachineelement.nativeelement",{"_index":2763,"title":{},"body":{"classes/LineModel.html":{}}}],["this.linerefreshsubscription",{"_index":2684,"title":{},"body":{"classes/LineModel.html":{}}}],["this.linerefreshsubscription.unsubscribe",{"_index":2687,"title":{},"body":{"classes/LineModel.html":{}}}],["this.lines",{"_index":2692,"title":{},"body":{"classes/LineModel.html":{}}}],["this.lines.push(l",{"_index":2723,"title":{},"body":{"classes/LineModel.html":{}}}],["this.loadcomponent",{"_index":1497,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.loadingstatus",{"_index":445,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.logger",{"_index":2539,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.logger.debug('no",{"_index":2246,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.logger.debug(`field",{"_index":2228,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.logger.getconfigsnapshot().level",{"_index":953,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.lookuptablename",{"_index":4318,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.mappedfield",{"_index":3243,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.actions",{"_index":3244,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["this.mappedfield.actions.push(action",{"_index":3479,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mappedfield.actions[actionindex",{"_index":3273,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.mappedfield.field",{"_index":3480,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.field.docdef",{"_index":3484,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.field.docdef.getname(configmodel.getconfig().showtypes",{"_index":3498,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.field.getfieldlabel(configmodel.getconfig().showtypes",{"_index":3605,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.field.name",{"_index":3483,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mappedfield.field.name.length",{"_index":3475,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mappedfield.field.path",{"_index":3481,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mappedfield.ispadfield",{"_index":3474,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mappedfield.parseddata.usercreated",{"_index":3264,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.mappedfield.removeaction(action",{"_index":3313,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["this.mapping",{"_index":2017,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.mapping.getindexformappedfield(insertbeforemappedfield",{"_index":3416,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.getindexformappedfield(this.field",{"_index":1883,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.mapping.getmappedfields(mappedfield.issource",{"_index":3489,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mapping.getmappedfields(this.issource",{"_index":3426,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.getmappedfields(this.issource).length",{"_index":3486,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mapping.getusermappedfields(true).foreach(f",{"_index":1895,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.mapping.removemappedfield(mappedfield",{"_index":3436,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["this.mapping.transition",{"_index":3420,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.transition.enableexpression",{"_index":3421,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["this.mapping.transition.expression.updatefieldreference(this.mapping",{"_index":3422,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.transition.isenumerationmode",{"_index":3425,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.mapping.transition.ismanytoonemode",{"_index":3424,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.transition.isonetomanymode",{"_index":3423,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.transition.lookuptablename",{"_index":4386,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this.mapping.transition.mode",{"_index":3428,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.mappingchanged",{"_index":2686,"title":{},"body":{"classes/LineModel.html":{}}}],["this.mappingfiles",{"_index":1024,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.mappingidentifierservice.getcurrentmappingdefinitionid",{"_index":665,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["this.mappings",{"_index":3138,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.mappingselectionrequiredsubscription",{"_index":3154,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.mappingselectionrequiredsubscription.unsubscribe",{"_index":3157,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.mappingservice.disablemappingpreview",{"_index":947,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.mappingservice.enablemappingpreview",{"_index":946,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.mappingsfilename",{"_index":4223,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.mappingsfilename.length",{"_index":4244,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.matchesdate(action.sourcetype",{"_index":2335,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.matchesdate(action.targettype",{"_index":2340,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.matchesnumeric(action.sourcetype",{"_index":2337,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.matchesnumeric(action.targettype",{"_index":2341,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.message",{"_index":1524,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.modalerrorsubject",{"_index":1500,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.modalerrorsubject.closed",{"_index":1514,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.modalerrorsubject.complete",{"_index":1501,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.modalerrorsubject.subscribe((errors",{"_index":1516,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.modalerrorsubscription",{"_index":1498,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.modalerrorsubscription.unsubscribe",{"_index":1499,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.modalerrorwindow.reset",{"_index":809,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.modalerrorwindow.seterrors(errorhandlerservice.filterwith(this.errors",{"_index":810,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.modalerrorwindow.show",{"_index":811,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.modalwindow",{"_index":1410,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{}}}],["this.modalwindow.cancelbuttonhandler",{"_index":3173,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.modalwindow.close",{"_index":3642,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.modalwindow.confirmbuttontext",{"_index":1399,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.headertext",{"_index":1404,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.message",{"_index":1429,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.modalwindow.nestedcomponentinitializedcallback",{"_index":1405,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.nestedcomponenttype",{"_index":1417,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.okbuttonhandler",{"_index":1418,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.reset",{"_index":1398,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.show",{"_index":1426,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindowcomponent",{"_index":340,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.modalwindowcomponent.confirmbuttondisabled",{"_index":353,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.modalwindowcomponent.visible",{"_index":350,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["this.mode",{"_index":4316,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.mouseeventtimer",{"_index":802,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.mytarget",{"_index":1495,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytarget.changes.subscribe(changes",{"_index":1492,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytarget.toarray().length",{"_index":1496,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytarget.toarray()[0",{"_index":1503,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytargetchangessubscription",{"_index":1486,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytargetchangessubscription.unsubscribe",{"_index":1487,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.name",{"_index":1602,"title":{},"body":{"classes/EnumValue.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["this.namespace",{"_index":3845,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["this.namespace.alias",{"_index":3851,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["this.namespace.istarget",{"_index":3850,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["this.namespacealias",{"_index":1601,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{}}}],["this.namespacematchessearch(ns",{"_index":3904,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.namespaces",{"_index":2397,"title":{},"body":{"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{}}}],["this.namespaces.push(fakenamespace",{"_index":2412,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.nestedcomponent",{"_index":1507,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponent.getinitialfocuselement",{"_index":1512,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponent.isdatavalid",{"_index":1532,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponentinitializedcallback",{"_index":1509,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponentinitializedcallback(this",{"_index":1510,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponenttype",{"_index":1526,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nodes[lastaddedindex",{"_index":1978,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.okbuttonhandler",{"_index":1527,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.okbuttonhandler(this",{"_index":1533,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.outputselects.toarray",{"_index":2889,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.parentfield",{"_index":1618,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{}}}],["this.parentfield.name",{"_index":2414,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.parentfield.namespacealias",{"_index":2396,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.parentfieldname",{"_index":2413,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.parentobjectname",{"_index":3482,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.parentobjectname.length",{"_index":3485,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.path",{"_index":1646,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["this.pathseparator",{"_index":3973,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatechildren(field.parentfield",{"_index":4004,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatechildren(parentfield",{"_index":3986,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatefielddata(childfield",{"_index":4020,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatefielddata(field",{"_index":3994,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatefieldparentpaths(childfield",{"_index":4018,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatefieldparentpaths(field",{"_index":3993,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.preparecomplexfields",{"_index":3990,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.prettyname",{"_index":4278,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.processmappingscatalog(userfile",{"_index":4191,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.propertydoc",{"_index":1003,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.clearfields",{"_index":1022,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.issource",{"_index":934,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.name",{"_index":933,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.showfields",{"_index":935,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.type",{"_index":931,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.reader",{"_index":4225,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.reader.onload",{"_index":4174,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.reader.readasarraybuffer(filecontent",{"_index":4179,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.reader.result",{"_index":4175,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.redrawlinesformappings",{"_index":2711,"title":{},"body":{"classes/LineModel.html":{}}}],["this.resetall",{"_index":4216,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.right_bracket",{"_index":4052,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":3515,"title":{},"body":{"injectables/MappingIdentifierService.html":{}}}],["this.sanitizer.bypasssecuritytruststyle('display:inline",{"_index":1436,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.sanitizer.bypasssecuritytruststyle('stroke",{"_index":2760,"title":{},"body":{"classes/LineModel.html":{}}}],["this.search(this.searchfilter",{"_index":3576,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchfilter",{"_index":3389,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchfilter.tolowercase",{"_index":3579,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchmode",{"_index":3566,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchresults",{"_index":3573,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchresults.length",{"_index":3568,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchresults.push(mapping",{"_index":3587,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.searchresults.push(ns",{"_index":3905,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.sectioncomponents.toarray",{"_index":3645,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.selected",{"_index":1375,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["this.selectedcallback(this",{"_index":3675,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["this.selectedmappingcomponent",{"_index":3644,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.selectednamespace",{"_index":3885,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.selectmapping(field",{"_index":3156,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.selectnamespace",{"_index":3906,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.serializedvalue",{"_index":4277,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.serviceobject",{"_index":1616,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.setbinaryfiletoservice(filecontent",{"_index":2607,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.setlinebeingformed(null",{"_index":2739,"title":{},"body":{"classes/LineModel.html":{}}}],["this.showactiveerrors",{"_index":806,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.sortfieldactiondefinitions",{"_index":2236,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.sourcedocs",{"_index":998,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.sourcedocs.push(docdef",{"_index":989,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.sourcefields",{"_index":2994,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.sourcefields.concat(this.targetfields",{"_index":2999,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.sourcefields.length",{"_index":3012,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.sourceiconcssclass",{"_index":3495,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.sourceidentifier",{"_index":2834,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.sourcetype",{"_index":2823,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.sourcevalue",{"_index":2822,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.start",{"_index":3398,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.storeerrors(errors",{"_index":3565,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.storeerrors(this.cfg.errorservice.geterrors",{"_index":3563,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.str",{"_index":1876,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.str.replace",{"_index":1877,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.systeminitializedsubscription",{"_index":440,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.systeminitializedsubscription.unsubscribe",{"_index":457,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.table",{"_index":2871,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.table.entries",{"_index":2888,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.table.entries.push(e",{"_index":2897,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.table.getentryforsource(tabledata.sourceenumvalue",{"_index":2883,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.tables.push(table",{"_index":3123,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tables[this.tables.indexof(table",{"_index":3132,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname",{"_index":3126,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname.hasownproperty(key",{"_index":3127,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname[key",{"_index":3128,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname[name",{"_index":3124,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname[table.name",{"_index":3122,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbysourcetargetkey[iokey",{"_index":3133,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbysourcetargetkey[key",{"_index":3125,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbysourcetargetkey[table.getinputoutputkey",{"_index":3121,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.targetdocs",{"_index":999,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.targetdocs.push(docdef",{"_index":990,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.targetenabled",{"_index":3849,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["this.targetfields",{"_index":2995,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.targetfields.length",{"_index":3013,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.targetidentifier",{"_index":2835,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.targetsupportstemplate",{"_index":4231,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.targettype",{"_index":2825,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.targetvalue",{"_index":2824,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.templatetext",{"_index":3120,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.terminalfields",{"_index":4024,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.terminalfields.push(field",{"_index":4061,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.textcache",{"_index":2041,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.tokenextractor.gettoken",{"_index":81,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["this.transitionfieldaction",{"_index":4314,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.transitionfieldaction.name",{"_index":4315,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.type",{"_index":1606,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["this.updatecache",{"_index":1928,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.updatefromconfig",{"_index":442,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.updatetemplatevalues",{"_index":3473,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.uri",{"_index":3928,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.userclassname",{"_index":264,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["this.usercollectiontype",{"_index":268,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["this.uuid",{"_index":1588,"title":{},"body":{"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["this.validateactionconfigparamselection(action.argumentvalues",{"_index":3275,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.validationerrors",{"_index":3588,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.validationerrors.get(e.mapping).push(e",{"_index":3592,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.validationerrors.has(e.mapping",{"_index":3590,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.validationerrors.set(e.mapping",{"_index":3591,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.value",{"_index":1650,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.valuetype",{"_index":333,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.visible",{"_index":1494,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.xsrfcookiename",{"_index":887,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.xsrfdefaulttokenvalue",{"_index":888,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.xsrfheadername",{"_index":886,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.yoffset).tostring",{"_index":2737,"title":{},"body":{"classes/LineModel.html":{}}}],["those",{"_index":1334,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"license.html":{}}}],["through",{"_index":4589,"title":{},"body":{"license.html":{}}}],["throw",{"_index":2755,"title":{},"body":{"classes/LineModel.html":{},"classes/NamespaceModel.html":{}}}],["time",{"_index":365,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["time'].indexof(selectedtype",{"_index":2346,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["timeout",{"_index":2534,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["timer",{"_index":771,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["times",{"_index":4037,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["timetz",{"_index":369,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["title",{"_index":284,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"license.html":{}}}],["tns",{"_index":3852,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{}}}],["tns'.includes(filter",{"_index":3895,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["toadd",{"_index":2028,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["todisplayable",{"_index":1150,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["todisplayable(camelcasestring",{"_index":1195,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["todo",{"_index":1762,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["toerroriconclass",{"_index":4099,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["toerroriconclasspipe",{"_index":1050,"title":{"pipes/ToErrorIconClassPipe.html":{}},"body":{"modules/DataMapperModule.html":{},"pipes/ToErrorIconClassPipe.html":{},"coverage.html":{},"overview.html":{}}}],["togglesearch",{"_index":3533,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["tohtml",{"_index":1857,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["tojson",{"_index":2821,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["token",{"_index":16,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tokenposition",{"_index":1999,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["toolbar",{"_index":4108,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["toolbar.component.css",{"_index":520,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["toolbar.component.html",{"_index":4109,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar/data",{"_index":519,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["toolbar/toolbar.component",{"_index":432,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["toolbarbuttonclicked",{"_index":4123,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarbuttonclicked(action",{"_index":4163,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarcomponent",{"_index":184,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tooltipmodule",{"_index":1074,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["tooltipmodule.forroot",{"_index":1125,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["tooltipmoduleforroot",{"_index":1124,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":549,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["top:0",{"_index":536,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["top:10px",{"_index":586,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["top:20",{"_index":539,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["top:6",{"_index":624,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["topromise().then((body",{"_index":2277,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["topromise().then((res",{"_index":2564,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["toremove",{"_index":2029,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["tort",{"_index":4796,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":2808,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["totext",{"_index":1858,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["tracking",{"_index":4670,"title":{},"body":{"license.html":{}}}],["trade",{"_index":4771,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":4736,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":4769,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1328,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"license.html":{}}}],["transform",{"_index":4100,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["transform(value",{"_index":4101,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["transformation",{"_index":2171,"title":{},"body":{"injectables/FieldActionService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"license.html":{}}}],["transformations",{"_index":2169,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["transition",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["transition.model",{"_index":2966,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["transitiondelimiter",{"_index":3239,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["transitiondelimiter.none",{"_index":3280,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["transitiondelimiter.space",{"_index":4256,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimiter.user_defined",{"_index":3283,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["transitiondelimiter.user_defined].includes(delimitermodel.delimiter",{"_index":3281,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["transitiondelimitermodel",{"_index":3226,"title":{"classes/TransitionDelimiterModel.html":{}},"body":{"components/MappingFieldActionArgumentComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{}}}],["transitiondelimitermodel(transitiondelimiter.ampersand",{"_index":4287,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.at_sign",{"_index":4288,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.backslash",{"_index":4291,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.colon",{"_index":4292,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.comma",{"_index":4293,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.dash",{"_index":4294,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.equal",{"_index":4295,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.hash",{"_index":4296,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.multi_space",{"_index":4297,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.none",{"_index":4286,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.period",{"_index":4300,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.pipe",{"_index":4301,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.semicolon",{"_index":4302,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.slash",{"_index":4303,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.space",{"_index":4304,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.underscore",{"_index":4305,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.user_defined",{"_index":4307,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionfieldaction",{"_index":4282,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionfieldactionname",{"_index":4313,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmode",{"_index":2923,"title":{},"body":{"classes/LookupTableUtil.html":{},"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["transitionmode.enum",{"_index":2926,"title":{},"body":{"classes/LookupTableUtil.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmode.for_each",{"_index":4311,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmode.many_to_one",{"_index":3430,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["transitionmode.one_to_many",{"_index":3431,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["transitionmode.one_to_one",{"_index":3429,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmodel",{"_index":2965,"title":{"classes/TransitionModel.html":{}},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{}}}],["transitionmodel.delimitermodels",{"_index":3242,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmodel.delimitermodels.length",{"_index":4283,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmodel.getmappingmodename(this.mode",{"_index":4317,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmodel.initialize",{"_index":3240,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionname",{"_index":3580,"title":{},"body":{"components/MappingListComponent.html":{}}}],["transitionname.tolowercase().includes(filter",{"_index":3582,"title":{},"body":{"components/MappingListComponent.html":{}}}],["transitionselectioncomponent",{"_index":186,"title":{"components/TransitionSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["translate",{"_index":3221,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["translation",{"_index":4629,"title":{},"body":{"license.html":{}}}],["tree",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["triangle",{"_index":4106,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["trigger",{"_index":4219,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["true",{"_index":313,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":2580,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["turn",{"_index":1192,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["two",{"_index":2589,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["type",{"_index":95,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"injectables/MappingIdentifierService.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type(type",{"_index":3949,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["typeaheadmodule",{"_index":1075,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["typeaheadmodule.forroot",{"_index":1123,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["typeaheadmoduleforroot",{"_index":1122,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":1228,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["types",{"_index":2167,"title":{},"body":{"injectables/FieldActionService.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["typing",{"_index":3433,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["ui",{"_index":907,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"classes/MappingDefinition.html":{},"index.html":{}}}],["ui's",{"_index":4574,"title":{},"body":{"index.html":{}}}],["uint8array",{"_index":1194,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["uint8array(arraybuffer",{"_index":4177,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["ul",{"_index":1357,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["un",{"_index":3698,"title":{},"body":{"classes/MappingUtil.html":{}}}],["unable",{"_index":2057,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/TextNode.html":{}}}],["undefined",{"_index":1229,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{}}}],["under",{"_index":480,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["underscore",{"_index":4274,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["union",{"_index":4596,"title":{},"body":{"license.html":{}}}],["unique",{"_index":4084,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["units",{"_index":3258,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["unknown",{"_index":4523,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unless",{"_index":490,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["unmapped",{"_index":2031,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["unqualified",{"_index":3925,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["unqualifiednamespace",{"_index":3916,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["unqualifiedns",{"_index":2391,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["unqualifiedns.alias",{"_index":2393,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["unqualifiedns].concat(this.docdef.namespaces",{"_index":2398,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["unselected",{"_index":2023,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["unsigned",{"_index":371,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["until",{"_index":4226,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["up",{"_index":468,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["update",{"_index":459,"title":{},"body":{"components/DataMapperAppComponent.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldContainerComponent.html":{},"index.html":{}}}],["updatecache",{"_index":2043,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updated",{"_index":1744,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldDetailComponent.html":{}}}],["updatedevent",{"_index":1960,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updatedevent.node",{"_index":1987,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updatedevent.offset",{"_index":1988,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updatedocumentnamespacesfrommappings",{"_index":3685,"title":{},"body":{"classes/MappingUtil.html":{}}}],["updatedocumentnamespacesfrommappings(cfg",{"_index":3700,"title":{},"body":{"classes/MappingUtil.html":{}}}],["updatefield(field",{"_index":3997,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["updatefieldreference(mapping",{"_index":2025,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updatefromconfig",{"_index":400,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/ToolbarComponent.html":{}}}],["updatefrommappings(mappingdefinition",{"_index":4031,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["updatelookuptables",{"_index":2915,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["updatelookuptables(mappingdefinition",{"_index":2921,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["updatemappedfieldsfromdocuments",{"_index":3686,"title":{},"body":{"classes/MappingUtil.html":{}}}],["updatemappedfieldsfromdocuments(mapping",{"_index":3702,"title":{},"body":{"classes/MappingUtil.html":{}}}],["updatemappingsfromdocuments",{"_index":3687,"title":{},"body":{"classes/MappingUtil.html":{}}}],["updatemappingsfromdocuments(cfg",{"_index":3704,"title":{},"body":{"classes/MappingUtil.html":{}}}],["updatesearchfilter",{"_index":3349,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["updatesearchfilter(value",{"_index":3380,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["updatetemplatevalues",{"_index":3448,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["uri",{"_index":3722,"title":{},"body":{"classes/MappingUtil.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["uri:documentdefinition",{"_index":1005,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["url",{"_index":2241,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"index.html":{}}}],["url(#line",{"_index":2667,"title":{},"body":{"classes/LineModel.html":{}}}],["urlmappingid",{"_index":3514,"title":{},"body":{"injectables/MappingIdentifierService.html":{}}}],["urls",{"_index":670,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["use",{"_index":69,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/LineModel.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["useclass",{"_index":1136,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["used",{"_index":1715,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["user",{"_index":758,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/ErrorInfo.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["user's",{"_index":1208,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["user_defined",{"_index":4275,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["userclassname",{"_index":219,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["usercollectionclassname",{"_index":220,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["usercollectiontype",{"_index":221,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["usercreated",{"_index":1559,"title":{},"body":{"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["userdelimiter",{"_index":4281,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["userexport",{"_index":2579,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["userfieldcount",{"_index":3009,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["userfile",{"_index":4180,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["userfile.name.split",{"_index":4183,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["userfilecomps",{"_index":4182,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["userfilecomps[userfilecomps.length",{"_index":4185,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["userfilesuffix",{"_index":4184,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["using",{"_index":4789,"title":{},"body":{"license.html":{}}}],["util",{"_index":2533,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["util.ts",{"_index":1140,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/LookupTableUtil.html":{},"classes/MappingUtil.html":{},"coverage.html":{}}}],["util.ts:101",{"_index":1170,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:118",{"_index":1205,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:130",{"_index":1196,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:152",{"_index":1158,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:167",{"_index":3695,"title":{},"body":{"classes/MappingUtil.html":{}}}],["util.ts:188",{"_index":3693,"title":{},"body":{"classes/MappingUtil.html":{}}}],["util.ts:20",{"_index":1155,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:204",{"_index":3701,"title":{},"body":{"classes/MappingUtil.html":{}}}],["util.ts:21",{"_index":1153,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:23",{"_index":1182,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:231",{"_index":3689,"title":{},"body":{"classes/MappingUtil.html":{}}}],["util.ts:28",{"_index":2920,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["util.ts:29",{"_index":3705,"title":{},"body":{"classes/MappingUtil.html":{}}}],["util.ts:44",{"_index":3703,"title":{},"body":{"classes/MappingUtil.html":{}}}],["util.ts:46",{"_index":1186,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:60",{"_index":2922,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["util.ts:71",{"_index":1191,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:85",{"_index":1178,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:86",{"_index":2918,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["utils/mapping",{"_index":1115,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["uuid",{"_index":1553,"title":{},"body":{"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["uuidcounter",{"_index":1543,"title":{},"body":{"classes/EnumValue.html":{}}}],["v2/atlas",{"_index":4882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2/atlas/java",{"_index":4883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2/atlas/json",{"_index":4885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2/atlas/xml",{"_index":4884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":1733,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["validateactionconfigparamselection",{"_index":3188,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["validateactionconfigparamselection(acp",{"_index":3231,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["validation",{"_index":1657,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"miscellaneous/enumerations.html":{}}}],["validationerrors",{"_index":3521,"title":{},"body":{"components/MappingListComponent.html":{}}}],["value",{"_index":24,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.some(e",{"_index":4104,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["valued",{"_index":3215,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["valueexistsoncreation",{"_index":227,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{}}}],["values",{"_index":2089,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["valuetype",{"_index":304,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["valuetypeselectionchanged",{"_index":306,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["valuetypeselectionchanged(event",{"_index":321,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["var",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["variable",{"_index":4398,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":4858,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":4661,"title":{},"body":{"license.html":{}}}],["verify",{"_index":2703,"title":{},"body":{"classes/LineModel.html":{}}}],["version",{"_index":483,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["vertical",{"_index":545,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["via",{"_index":2451,"title":{},"body":{"injectables/FileManagementService.html":{},"index.html":{}}}],["viewchild",{"_index":255,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["viewchild('class",{"_index":249,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["viewchild('datamappercomponent",{"_index":644,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["viewchild('docdefinput",{"_index":409,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewchild('docdefoutput",{"_index":411,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewchild('errorpanel",{"_index":413,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewchild('expressioncomponent",{"_index":4165,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["viewchild('fielddetailelement",{"_index":1309,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["viewchild('linemachine",{"_index":418,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewchild('linemachineelement",{"_index":2680,"title":{},"body":{"classes/LineModel.html":{}}}],["viewchild('mappingdetailcomponent",{"_index":422,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewchild('modalerrorwindow",{"_index":424,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewchild('modalwindow",{"_index":426,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewchild('name",{"_index":4083,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["viewchild('namespace",{"_index":3841,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["viewchild('sourcesheader",{"_index":3153,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["viewchild('template",{"_index":4087,"title":{},"body":{"components/TemplateEditComponent.html":{}}}],["viewchild('toolbarcomponent",{"_index":429,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewchild('value",{"_index":327,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{}}}],["viewchildren",{"_index":1313,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["viewchildren('dyn_target",{"_index":1479,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["viewchildren('fielddetail",{"_index":1307,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["viewchildren('mappingsection",{"_index":3627,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["viewchildren('outputselect",{"_index":2858,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["viewcontainerref",{"_index":1459,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["viewcontainerref.clear",{"_index":1504,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["viewcontainerref.createcomponent(componentfactory).instance",{"_index":1508,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["viewencapsulation",{"_index":431,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewencapsulation.none",{"_index":378,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["visibility:hidden",{"_index":523,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["visibility:visible",{"_index":527,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["visible",{"_index":1477,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["visibleincurrentdocumentsearch",{"_index":1548,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["void",{"_index":233,"title":{},"body":{"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["w.message",{"_index":3770,"title":{},"body":{"components/ModalErrorDetailComponent.html":{}}}],["walk",{"_index":3055,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["want",{"_index":1431,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["warn",{"_index":1819,"title":{},"body":{"classes/ErrorInfo.html":{},"miscellaneous/enumerations.html":{}}}],["warning",{"_index":748,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["warnings",{"_index":749,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["warranties",{"_index":499,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["warranty",{"_index":4779,"title":{},"body":{"license.html":{}}}],["wasn't",{"_index":4241,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["way",{"_index":1764,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FileManagementService.html":{}}}],["we'll",{"_index":68,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["we're",{"_index":2513,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{}}}],["web",{"_index":4529,"title":{},"body":{"index.html":{}}}],["well",{"_index":1660,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FileManagementService.html":{}}}],["wherever",{"_index":4745,"title":{},"body":{"license.html":{}}}],["whether",{"_index":4609,"title":{},"body":{"license.html":{}}}],["who's",{"_index":1325,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["whole",{"_index":4646,"title":{},"body":{"license.html":{}}}],["widget",{"_index":1941,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/TextNode.html":{}}}],["width",{"_index":529,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["width:10",{"_index":598,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["width:100",{"_index":540,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["width:105px",{"_index":628,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["width:12px",{"_index":553,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["width:20px",{"_index":630,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["width:30",{"_index":591,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["width:300px",{"_index":605,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["width:45",{"_index":597,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["width:4px",{"_index":2761,"title":{},"body":{"classes/LineModel.html":{}}}],["window",{"_index":20,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["window'},{'name",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["window.component",{"_index":260,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["window.component.html",{"_index":1465,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["window.component.ts",{"_index":1455,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"coverage.html":{}}}],["window.component.ts:111",{"_index":3818,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:132",{"_index":3817,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:133",{"_index":3816,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:141",{"_index":3822,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:148",{"_index":3821,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:160",{"_index":3815,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:25",{"_index":3804,"title":{},"body":{"interfaces/ModalErrorWindowValidator.html":{}}}],["window.component.ts:26",{"_index":3803,"title":{},"body":{"interfaces/ModalErrorWindowValidator.html":{}}}],["window.component.ts:29",{"_index":3834,"title":{},"body":{"interfaces/ModalWindowValidator.html":{}}}],["window.component.ts:30",{"_index":3833,"title":{},"body":{"interfaces/ModalWindowValidator.html":{}}}],["window.component.ts:35",{"_index":3787,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:36",{"_index":3793,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:37",{"_index":3795,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:38",{"_index":3788,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:39",{"_index":3792,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:40",{"_index":1458,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:41",{"_index":3796,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:42",{"_index":3791,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:43",{"_index":3790,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:44",{"_index":1457,"title":{},"body":{"components/EmptyModalBodyComponent.html":{}}}],["window.component.ts:45",{"_index":3775,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:47",{"_index":3789,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:49",{"_index":3780,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:53",{"_index":3783,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:56",{"_index":3810,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:57",{"_index":3813,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:58",{"_index":3812,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:59",{"_index":3814,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:60",{"_index":3776,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{}}}],["window.component.ts:61",{"_index":3809,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:62",{"_index":3811,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:64",{"_index":3827,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:65",{"_index":3831,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:66",{"_index":3824,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:67",{"_index":3785,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{}}}],["window.component.ts:68",{"_index":3832,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:69",{"_index":3826,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:70",{"_index":3825,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:71",{"_index":3784,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:72",{"_index":3829,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:74",{"_index":3823,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:75",{"_index":3830,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:76",{"_index":3828,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:77",{"_index":3808,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:79",{"_index":3781,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{}}}],["window.component.ts:81",{"_index":3819,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:83",{"_index":3778,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:87",{"_index":3779,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:91",{"_index":3777,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:99",{"_index":3820,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.event",{"_index":1339,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["windows",{"_index":1662,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["within",{"_index":762,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"index.html":{},"license.html":{}}}],["withinterceptor",{"_index":1057,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["without",{"_index":464,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"index.html":{},"license.html":{}}}],["won't",{"_index":1982,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["work",{"_index":4035,"title":{},"body":{"classes/NamespaceModel.html":{},"index.html":{},"license.html":{}}}],["worked",{"_index":1936,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["workingfields",{"_index":3030,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["works",{"_index":4640,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":4687,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":58,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["write",{"_index":1206,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["writefile",{"_index":1151,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["writefile(filecontent",{"_index":1202,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["writing",{"_index":495,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["written",{"_index":4662,"title":{},"body":{"license.html":{}}}],["wudget",{"_index":4139,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["x",{"_index":621,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["x/y",{"_index":465,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["x5b",{"_index":3936,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["x5d",{"_index":3938,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["xml",{"_index":981,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["xmlinspectionserviceurl",{"_index":4877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xmlservicespackageprefix",{"_index":903,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["xsd",{"_index":4520,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["xsrf",{"_index":59,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"miscellaneous/variables.html":{}}}],["xsrf.service",{"_index":1110,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["xsrf.service.ts",{"_index":9,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"coverage.html":{}}}],["xsrf.service.ts:19",{"_index":38,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{}}}],["xsrf.service.ts:20",{"_index":33,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{}}}],["xsrf.service.ts:32",{"_index":97,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{}}}],["xsrf.service.ts:33",{"_index":93,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{}}}],["xsrfcookiename",{"_index":838,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["xsrfdefaulttokenvalue",{"_index":839,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["xsrfheadername",{"_index":840,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["y",{"_index":1380,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["yarn",{"_index":4569,"title":{},"body":{"index.html":{}}}],["yes",{"_index":1709,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{}}}],["yoffset",{"_index":2682,"title":{},"body":{"classes/LineModel.html":{}}}],["yyyy",{"_index":4853,"title":{},"body":{"license.html":{}}}],["zero_to_one",{"_index":2094,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"miscellaneous/enumerations.html":{}}}],["zerobasedindex",{"_index":3761,"title":{},"body":{"classes/MappingUtil.html":{}}}],["zip",{"_index":2479,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["zone.js",{"_index":4510,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1051,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiHttpXsrfTokenExtractor.html":{"url":"injectables/ApiHttpXsrfTokenExtractor.html","title":"injectable - ApiHttpXsrfTokenExtractor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiHttpXsrfTokenExtractor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts\n        \n\n            \n                Description\n            \n            \n                Override the stock @angular HTTP package token extractor to not fetch cookies from\nthe Window document.  Return a default token value instead.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cfg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpXsrfTokenExtractor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ConfigModel } from '../models/config.model';\n\n/**\n * Override the stock @angular HTTP package token extractor to *not* fetch cookies from\n * the Window document.  Return a default token value instead.\n */\n@Injectable()\nexport class ApiHttpXsrfTokenExtractor implements HttpXsrfTokenExtractor {\n  private cfg = ConfigModel.getConfig();\n  getToken(): string {\n    return this.cfg.initCfg.xsrfDefaultTokenValue;\n  }\n}\n\n/**\n * Override the stock @angular HTTP package request interceptor method to wrap the request\n * with default XSRF header name and token value.\n */\n@Injectable()\nexport class ApiXsrfInterceptor implements HttpInterceptor {\n\n  private cfg = ConfigModel.getConfig();\n  intercept(httpRequest: HttpRequest, next: HttpHandler): Observable> {\n    /*\n      ADM doesn't need/use cookies so we'll use the default token value initialized from the environment when\n      adding the XSRF header to HTTP requests.  This will avoid the need to read cookies from local storage.\n    */\n    if (this.cfg.initCfg.xsrfHeaderName) {\n      // const token = this.tokenExtractor.getToken() || this.cfg.initCfg.xsrfDefaultTokenValue;\n      const token = this.cfg.initCfg.xsrfDefaultTokenValue;\n      const headerName = this.cfg.initCfg.xsrfHeaderName;\n\n      if (!httpRequest.headers.has(headerName)) {\n        httpRequest = httpRequest.clone({ headers: httpRequest.headers.set(headerName, token) });\n      }\n    }\n    return next.handle(httpRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ApiXsrfInterceptor.html":{"url":"interceptors/ApiXsrfInterceptor.html","title":"interceptor - ApiXsrfInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ApiXsrfInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts\n        \n\n            \n                Description\n            \n            \n                Override the stock @angular HTTP package request interceptor method to wrap the request\nwith default XSRF header name and token value.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cfg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(httpRequest: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    httpRequest\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts:32\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpXsrfTokenExtractor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ConfigModel } from '../models/config.model';\n\n/**\n * Override the stock @angular HTTP package token extractor to *not* fetch cookies from\n * the Window document.  Return a default token value instead.\n */\n@Injectable()\nexport class ApiHttpXsrfTokenExtractor implements HttpXsrfTokenExtractor {\n  private cfg = ConfigModel.getConfig();\n  getToken(): string {\n    return this.cfg.initCfg.xsrfDefaultTokenValue;\n  }\n}\n\n/**\n * Override the stock @angular HTTP package request interceptor method to wrap the request\n * with default XSRF header name and token value.\n */\n@Injectable()\nexport class ApiXsrfInterceptor implements HttpInterceptor {\n\n  private cfg = ConfigModel.getConfig();\n  intercept(httpRequest: HttpRequest, next: HttpHandler): Observable> {\n    /*\n      ADM doesn't need/use cookies so we'll use the default token value initialized from the environment when\n      adding the XSRF header to HTTP requests.  This will avoid the need to read cookies from local storage.\n    */\n    if (this.cfg.initCfg.xsrfHeaderName) {\n      // const token = this.tokenExtractor.getToken() || this.cfg.initCfg.xsrfDefaultTokenValue;\n      const token = this.cfg.initCfg.xsrfDefaultTokenValue;\n      const headerName = this.cfg.initCfg.xsrfHeaderName;\n\n      if (!httpRequest.headers.has(headerName)) {\n        httpRequest = httpRequest.clone({ headers: httpRequest.headers.set(headerName, token) });\n      }\n    }\n    return next.handle(httpRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atlasmap-dev-root\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'atlasmap-dev-root',\n  template: '',\n})\n\nexport class AppComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {DataMapperAppExampleHostComponent} from './lib/atlasmap-data-mapper/components/data-mapper-example-host.component';\n\nconst routes: Routes = [\n  {\n    path: 'mapping-id/:id',\n    component: DataMapperAppExampleHostComponent\n  },\n  {\n    path: '',\n    component: DataMapperAppExampleHostComponent\n  }\n];\n\nexport const  routerModuleForRoot = RouterModule.forRoot(routes);\n@NgModule({\n  imports: [\n    routerModuleForRoot\n  ],\n  exports: [\n    RouterModule\n  ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClassNameComponent.html":{"url":"components/ClassNameComponent.html","title":"component - ClassNameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ClassNameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                class-name\n            \n\n\n\n\n            \n                templateUrl\n                ./class-name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                docDef\n                            \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                isSource\n                            \n                            \n                                userClassName\n                            \n                            \n                                userCollectionClassName\n                            \n                            \n                                userCollectionType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                collectionTypeSelectionChanged\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                parentSelectionChanged\n                            \n                            \n                                valueExistsOnCreation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:37\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            collectionTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncollectionTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(field: Field, docDef: DocumentDefinition, isAdd: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docDef\n                                    \n                                                DocumentDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isAdd\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parentSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nparentSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueExistsOnCreation\n                        \n                        \n                    \n                \n            \n            \n                \nvalueExistsOnCreation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('class')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userClassName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userCollectionClassName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userCollectionType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CollectionType.NONE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { DocumentDefinition } from '../../models/document-definition.model';\nimport { Field } from '../../models/field.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { ModalWindowValidator } from '../modal/modal-window.component';\nimport { CollectionType } from '../../common/config.types';\n\n@Component({\n  selector: 'class-name',\n  templateUrl: './class-name.component.html',\n})\n\nexport class ClassNameComponent implements ModalWindowValidator {\n  cfg: ConfigModel = ConfigModel.getConfig();\n  isSource: boolean;\n  userClassName: string = null;\n  userCollectionType = CollectionType.NONE;\n  userCollectionClassName = null;\n  docDef: DocumentDefinition = null;\n  @ViewChild('class') private focusEl: ElementRef;\n\n  constructor() {\n  }\n\n  initialize(field: Field, docDef: DocumentDefinition, isAdd: boolean): void {\n    this.docDef = docDef;\n    this.userClassName = '';\n  }\n\n  parentSelectionChanged(event: any): void {\n  }\n\n  isDataValid(): boolean {\n    return this.cfg.errorService.isRequiredFieldValid(this.userClassName, 'Class name');\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n  valueExistsOnCreation(): boolean {\n    return false;\n  }\n\n  collectionTypeSelectionChanged(event: any) {\n      this.userCollectionType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n}\n\n    \n\n    \n        \n\n  \n    Class package name:\n      \n    \n    Collection Type:\n      \n        NONE\n        ARRAY\n        LIST\n        Map -->\n      \n    \n    Collection class name:\n      \n    \n    \n      Class name has already been established.\n          \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Class package name:              Collection Type:              NONE        ARRAY        LIST        Map -->              Collection class name:                    Class name has already been established.            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ClassNameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CollapsableHeaderComponent.html":{"url":"components/CollapsableHeaderComponent.html","title":"component - CollapsableHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CollapsableHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/collapsable-header.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                collapsable-header\n            \n\n\n\n\n            \n                templateUrl\n                ./collapsable-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCSSClass\n                            \n                            \n                                handleMouseClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                collapsed\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        collapsed\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/collapsable-header.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/collapsable-header.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/collapsable-header.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseClick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/collapsable-header.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'collapsable-header',\n  templateUrl: './collapsable-header.component.html',\n})\n\nexport class CollapsableHeaderComponent {\n  @Input() title: string;\n  @Input() collapsed = false;\n\n  handleMouseClick(event: MouseEvent): void {\n    this.collapsed = !this.collapsed;\n  }\n\n  getCSSClass() {\n    return 'arrow fa fa-angle-' + (this.collapsed ? 'right' : 'down');\n  }\n}\n\n    \n\n    \n        \n  \n    {{ title }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ title }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'CollapsableHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConstantFieldEditComponent.html":{"url":"components/ConstantFieldEditComponent.html","title":"component - ConstantFieldEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConstantFieldEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                constant-field-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./constant-field-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                docDef\n                            \n                            \n                                field\n                            \n                            \n                                fieldMode\n                            \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                isClosing\n                            \n                            \n                                modalWindowComponent\n                            \n                            \n                                valueType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getField\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                valueExistsOnCreation\n                            \n                            \n                                valueTypeSelectionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getField\n                        \n                        \n                    \n                \n            \n            \n                \ngetField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Field\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(field: Field, docDef: DocumentDefinition, mwc: ModalWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docDef\n                                    \n                                                DocumentDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mwc\n                                    \n                                                ModalWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueExistsOnCreation\n                        \n                        \n                    \n                \n            \n            \n                \nvalueExistsOnCreation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:78\n                \n            \n\n\n            \n                \n                    Return true and disable the save button if the constant field already exists on creation, return false\nand enable the save button otherwise.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nvalueTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                    \n                        \n                            Default value : new Field()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('value')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isClosing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalWindowComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalWindowComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { DocumentType, FieldMode } from '../../common/config.types';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { DocumentDefinition } from '../../models/document-definition.model';\nimport { Field } from '../../models/field.model';\nimport { ModalWindowComponent, ModalWindowValidator } from '../modal/modal-window.component';\n\n@Component({\n  selector: 'constant-field-edit',\n  templateUrl: './constant-field-edit.component.html',\n})\n\nexport class ConstantFieldEditComponent implements ModalWindowValidator {\n  field: Field = new Field();\n  fieldMode: FieldMode;\n  valueType: any = 'STRING';\n  docDef: DocumentDefinition;\n  modalWindowComponent: ModalWindowComponent;\n  isClosing: boolean;\n  @ViewChild('value') private focusEl: ElementRef;\n\n  initialize(field: Field, docDef: DocumentDefinition, mwc: ModalWindowComponent): void {\n    if (field != null) {\n      this.valueType = field.type;\n      this.fieldMode = FieldMode.EDIT;\n    } else { this.fieldMode = FieldMode.CREATE; }\n\n    this.field = field == null ? new Field() : field.copy();\n    this.docDef = docDef;\n    this.modalWindowComponent = mwc;\n    this.isClosing = false;\n  }\n\n  valueTypeSelectionChanged(event: any): void {\n    this.valueType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  getField(): Field {\n    this.field.displayName = this.field.value;\n    this.field.name = this.field.value;\n    this.field.path = this.field.value;\n    this.field.type = this.valueType;\n    this.field.userCreated = true;\n    this.field.docDef = this.docDef;\n    return this.field;\n  }\n\n  isDataValid(): boolean {\n    return ConfigModel.getConfig().errorService.isRequiredFieldValid(this.field.value, 'Value');\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n  /**\n   * Return true and disable the save button if the constant field already exists on creation, return false\n   * and enable the save button otherwise.\n   */\n  valueExistsOnCreation(): boolean {\n    if (!this.modalWindowComponent || !this.modalWindowComponent.visible) {\n      return false;\n    }\n    if (this.isClosing) {\n      return false;\n    }\n    if (this.fieldMode === FieldMode.CREATE && this.docDef != null &&\n        this.docDef.fieldExists(this.getField(), DocumentType.CONSTANT)) {\n      this.modalWindowComponent.confirmButtonDisabled = true;\n      return true;\n    }\n    this.modalWindowComponent.confirmButtonDisabled = false;\n    return false;\n  }\n}\n\n    \n\n    \n        \n  \n    Value:\n    \n    \n      Constant value already exists.\n    \n  \n  \n    Value Type:\n    \n      Boolean\n      Big Integer\n      Byte\n      ByteArray\n      Char\n      Complex\n      Decimal\n      Double\n      Float\n      Integer\n      Long\n      Short\n      String\n      Time\n      Date\n      DateTime\n      DateTZ\n      TimeTZ\n      DateTimeTZ\n      Unsigned Byte\n      Unsigned Integer\n      Unsigned Long\n      Unsigned Short\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Value:              Constant value already exists.            Value Type:          Boolean      Big Integer      Byte      ByteArray      Char      Complex      Decimal      Double      Float      Integer      Long      Short      String      Time      Date      DateTime      DateTZ      TimeTZ      DateTimeTZ      Unsigned Byte      Unsigned Integer      Unsigned Long      Unsigned Short      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConstantFieldEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataMapperAppComponent.html":{"url":"components/DataMapperAppComponent.html","title":"component - DataMapperAppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DataMapperAppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n            \n                moduleId\n                module.id\n            \n\n\n\n\n            \n                selector\n                data-mapper\n            \n\n            \n                styleUrls\n                data-mapper-app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./data-mapper-app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                detector\n                            \n                            \n                                docDefInput\n                            \n                            \n                                docDefOutput\n                            \n                            \n                                errorPanel\n                            \n                            \n                                hasSourceDoc\n                            \n                            \n                                hasTargetDoc\n                            \n                            \n                                    Private\n                                initializationStatusChangedSubscription\n                            \n                            \n                                lineMachine\n                            \n                            \n                                loadingStatus\n                            \n                            \n                                mappingDetailComponent\n                            \n                            \n                                modalErrorWindow\n                            \n                            \n                                modalWindow\n                            \n                            \n                                    Private\n                                systemInitializedSubscription\n                            \n                            \n                                toolbarComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfig\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateFromConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(detector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        detector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ConfigModel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateFromConfig\n                        \n                        \n                    \n                \n            \n            \n                \nupdateFromConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            detector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDefInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinitionComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('docDefInput')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDefOutput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinitionComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('docDefOutput')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorPanel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataMapperErrorComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('errorPanel')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasSourceDoc\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasTargetDoc\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initializationStatusChangedSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lineMachine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LineMachineComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('lineMachine')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Loading.'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mappingDetailComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingDetailComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('mappingDetailComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalErrorWindow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalErrorWindowComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('modalErrorWindow')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalWindow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalWindowComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('modalWindow')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            systemInitializedSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolbarComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ToolbarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('toolbarComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, ViewChild, ViewEncapsulation, ChangeDetectorRef } from '@angular/core';\nimport { ConfigModel } from '../../models/config.model';\n\nimport { ToolbarComponent } from '../toolbar/toolbar.component';\nimport { DataMapperErrorComponent } from './data-mapper-error.component';\nimport { LineMachineComponent } from './line-machine.component';\nimport { ModalErrorWindowComponent } from '../modal/modal-error-window.component';\nimport { ModalWindowComponent } from '../modal/modal-window.component';\n\nimport { DocumentDefinitionComponent } from '../document/document-definition.component';\n\nimport { MappingDetailComponent } from '../mapping-detail/mapping-detail.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'data-mapper',\n  moduleId: module.id,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './data-mapper-app.component.html',\n  styleUrls: ['data-mapper-app.component.css'],\n})\n\nexport class DataMapperAppComponent implements OnInit, OnDestroy {\n\n  @ViewChild('lineMachine') lineMachine: LineMachineComponent;\n  @ViewChild('errorPanel') errorPanel: DataMapperErrorComponent;\n  @ViewChild('modalErrorWindow') modalErrorWindow: ModalErrorWindowComponent;\n  @ViewChild('modalWindow') modalWindow: ModalWindowComponent;\n  @ViewChild('docDefInput') docDefInput: DocumentDefinitionComponent;\n  @ViewChild('docDefOutput') docDefOutput: DocumentDefinitionComponent;\n  @ViewChild('mappingDetailComponent') mappingDetailComponent: MappingDetailComponent;\n  @ViewChild('toolbarComponent') toolbarComponent: ToolbarComponent;\n\n  loadingStatus = 'Loading.';\n  hasSourceDoc = false;\n  hasTargetDoc = false;\n\n  private systemInitializedSubscription: Subscription;\n  private initializationStatusChangedSubscription: Subscription;\n\n  constructor(public detector: ChangeDetectorRef) { }\n\n  getConfig(): ConfigModel {\n    return ConfigModel.getConfig();\n  }\n\n  ngOnInit(): void {\n    this.systemInitializedSubscription\n       = this.getConfig().initializationService.systemInitialized$.subscribe(() => {\n      this.updateFromConfig();\n    });\n\n    this.initializationStatusChangedSubscription\n      = this.getConfig().initializationService.initializationStatusChanged$.subscribe(() => {\n      this.loadingStatus = this.getConfig().initCfg.loadingStatus;\n      setTimeout(() => {\n        this.detector.detectChanges();\n      }, 10);\n    });\n    this.hasSourceDoc = this.getConfig().sourceDocs && this.getConfig().sourceDocs.length > 0;\n    this.hasTargetDoc = this.getConfig().targetDocs && this.getConfig().targetDocs.length > 0;\n  }\n\n  ngOnDestroy() {\n    this.systemInitializedSubscription.unsubscribe();\n    this.initializationStatusChangedSubscription.unsubscribe();\n  }\n\n  updateFromConfig(): void {\n    // update the mapping line drawing after our fields have redrawn themselves\n    // without this, the x/y from the field dom elements is messed up / misaligned.\n    if (this.lineMachine != null) {\n      setTimeout(() => {\n        if (this.lineMachine != null) {\n          this.lineMachine.redrawLinesForMappings();\n        }\n      }, 1);\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n\n    \n      \n    \n\n    \n      \n    \n\n    \n      \n      \n    \n\n    \n      \n    \n\n    \n\n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n    \n  \n\n  \n    {{ loadingStatus }}\n    \n  \n\n\n    \n\n    \n                \n                    data-mapper-app.component.css\n                \n                /*\n    Copyright (C) 2019 Red Hat, Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\n@import '../data-mapper-base.component.css';\n@import '../document/data-mapper-document.component.css';\n@import '../mapping-detail/data-mapper-mapping-detail.component.css';\n@import '../mapping-list/data-mapper-mapping-list.component.css';\n@import '../modal/data-mapper-modal.component.css';\n@import '../toolbar/data-mapper-toolbar.component.css';\n\n/* loading screen styles */\n.dataMapperBodyHidden { visibility:hidden; position:relative; height:0px; }\n.dataMapperBody { visibility:visible; height:100%; width: 100%; position:relative; margin-left: 0px; }\n\n.DataMapperLoadingMessage { position:absolute; height:100%; top:0%; left:0%; padding-top:20%; width:100%; text-align:center; }\n.DataMapperLoadingMessage .error { color:crimson; }\n.DataMapperLoadingMessage .spinner { vertical-align:text-bottom; }\n.DataMapperLoadingMessage LABEL { vertical-align:text-top; margin-right:3px; }\n.DataMapperLoadingMessage IMG { height:12px; width:12px; vertical-align:middle; }\n\n.DataMapperUI .atlasmapNavbar { }\n.DataMapperUI .atlasmapNavbar .dropdown { position: relative; display: inline-block; }\n.DataMapperUI .atlasmapNavbar .dropdown-content a {\n  float: none;\n  color: black;\n  padding: 12px 16px;\n  text-decoration: none;\n  display: block;\n  text-align: left;\n}\n\n.DataMapperUI .atlasmapNavbar .dropdown .dropdown-content a:hover { background-color: #ddd; }\n.DataMapperUI .atlasmapNavbar A:hover { color:#0088ce; cursor:pointer; text-decoration:none; background-color: #ddd;}\n.DataMapperUI .atlasmapNavbar I.link:hover { color:rgb(54,54,54); }\n.DataMapperUI .atlasmapNavbar .dropdown:hover .dropdown-content { display: block; }\n\n.DataMapperUI .row { margin:0px; }\n.DataMapperUI .row.modalWindow { min-height:0px; }\n.DataMapperUI .row.mainDisplay { height:calc(100% - 10px); position:relative; padding-top:10px; }\n.DataMapperUI .row.mainDisplay .col-md-3 { padding:0px; height:100%; width:30%; }\n.DataMapperUI .row.mainDisplay .col-md-9 { height:100%; padding:0; width: 70%; }\n.DataMapperUI .row.mainDisplay .col-md-9 .docDefIn { float:left; width:45%; height:100%; }\n.DataMapperUI .row.mainDisplay .col-md-9 .lineMachine { float:left; width:10%; height:100%; margin-left:-5px; margin-right:-5px; }\n.DataMapperUI .row.mainDisplay .col-md-9 .docDefOut { float:left; width:45%; height:100%; }\n\n/* constant-field-edit, field-edit, property-field-edit */\n.DataMapperUI .DataMapperEditComponent INPUT, .DataMapperEditComponent .form-group SELECT { width:300px; }\n.DataMapperUI .DataMapperEditComponent .form-group TEXTAREA { margin:auto; }\n.DataMapperUI .DataMapperEditComponent .fieldDocDefName { font-style:italic; }\n\n/* data-mapper-error */\n.DataMapperUI .DataMapperErrorComponent {\n  display: block;\n  box-sizing: border-box;\n  border: 1px;\n  margin-top: 8px;\n  height: 54px;\n  position: fixed;\n  margin-bottom: 8px;\n  overflow: hidden;\n  overflow-x: hidden;\n  width: 40%;\n}\n\n/* data-mapper-error */\n.DataMapperUI .DataMapperErrorComponent {\n  display: block;\n  box-sizing: border-box;\n  border: 1px;\n  margin-top: 8px;\n  height: 54px;\n  position: fixed;\n  margin-bottom: 8px;\n  overflow: hidden;\n  overflow-x: hidden;\n  width: 40%;\n}\n\n/* line-machine */\n.DataMapperUI .LineMachineComponent { height:100%; margin-top:6%; }\n.DataMapperUI .LineMachineComponent line:hover { cursor:pointer; }\n.DataMapperUI .LineMachineComponent svg { width:100%; height:100%; }\n\n/* namespace-edit */\n.DataMapperUI .PropertyEditFieldComponent LABEL { width:105px; }\n.DataMapperUI .PropertyEditFieldComponent INPUT {  width:300px; }\n.DataMapperUI .PropertyEditFieldComponent .targetType INPUT { width:20px; vertical-align:left; }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                              {{ loadingStatus }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DataMapperAppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataMapperAppExampleHostComponent.html":{"url":"components/DataMapperAppExampleHostComponent.html","title":"component - DataMapperAppExampleHostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DataMapperAppExampleHostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                MappingManagementService\n                                ErrorHandlerService\n                                DocumentManagementService\n                                MappingIdentifierService\n                \n            \n\n\n            \n                selector\n                data-mapper-example-host\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataMapperComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(initializationService: InitializationService, mappingIdentifierService: MappingIdentifierService)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initializationService\n                                                  \n                                                        \n                                                                        InitializationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mappingIdentifierService\n                                                  \n                                                        \n                                                                        MappingIdentifierService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataMapperComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataMapperAppComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dataMapperComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, OnInit, OnDestroy } from '@angular/core';\nimport { ConfigModel } from '../models/config.model';\n\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { DocumentManagementService } from '../services/document-management.service';\nimport { MappingManagementService } from '../services/mapping-management.service';\nimport { InitializationService } from '../services/initialization.service';\n\nimport { DataMapperAppComponent } from './app/data-mapper-app.component';\nimport { environment } from '../../../../environments/environment';\nimport { Examples } from '../models/examples';\nimport {MappingIdentifierService} from '../services/mapping-identifier.service';\n\n@Component({\n  selector: 'data-mapper-example-host',\n  template: '',\n  providers: [MappingManagementService, ErrorHandlerService, DocumentManagementService, MappingIdentifierService],\n})\n\nexport class DataMapperAppExampleHostComponent implements OnInit {\n\n  @ViewChild('dataMapperComponent')\n  dataMapperComponent: DataMapperAppComponent;\n\n  constructor(private initializationService: InitializationService, private mappingIdentifierService: MappingIdentifierService) { }\n\n  ngOnInit() {\n    // initialize config information before initializing services\n    const c: ConfigModel = this.initializationService.cfg;\n    //\n    c.mappingDefinitionId = this.mappingIdentifierService.getCurrentMappingDefinitionId();\n\n    // store references to our services in our config model\n\n    // initialize base urls for our service calls\n    c.initCfg.baseJavaInspectionServiceUrl = environment.backendUrls.javaInspectionServiceUrl;\n    c.initCfg.baseXMLInspectionServiceUrl = environment.backendUrls.xmlInspectionServiceUrl;\n    c.initCfg.baseJSONInspectionServiceUrl = environment.backendUrls.jsonInspectionServiceUrl;\n    c.initCfg.baseMappingServiceUrl = environment.backendUrls.atlasServiceUrl;\n\n    if (environment.xsrf) {\n      c.initCfg.xsrfHeaderName = environment.xsrf.headerName;\n      c.initCfg.xsrfCookieName = environment.xsrf.cookieName;\n      c.initCfg.xsrfDefaultTokenValue = environment.xsrf.defaultTokenValue;\n    }\n\n    // initialize data for our class path service call\n    // note that quotes, newlines, and tabs are escaped\n    c.initCfg.pomPayload = Examples.pom;\n    c.initCfg.classPathFetchTimeoutInMilliseconds = 30000;\n    // if classPath is specified, maven call to resolve pom will be skipped\n    c.initCfg.classPath = null;\n\n    // enable mapping preview mode for standalone\n    c.initCfg.disableMappingPreviewMode = false;\n\n    // enable the navigation bar and import/export for stand-alone\n    c.initCfg.disableNavbar = false;\n\n    // initialize system\n    this.initializationService.initialize();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DataMapperAppExampleHostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataMapperErrorComponent.html":{"url":"components/DataMapperErrorComponent.html","title":"component - DataMapperErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DataMapperErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                data-mapper-error\n            \n\n\n\n\n            \n                templateUrl\n                ./data-mapper-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                    Private\n                                elem\n                            \n                            \n                                    Private\n                                errors\n                            \n                            \n                                    Private\n                                errorSubscription\n                            \n                            \n                                isOpen\n                            \n                            \n                                    Private\n                                mouseEventTimer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                errorServiceRequired\n                            \n                            \n                                getErrors\n                            \n                            \n                                getFirstError\n                            \n                            \n                                getFirstWarning\n                            \n                            \n                                getInfos\n                            \n                            \n                                getWarnings\n                            \n                            \n                                handleAlertClose\n                            \n                            \n                                handleMouseEnter\n                            \n                            \n                                handleMouseLeave\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                showActiveErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorService\n                            \n                            \n                                modalErrorWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorService\n                    \n                \n                \n                    \n                        Type :         ErrorHandlerService\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalErrorWindow\n                    \n                \n                \n                    \n                        Type :         ModalErrorWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:33\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            errorServiceRequired\n                        \n                        \n                    \n                \n            \n            \n                \nerrorServiceRequired()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:59\n                \n            \n\n\n            \n                \n                    Return true if an error window is necessary, false otherwise.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFirstError\n                        \n                        \n                    \n                \n            \n            \n                \ngetFirstError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:122\n                \n            \n\n\n            \n                \n                    The fixed error window only needs to show one error.  The full collection of errors is\navailable from the error modal window.\n\n\n                    \n                        Returns :         ErrorInfo\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFirstWarning\n                        \n                        \n                    \n                \n            \n            \n                \ngetFirstWarning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:130\n                \n            \n\n\n            \n                \n                    The fixed error window only needs to show one warning.  The full collection of warnings is\navailable from the error modal window.\n\n\n                    \n                        Returns :         ErrorInfo\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInfos\n                        \n                        \n                    \n                \n            \n            \n                \ngetInfos()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWarnings\n                        \n                        \n                    \n                \n            \n            \n                \ngetWarnings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleAlertClose\n                        \n                        \n                    \n                \n            \n            \n                \nhandleAlertClose(e: ErrorInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                ErrorInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseEnter\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseEnter(evt1: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:87\n                \n            \n\n\n            \n                \n                    Handle the event of a user mousing over the error window.  If they stay within the window\nfor a half-second then the active errors modal will show all of the errors/ warnings.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt1\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseLeave\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseLeave(evt1: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:102\n                \n            \n\n\n            \n                \n                    Handle the event of a user mousing out of the error window.  Disarm the event timer if that case.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt1\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            showActiveErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showActiveErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:112\n                \n            \n\n\n            \n                \n                    Show all errors/ warnings in a separate modal window.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            elem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorInfo[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mouseEventTimer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnDestroy } from '@angular/core';\n\nimport { ModalErrorWindowComponent } from '../modal/modal-error-window.component';\n\nimport { ErrorInfo, ErrorLevel } from '../../models/error.model';\nimport { ErrorHandlerService } from '../../services/error-handler.service';\nimport { ConfigModel } from '../../models/config.model';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'data-mapper-error',\n  templateUrl: './data-mapper-error.component.html',\n})\n\nexport class DataMapperErrorComponent implements OnInit, OnDestroy {\n  @Input() errorService: ErrorHandlerService;\n  @Input() modalErrorWindow: ModalErrorWindowComponent;\n\n  isOpen = true;\n  cfg: ConfigModel = null;\n\n  private elem = null;\n  private mouseEventTimer = null;\n  private errors: ErrorInfo[] = [];\n  private errorSubscription: Subscription;\n\n  ngOnInit() {\n    this.cfg = ConfigModel.getConfig();\n    this.errorSubscription = this.errorService.subscribe((errors: ErrorInfo[]) => {\n      this.errors = errors;\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.errorSubscription) {\n      this.errorSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Return true if an error window is necessary, false otherwise.\n   */\n  errorServiceRequired(): boolean {\n    return (this.errorService\n      && (ErrorHandlerService.filterWith(this.errors, this.cfg.mappings ? this.cfg.mappings.activeMapping : null).length > 0));\n  }\n\n  getErrors(): ErrorInfo[] {\n    return ErrorHandlerService.filterWith(this.errors, this.cfg.mappings.activeMapping, ErrorLevel.ERROR);\n  }\n\n  getWarnings(): ErrorInfo[] {\n    return ErrorHandlerService.filterWith(this.errors, this.cfg.mappings.activeMapping, ErrorLevel.WARN);\n  }\n\n  getInfos(): ErrorInfo[] {\n    return ErrorHandlerService.filterWith(this.errors, this.cfg.mappings.activeMapping, ErrorLevel.INFO);\n  }\n\n  handleAlertClose(e: ErrorInfo): void {\n    this.isOpen = true;\n    this.errorService.removeError(e.identifier, e.scope);\n  }\n\n  /**\n   * Handle the event of a user mousing over the error window.  If they stay within the window\n   * for a half-second then the active errors modal will show all of the errors/ warnings.\n   *\n   * @param evt1\n   */\n  handleMouseEnter(evt1: MouseEvent): void {\n    this.mouseEventTimer =  setTimeout(() => {\n        if (this.elem != null) {\n            evt1.stopPropagation();\n            evt1.preventDefault();\n          }\n      this.showActiveErrors();\n    }, 500);\n  }\n\n  /**\n   * Handle the event of a user mousing out of the error window.  Disarm the event timer if that case.\n   *\n   * @param evt1\n   */\n  handleMouseLeave(evt1: MouseEvent): void {\n    if (this.mouseEventTimer) {\n      clearTimeout(this.mouseEventTimer);\n    }\n    this.mouseEventTimer = null;\n  }\n\n  /**\n   * Show all errors/ warnings in a separate modal window.\n   */\n  private showActiveErrors(): void {\n    this.modalErrorWindow.reset();\n    this.modalErrorWindow.setErrors(ErrorHandlerService.filterWith(this.errors, this.cfg.mappings.activeMapping));\n    this.modalErrorWindow.show();\n  }\n\n  /**\n   * The fixed error window only needs to show one error.  The full collection of errors is\n   * available from the error modal window.\n   */\n  getFirstError(): ErrorInfo {\n    return this.getErrors()[0];\n  }\n\n  /**\n   * The fixed error window only needs to show one warning.  The full collection of warnings is\n   * available from the error modal window.\n   */\n  getFirstWarning(): ErrorInfo {\n    return this.getWarnings()[0];\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n    {{ i.message }}\n  \n\n  \n    \n    {{ getFirstError().message }}\n  \n\n  \n    \n    {{ getFirstWarning().message }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ i.message }}            {{ getFirstError().message }}            {{ getFirstWarning().message }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DataMapperErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataMapperInitializationModel.html":{"url":"classes/DataMapperInitializationModel.html","title":"class - DataMapperInitializationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataMapperInitializationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/config.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                admHttpTimeout\n                            \n                            \n                                baseJavaInspectionServiceUrl\n                            \n                            \n                                baseJSONInspectionServiceUrl\n                            \n                            \n                                baseMappingServiceUrl\n                            \n                            \n                                baseXMLInspectionServiceUrl\n                            \n                            \n                                classNameBlacklist\n                            \n                            \n                                classPath\n                            \n                            \n                                classPathFetchTimeoutInMilliseconds\n                            \n                            \n                                dataMapperVersion\n                            \n                            \n                                disableMappingPreviewMode\n                            \n                            \n                                disableNavbar\n                            \n                            \n                                disablePrivateOnlyFields\n                            \n                            \n                                disableProtectedOnlyFields\n                            \n                            \n                                disablePublicGetterSetterFields\n                            \n                            \n                                disablePublicOnlyFields\n                            \n                            \n                                fieldNameBlacklist\n                            \n                            \n                                initializationErrorOccurred\n                            \n                            \n                                initialized\n                            \n                            \n                                loadingStatus\n                            \n                            \n                                mappingInitialized\n                            \n                            \n                                pomPayload\n                            \n                            \n                                xsrfCookieName\n                            \n                            \n                                xsrfDefaultTokenValue\n                            \n                            \n                                xsrfHeaderName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:69\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admHttpTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 30000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseJavaInspectionServiceUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseJSONInspectionServiceUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseMappingServiceUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseXMLInspectionServiceUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            classNameBlacklist\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            classPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            classPathFetchTimeoutInMilliseconds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 30000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataMapperVersion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0.9.2017.07.28'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableMappingPreviewMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableNavbar\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disablePrivateOnlyFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableProtectedOnlyFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disablePublicGetterSetterFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disablePublicOnlyFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldNameBlacklist\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initializationErrorOccurred\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Loading.'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mappingInitialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pomPayload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xsrfCookieName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xsrfDefaultTokenValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xsrfHeaderName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\nimport { NGXLogger, NgxLoggerLevel } from 'ngx-logger';\nimport { environment } from '../../../../environments/environment';\nimport { MappingDefinition } from './mapping-definition.model';\nimport { DocumentDefinition } from './document-definition.model';\n\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { DocumentManagementService } from '../services/document-management.service';\nimport { MappingManagementService } from '../services/mapping-management.service';\nimport { InitializationService } from '../services/initialization.service';\nimport { ErrorInfo } from '../models/error.model';\n\nimport { DocumentType, InspectionType, CollectionType } from '../common/config.types';\nimport { FieldActionService } from '../services/field-action.service';\nimport { FileManagementService } from '../services/file-management.service';\n\nexport class DataMapperInitializationModel {\n  dataMapperVersion = '0.9.2017.07.28';\n  initialized = false;\n  loadingStatus = 'Loading.';\n  admHttpTimeout = 30000;  // 30 seconds\n  initializationErrorOccurred = false;\n\n  baseJavaInspectionServiceUrl: string;\n  baseXMLInspectionServiceUrl: string;\n  baseJSONInspectionServiceUrl: string;\n  baseMappingServiceUrl: string;\n\n  xsrfHeaderName: string;\n  xsrfCookieName: string;\n  xsrfDefaultTokenValue: string;\n\n  /* class path fetching configuration */\n  classPathFetchTimeoutInMilliseconds = 30000;\n  // if classPath is specified, maven call to resolve pom will be skipped\n  pomPayload: string;\n\n  classPath: string;\n\n  /* inspection service filtering flags */\n  fieldNameBlacklist: string[] = [];\n  classNameBlacklist: string[] = [];\n  disablePrivateOnlyFields = false;\n  disableProtectedOnlyFields = false;\n  disablePublicOnlyFields = false;\n  disablePublicGetterSetterFields = false;\n\n  disableMappingPreviewMode = false;\n\n  /* enable the navigation bar and import/export */\n  disableNavbar = true;\n\n  mappingInitialized = false;\n\n  constructor() {\n    if (environment.xsrf) {\n      this.xsrfHeaderName = environment.xsrf.headerName;\n      this.xsrfCookieName = environment.xsrf.cookieName;\n      this.xsrfDefaultTokenValue = environment.xsrf.defaultTokenValue;\n    }\n  }\n\n}\n\nexport class DocumentInitializationModel {\n  id: string;\n  type: DocumentType;\n  name: string;\n  description: string;\n  isSource: boolean;\n  showFields = true;\n  inspectionType: InspectionType;\n  inspectionSource: string;\n  inspectionResult: string;\n  selectedRoot: string;\n  collectionType: CollectionType;\n  collectionClassName: string;\n}\n\nexport class ConfigModel {\n  static mappingServicesPackagePrefix = 'io.atlasmap.v2';\n  static javaServicesPackagePrefix = 'io.atlasmap.java.v2';\n  static jsonServicesPackagePrefix = 'io.atlasmap.json.v2';\n  static xmlServicesPackagePrefix = 'io.atlasmap.xml.v2';\n  private static cfg: ConfigModel = new ConfigModel();\n\n  initCfg: DataMapperInitializationModel = new DataMapperInitializationModel;\n\n  /* current ui state config */\n  showMappingDetailTray = false;\n  showMappingTable = false;\n  showNamespaceTable = false;\n  showLinesAlways = true;\n  showTypes = false;\n  showMappedFields = true;\n  showUnmappedFields = true;\n  _showMappingPreview = false;\n  currentDraggedField: any = null;\n\n  documentService: DocumentManagementService;\n  mappingService: MappingManagementService;\n  errorService: ErrorHandlerService;\n  initializationService: InitializationService;\n  fieldActionService: FieldActionService;\n  fileService: FileManagementService;\n\n  sourceDocs: DocumentDefinition[] = [];\n  targetDocs: DocumentDefinition[] = [];\n  propertyDoc: DocumentDefinition = new DocumentDefinition();\n  constantDoc: DocumentDefinition = new DocumentDefinition();\n  mappingFiles: string[] = [];\n\n  mappings: MappingDefinition = null;\n\n  preloadedMappingJson: string;\n  preloadedFieldActionMetadata: any;\n\n  // declare in initCfg instead?\n  mappingDefinitionId: number;\n\n  logger: NGXLogger;\n\n  constructor() {\n    this.propertyDoc.type = DocumentType.PROPERTY;\n    this.propertyDoc.name = 'Properties';\n    this.propertyDoc.isSource = true;\n    this.propertyDoc.showFields = false;\n    this.constantDoc.type = DocumentType.CONSTANT;\n    this.constantDoc.name = 'Constants';\n    this.constantDoc.isSource = true;\n    this.constantDoc.showFields = false;\n  }\n\n  static getConfig(): ConfigModel {\n    return ConfigModel.cfg;\n  }\n\n  static setConfig(cfg: ConfigModel): void {\n    ConfigModel.cfg = cfg;\n  }\n\n  set showMappingPreview(show: boolean) {\n    if (show && !this._showMappingPreview) {\n      this.mappingService.enableMappingPreview();\n    } else if (!show && this._showMappingPreview) {\n      this.mappingService.disableMappingPreview();\n    }\n    this._showMappingPreview = show;\n  }\n\n  get showMappingPreview(): boolean {\n    return this._showMappingPreview;\n  }\n\n  isDebugEnabled(): boolean {\n    return [NgxLoggerLevel.DEBUG, NgxLoggerLevel.TRACE].includes(this.logger.getConfigSnapshot().level);\n  }\n\n  isTraceEnabled(): boolean {\n    return this.logger.getConfigSnapshot().level === NgxLoggerLevel.TRACE;\n  }\n\n  addDocument(docInitModel: DocumentInitializationModel): DocumentDefinition {\n    const docDef: DocumentDefinition = new DocumentDefinition();\n    docDef.initModel = docInitModel;\n    docDef.id = docInitModel.id;\n    docDef.type = docInitModel.type;\n    docDef.name = docInitModel.name;\n    docDef.description = docInitModel.description;\n    docDef.isSource = docInitModel.isSource;\n    docDef.showFields = docInitModel.showFields;\n    docDef.inspectionType = docInitModel.inspectionType;\n    docDef.inspectionSource = docInitModel.inspectionSource;\n    docDef.inspectionResult = docInitModel.inspectionResult;\n    docDef.selectedRoot = docInitModel.selectedRoot;\n\n    if (docDef.type === DocumentType.XSD) {\n      docDef.uri = 'atlas:' + 'xml' + ':' + docDef.id;\n    } else if (docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri = 'atlas:' + 'java' + ':' + docDef.id;\n    } else {\n      docDef.uri = 'atlas:' + docDef.type.toLowerCase() + ':' + docDef.id;\n    }\n\n    if (docDef.type === DocumentType.JAVA || docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri += '?className=' + docDef.inspectionSource;\n      if (docInitModel.collectionType && docInitModel.collectionType !== CollectionType.NONE) {\n        docDef.uri += '&collectionType=' + docInitModel.collectionType;\n        if (docInitModel.collectionClassName) {\n          docDef.uri += '&collectionClassName=' + docInitModel.collectionClassName;\n        }\n      }\n    }\n\n    if (docInitModel.isSource) {\n      this.sourceDocs.push(docDef);\n    } else {\n      this.targetDocs.push(docDef);\n    }\n    return docDef;\n  }\n\n  addDocuments(docModels: DocumentInitializationModel[]): DocumentDefinition[] {\n    const docDefs: DocumentDefinition[] = [];\n    for (const docModel of docModels) {\n      docDefs.push(this.addDocument(docModel));\n    }\n    return docDefs;\n  }\n\n  getDocsWithoutPropertyDoc(isSource: boolean): DocumentDefinition[] {\n    return [].concat(isSource ? this.sourceDocs : this.targetDocs);\n  }\n\n  getDocs(isSource: boolean): DocumentDefinition[] {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    return isSource ? [this.propertyDoc, this.constantDoc].concat(docs) : docs;\n  }\n\n  /**\n   * Return a uri:DocumentDefinition document map for either the sources or targets panel contents.\n   *\n   * @param cfg\n   * @param isSource\n   */\n  getDocUriMap(cfg: ConfigModel, isSource: boolean): {[key: string]: DocumentDefinition} {\n    const docMap: {[key: string]: DocumentDefinition} = {};\n    for (const doc of cfg.getDocs(isSource)) {\n      docMap[doc.uri] = doc;\n    }\n    return docMap;\n  }\n\n  /**\n   * Clear source/target/mapping documents from the model.  Reset constant and property document definitions.\n   */\n  clearDocs(): void {\n    this.sourceDocs = [];\n    this.targetDocs = [];\n    this.propertyDoc.clearFields();\n    this.constantDoc.clearFields();\n    this.mappingFiles = [];\n  }\n\n  hasJavaDocuments(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isClassPathResolutionNeeded(): boolean {\n    if (this.initCfg.classPath) {\n      return false;\n    }\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA && doc.inspectionResult == null) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getDocForIdentifier(documentId: string, isSource: boolean): DocumentDefinition {\n    for (const d of this.getDocs(isSource)) {\n      if (d.id === documentId) {\n        return d;\n      }\n    }\n    return null;\n  }\n\n  getFirstXmlDoc(isSource: boolean) {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    for (const doc of docs) {\n      if (doc.type === DocumentType.XML) {\n        return doc;\n      }\n    }\n    return null;\n  }\n\n  getAllDocs(): DocumentDefinition[] {\n    return [this.propertyDoc, this.constantDoc].concat(this.sourceDocs).concat(this.targetDocs);\n  }\n\n  documentsAreLoaded(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (!doc.initialized) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataMapperModule.html":{"url":"modules/DataMapperModule.html","title":"module - DataMapperModule","body":"\n                   \n\n\n\n\n    Modules\n    DataMapperModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataMapperModule\n\n\n\ncluster_DataMapperModule_declarations\n\n\n\ncluster_DataMapperModule_imports\n\n\n\ncluster_DataMapperModule_exports\n\n\n\ncluster_DataMapperModule_providers\n\n\n\n\nClassNameComponent\n\nClassNameComponent\n\n\n\nDataMapperModule\n\nDataMapperModule\n\nDataMapperModule -->\n\nClassNameComponent->DataMapperModule\n\n\n\n\n\nCollapsableHeaderComponent\n\nCollapsableHeaderComponent\n\nDataMapperModule -->\n\nCollapsableHeaderComponent->DataMapperModule\n\n\n\n\n\nConstantFieldEditComponent\n\nConstantFieldEditComponent\n\nDataMapperModule -->\n\nConstantFieldEditComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppComponent\n\nDataMapperAppComponent\n\nDataMapperModule -->\n\nDataMapperAppComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppExampleHostComponent\n\nDataMapperAppExampleHostComponent\n\nDataMapperModule -->\n\nDataMapperAppExampleHostComponent->DataMapperModule\n\n\n\n\n\nDataMapperErrorComponent\n\nDataMapperErrorComponent\n\nDataMapperModule -->\n\nDataMapperErrorComponent->DataMapperModule\n\n\n\n\n\nDocumentDefinitionComponent\n\nDocumentDefinitionComponent\n\nDataMapperModule -->\n\nDocumentDefinitionComponent->DataMapperModule\n\n\n\n\n\nDocumentFieldDetailComponent\n\nDocumentFieldDetailComponent\n\nDataMapperModule -->\n\nDocumentFieldDetailComponent->DataMapperModule\n\n\n\n\n\nEmptyModalBodyComponent\n\nEmptyModalBodyComponent\n\nDataMapperModule -->\n\nEmptyModalBodyComponent->DataMapperModule\n\n\n\n\n\nExpressionComponent\n\nExpressionComponent\n\nDataMapperModule -->\n\nExpressionComponent->DataMapperModule\n\n\n\n\n\nFieldEditComponent\n\nFieldEditComponent\n\nDataMapperModule -->\n\nFieldEditComponent->DataMapperModule\n\n\n\n\n\nFocusDirective\n\nFocusDirective\n\nDataMapperModule -->\n\nFocusDirective->DataMapperModule\n\n\n\n\n\nLineMachineComponent\n\nLineMachineComponent\n\nDataMapperModule -->\n\nLineMachineComponent->DataMapperModule\n\n\n\n\n\nLookupTableComponent\n\nLookupTableComponent\n\nDataMapperModule -->\n\nLookupTableComponent->DataMapperModule\n\n\n\n\n\nMappingDetailComponent\n\nMappingDetailComponent\n\nDataMapperModule -->\n\nMappingDetailComponent->DataMapperModule\n\n\n\n\n\nMappingFieldActionArgumentComponent\n\nMappingFieldActionArgumentComponent\n\nDataMapperModule -->\n\nMappingFieldActionArgumentComponent->DataMapperModule\n\n\n\n\n\nMappingFieldActionComponent\n\nMappingFieldActionComponent\n\nDataMapperModule -->\n\nMappingFieldActionComponent->DataMapperModule\n\n\n\n\n\nMappingFieldContainerComponent\n\nMappingFieldContainerComponent\n\nDataMapperModule -->\n\nMappingFieldContainerComponent->DataMapperModule\n\n\n\n\n\nMappingFieldDetailComponent\n\nMappingFieldDetailComponent\n\nDataMapperModule -->\n\nMappingFieldDetailComponent->DataMapperModule\n\n\n\n\n\nMappingListComponent\n\nMappingListComponent\n\nDataMapperModule -->\n\nMappingListComponent->DataMapperModule\n\n\n\n\n\nMappingListFieldComponent\n\nMappingListFieldComponent\n\nDataMapperModule -->\n\nMappingListFieldComponent->DataMapperModule\n\n\n\n\n\nMappingSelectionComponent\n\nMappingSelectionComponent\n\nDataMapperModule -->\n\nMappingSelectionComponent->DataMapperModule\n\n\n\n\n\nMappingSelectionSectionComponent\n\nMappingSelectionSectionComponent\n\nDataMapperModule -->\n\nMappingSelectionSectionComponent->DataMapperModule\n\n\n\n\n\nModalErrorDetailComponent\n\nModalErrorDetailComponent\n\nDataMapperModule -->\n\nModalErrorDetailComponent->DataMapperModule\n\n\n\n\n\nModalErrorWindowComponent\n\nModalErrorWindowComponent\n\nDataMapperModule -->\n\nModalErrorWindowComponent->DataMapperModule\n\n\n\n\n\nModalWindowComponent\n\nModalWindowComponent\n\nDataMapperModule -->\n\nModalWindowComponent->DataMapperModule\n\n\n\n\n\nNamespaceEditComponent\n\nNamespaceEditComponent\n\nDataMapperModule -->\n\nNamespaceEditComponent->DataMapperModule\n\n\n\n\n\nNamespaceListComponent\n\nNamespaceListComponent\n\nDataMapperModule -->\n\nNamespaceListComponent->DataMapperModule\n\n\n\n\n\nPropertyFieldEditComponent\n\nPropertyFieldEditComponent\n\nDataMapperModule -->\n\nPropertyFieldEditComponent->DataMapperModule\n\n\n\n\n\nTemplateEditComponent\n\nTemplateEditComponent\n\nDataMapperModule -->\n\nTemplateEditComponent->DataMapperModule\n\n\n\n\n\nToErrorIconClassPipe\n\nToErrorIconClassPipe\n\nDataMapperModule -->\n\nToErrorIconClassPipe->DataMapperModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nDataMapperModule -->\n\nToolbarComponent->DataMapperModule\n\n\n\n\n\nTransitionSelectionComponent\n\nTransitionSelectionComponent\n\nDataMapperModule -->\n\nTransitionSelectionComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppComponent \n\nDataMapperAppComponent \n\nDataMapperAppComponent  -->\n\nDataMapperModule->DataMapperAppComponent \n\n\n\n\n\nDataMapperAppExampleHostComponent \n\nDataMapperAppExampleHostComponent \n\nDataMapperAppExampleHostComponent  -->\n\nDataMapperModule->DataMapperAppExampleHostComponent \n\n\n\nDataMapperAppExampleHostComponent  -->\n\nDataMapperModule->DataMapperAppExampleHostComponent \n\n\n\n\n\nModalErrorWindowComponent \n\nModalErrorWindowComponent \n\nModalErrorWindowComponent  -->\n\nDataMapperModule->ModalErrorWindowComponent \n\n\n\n\n\nModalWindowComponent \n\nModalWindowComponent \n\nModalWindowComponent  -->\n\nDataMapperModule->ModalWindowComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nDataMapperModule -->\n\nAppRoutingModule->DataMapperModule\n\n\n\n\n\nDocumentManagementService\n\nDocumentManagementService\n\nDataMapperModule -->\n\nDocumentManagementService->DataMapperModule\n\n\n\n\n\nErrorHandlerService\n\nErrorHandlerService\n\nDataMapperModule -->\n\nErrorHandlerService->DataMapperModule\n\n\n\n\n\nFieldActionService\n\nFieldActionService\n\nDataMapperModule -->\n\nFieldActionService->DataMapperModule\n\n\n\n\n\nFileManagementService\n\nFileManagementService\n\nDataMapperModule -->\n\nFileManagementService->DataMapperModule\n\n\n\n\n\nInitializationService\n\nInitializationService\n\nDataMapperModule -->\n\nInitializationService->DataMapperModule\n\n\n\n\n\nMappingManagementService\n\nMappingManagementService\n\nDataMapperModule -->\n\nMappingManagementService->DataMapperModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ClassNameComponent\n                        \n                        \n                            CollapsableHeaderComponent\n                        \n                        \n                            ConstantFieldEditComponent\n                        \n                        \n                            DataMapperAppComponent\n                        \n                        \n                            DataMapperAppExampleHostComponent\n                        \n                        \n                            DataMapperErrorComponent\n                        \n                        \n                            DocumentDefinitionComponent\n                        \n                        \n                            DocumentFieldDetailComponent\n                        \n                        \n                            EmptyModalBodyComponent\n                        \n                        \n                            ExpressionComponent\n                        \n                        \n                            FieldEditComponent\n                        \n                        \n                            FocusDirective\n                        \n                        \n                            LineMachineComponent\n                        \n                        \n                            LookupTableComponent\n                        \n                        \n                            MappingDetailComponent\n                        \n                        \n                            MappingFieldActionArgumentComponent\n                        \n                        \n                            MappingFieldActionComponent\n                        \n                        \n                            MappingFieldContainerComponent\n                        \n                        \n                            MappingFieldDetailComponent\n                        \n                        \n                            MappingListComponent\n                        \n                        \n                            MappingListFieldComponent\n                        \n                        \n                            MappingSelectionComponent\n                        \n                        \n                            MappingSelectionSectionComponent\n                        \n                        \n                            ModalErrorDetailComponent\n                        \n                        \n                            ModalErrorWindowComponent\n                        \n                        \n                            ModalWindowComponent\n                        \n                        \n                            NamespaceEditComponent\n                        \n                        \n                            NamespaceListComponent\n                        \n                        \n                            PropertyFieldEditComponent\n                        \n                        \n                            TemplateEditComponent\n                        \n                        \n                            ToErrorIconClassPipe\n                        \n                        \n                            ToolbarComponent\n                        \n                        \n                            TransitionSelectionComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ClassNameComponent\n                        \n                        \n                            ConstantFieldEditComponent\n                        \n                        \n                            EmptyModalBodyComponent\n                        \n                        \n                            FieldEditComponent\n                        \n                        \n                            LookupTableComponent\n                        \n                        \n                            MappingSelectionComponent\n                        \n                        \n                            NamespaceEditComponent\n                        \n                        \n                            PropertyFieldEditComponent\n                        \n                        \n                            TemplateEditComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            DocumentManagementService\n                        \n                        \n                            ErrorHandlerService\n                        \n                        \n                            FieldActionService\n                        \n                        \n                            FileManagementService\n                        \n                        \n                            InitializationService\n                        \n                        \n                            MappingManagementService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DataMapperAppComponent\n                        \n                        \n                            DataMapperAppExampleHostComponent\n                        \n                        \n                            ModalErrorWindowComponent\n                        \n                        \n                            ModalWindowComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            DataMapperAppExampleHostComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            withInterceptor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    withInterceptor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/data-mapper.module.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n    Copyright (C) 2017 Red Hat, Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\nimport { NgModule, ModuleWithProviders, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HttpClientXsrfModule, HttpXsrfTokenExtractor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AlertModule, BsDropdownModule, TooltipModule, TypeaheadModule } from 'ngx-bootstrap';\nimport { LoggerModule, NGXLogger } from 'ngx-logger';\nimport { environment } from '../../../environments/environment';\nimport { DocumentManagementService } from './services/document-management.service';\nimport { MappingManagementService } from './services/mapping-management.service';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { InitializationService } from './services/initialization.service';\n\nimport { DataMapperAppExampleHostComponent } from './components/data-mapper-example-host.component';\nimport { DataMapperAppComponent } from './components/app/data-mapper-app.component';\nimport { DataMapperErrorComponent } from './components/app/data-mapper-error.component';\nimport { ModalWindowComponent, EmptyModalBodyComponent } from './components/modal/modal-window.component';\nimport { ModalErrorWindowComponent } from './components/modal/modal-error-window.component';\nimport { ModalErrorDetailComponent } from './components/modal/modal-error-detail.component';\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\nimport { TemplateEditComponent } from './components/app/template-edit.component';\nimport { LineMachineComponent } from './components/app/line-machine.component';\nimport { ClassNameComponent } from './components/document/class-name.component';\nimport { CollapsableHeaderComponent } from './components/mapping-detail/collapsable-header.component';\nimport { DocumentDefinitionComponent } from './components/document/document-definition.component';\nimport { DocumentFieldDetailComponent } from './components/document/document-field-detail.component';\nimport { PropertyFieldEditComponent } from './components/app/property-field-edit.component';\nimport { ConstantFieldEditComponent } from './components/app/constant-field-edit.component';\nimport { FieldEditComponent } from './components/app/field-edit.component';\nimport { NamespaceEditComponent } from './components/app/namespace-edit.component';\nimport { MappingListComponent } from './components/mapping-list/mapping-list.component';\nimport { MappingListFieldComponent } from './components/mapping-list/mapping-list-field.component';\nimport { NamespaceListComponent } from './components/mapping-list/namespace-list.component';\nimport { MappingDetailComponent } from './components/mapping-detail/mapping-detail.component';\nimport { MappingFieldContainerComponent } from './components/mapping-detail/mapping-field-container.component';\nimport { MappingFieldDetailComponent } from './components/mapping-detail/mapping-field-detail.component';\nimport { MappingFieldActionComponent } from './components/mapping-detail/mapping-field-action.component';\nimport { MappingFieldActionArgumentComponent } from './components/mapping-detail/mapping-field-action-argument.component';\nimport { MappingSelectionComponent } from './components/mapping-detail/mapping-selection.component';\nimport { MappingSelectionSectionComponent } from './components/mapping-detail/mapping-selection-section.component';\nimport { LookupTableComponent } from './components/mapping-detail/lookup-table.component';\nimport { TransitionSelectionComponent } from './components/mapping-detail/transition-selection.component';\nimport { FocusDirective } from './common/focus.directive';\nimport { ExpressionComponent } from './components/toolbar/expression.component';\n\n// export services/types for consumers of this module\nexport { ApiXsrfInterceptor, ApiHttpXsrfTokenExtractor } from './services/api-xsrf.service';\nexport { ErrorHandlerService } from './services/error-handler.service';\nexport { DocumentManagementService } from './services/document-management.service';\nexport { MappingManagementService } from './services/mapping-management.service';\nexport { InitializationService } from './services/initialization.service';\nexport { DocumentDefinition } from './models/document-definition.model';\nexport { MappingDefinition } from './models/mapping-definition.model';\nexport { DocumentType, InspectionType } from './common/config.types';\nexport { ConfigModel, DocumentInitializationModel } from './models/config.model';\nexport { MappingModel } from './models/mapping.model';\nexport { MappingSerializer } from './utils/mapping-serializer';\n\nimport { ToErrorIconClassPipe } from './common/to-error-icon-class.pipe';\nimport { ApiXsrfInterceptor, ApiHttpXsrfTokenExtractor } from './services/api-xsrf.service';\nimport { FieldActionService } from './services/field-action.service';\nimport { FileManagementService } from './services/file-management.service';\nimport {AppRoutingModule} from '../../app-routing.module';\n\nexport { DataMapperAppComponent } from './components/app/data-mapper-app.component';\n\nexport const typeaheadModuleForRoot: ModuleWithProviders = TypeaheadModule.forRoot();\nexport const tooltipModuleForRoot: ModuleWithProviders = TooltipModule.forRoot();\nexport const bsDropdownModuleForRoot: ModuleWithProviders = BsDropdownModule.forRoot();\nexport const httpClientXsrfModuleForRoot: ModuleWithProviders = HttpClientXsrfModule.withOptions(environment.xsrf);\nexport const alertModuleForRoot: ModuleWithProviders = AlertModule.forRoot();\nexport const loggerModuleForRoot: ModuleWithProviders = LoggerModule.forRoot(environment.ngxLoggerConfig);\n\n// @dynamic\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    typeaheadModuleForRoot,\n    tooltipModuleForRoot,\n    bsDropdownModuleForRoot,\n    httpClientXsrfModuleForRoot,\n    alertModuleForRoot,\n    loggerModuleForRoot,\n    AppRoutingModule,\n  ],\n  declarations: [\n    DataMapperAppComponent,\n    ClassNameComponent,\n    DocumentDefinitionComponent,\n    MappingDetailComponent,\n    MappingFieldContainerComponent,\n    ModalWindowComponent,\n    ModalErrorWindowComponent,\n    ModalErrorDetailComponent,\n    DataMapperAppExampleHostComponent,\n    MappingFieldActionComponent,\n    MappingFieldActionArgumentComponent,\n    MappingFieldDetailComponent,\n    DocumentFieldDetailComponent,\n    DataMapperErrorComponent,\n    TransitionSelectionComponent,\n    LineMachineComponent,\n    MappingSelectionComponent,\n    MappingSelectionSectionComponent,\n    ToolbarComponent,\n    LookupTableComponent,\n    EmptyModalBodyComponent,\n    FieldEditComponent,\n    NamespaceEditComponent,\n    PropertyFieldEditComponent,\n    ConstantFieldEditComponent,\n    CollapsableHeaderComponent,\n    MappingListComponent,\n    MappingListFieldComponent,\n    NamespaceListComponent,\n    TemplateEditComponent,\n    ExpressionComponent,\n    FocusDirective,\n    ToErrorIconClassPipe\n  ],\n  exports: [\n    DataMapperAppExampleHostComponent,\n    ModalWindowComponent,\n    ModalErrorWindowComponent,\n    DataMapperAppComponent,\n    AlertModule,\n  ],\n  providers: [\n    DocumentManagementService,\n    MappingManagementService,\n    ErrorHandlerService,\n    InitializationService,\n    FieldActionService,\n    FileManagementService,\n    NGXLogger,\n  ],\n  entryComponents: [\n    MappingSelectionComponent,\n    LookupTableComponent,\n    EmptyModalBodyComponent,\n    FieldEditComponent,\n    NamespaceEditComponent,\n    PropertyFieldEditComponent,\n    ClassNameComponent,\n    ConstantFieldEditComponent,\n    TemplateEditComponent,\n  ],\n  bootstrap: [DataMapperAppExampleHostComponent],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n})\n\nexport class DataMapperModule {\n  static withInterceptor(): Array {\n    return [\n      { ngModule: DataMapperModule,\n        providers: [\n          DocumentManagementService,\n          MappingManagementService,\n          ErrorHandlerService,\n          FieldActionService,\n          FileManagementService,\n          InitializationService,\n          {\n            provide: HTTP_INTERCEPTORS,\n            useClass: ApiXsrfInterceptor,\n            multi: true\n          },\n        ],\n      },\n      { ngModule: DataMapperModule,\n        providers: [\n          DocumentManagementService,\n          MappingManagementService,\n          ErrorHandlerService,\n          FieldActionService,\n          FileManagementService,\n          InitializationService,\n          {\n            provide: HttpXsrfTokenExtractor,\n            useClass: ApiHttpXsrfTokenExtractor,\n            multi: false\n          },\n        ],\n      }\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataMapperUtil.html":{"url":"classes/DataMapperUtil.html","title":"class - DataMapperUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataMapperUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                HTTP_STATUS_NO_CONTENT\n                            \n                            \n                                    Static\n                                HTTP_STATUS_OK\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                extractDisplayPath\n                            \n                            \n                                    Static\n                                    Async\n                                readBinaryFile\n                            \n                            \n                                    Static\n                                    Async\n                                readFile\n                            \n                            \n                                    Static\n                                removeItemFromArray\n                            \n                            \n                                    Static\n                                splitByString\n                            \n                            \n                                    Static\n                                str2bytes\n                            \n                            \n                                    Static\n                                toDisplayable\n                            \n                            \n                                    Static\n                                    Async\n                                writeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            HTTP_STATUS_NO_CONTENT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 204\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            HTTP_STATUS_OK\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            extractDisplayPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractDisplayPath(path: string, fieldWidth: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:152\n                \n            \n\n\n            \n                \n                    Return a string path that fits into the width provided.  Capture as much of the leaf\nas possible, then as much of the beginning with the remaining space.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fieldWidth\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            readBinaryFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readBinaryFile(fileName: any, reader: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:101\n                \n            \n\n\n            \n                \n                    Perform an asynchronous binary read of the specified file name with the specified reader object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fileName\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nfile to read\n\n\n                                    \n                                \n                                \n                                    reader\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nreader object\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            readFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(fileName: any, reader: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:85\n                \n            \n\n\n            \n                \n                    Asynchronously read from the specified file and return as a string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileName\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reader\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            removeItemFromArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItemFromArray(item: any, items: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    items\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            splitByString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    splitByString(inStr: string, splitMarker: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:46\n                \n            \n\n\n            \n                \n                    Split a source string by the specified substring into a string array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inStr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    splitMarker\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            str2bytes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    str2bytes(str: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:71\n                \n            \n\n\n            \n                \n                    Turn a string into a byte array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Uint8Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            toDisplayable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toDisplayable(camelCaseString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:130\n                \n            \n\n\n            \n                \n                    Convert a camel-case string into human-readable form.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camelCaseString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            writeFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeFile(fileContent: Blob, fName: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:118\n                \n            \n\n\n            \n                \n                    Asynchronously write the specified file content (Blob) to the specified file name.  It will appear\nin the user's local Downloads directory (or equivalent).\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileContent\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fName\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { saveAs } from 'file-saver';\n\nexport class DataMapperUtil {\n\n  static HTTP_STATUS_OK = 200;\n  static HTTP_STATUS_NO_CONTENT = 204;\n\n  static removeItemFromArray(item: any, items: any[]): boolean {\n    if (item == null || items == null || items.length === 0) {\n      return false;\n    }\n    let i = 0;\n    let itemWasRemoved = false;\n    while (i  {\n    return new Promise((resolve, reject) => {\n      reader.onload = (event: any) => {\n        const fileBody = reader.result;\n        resolve(fileBody);\n      };\n      reader.readAsText(fileName);\n    });\n  }\n\n  /**\n   *  Perform an asynchronous binary read of the specified file name with the specified reader object.\n   *\n   * @param fileName - file to read\n   * @param reader - reader object\n   */\n  static async readBinaryFile(fileName: any, reader: any): Promise {\n    return new Promise((resolve, reject) => {\n      reader.onload = (event: any) => {\n        const fileBody = new Int8Array(reader.result);\n        resolve(fileBody);\n      };\n      reader.readAsArrayBuffer(fileName);\n    });\n  }\n\n  /**\n   * Asynchronously write the specified file content (Blob) to the specified file name.  It will appear\n   * in the user's local Downloads directory (or equivalent).\n   *\n   * @param fileContent\n   * @param fName\n   */\n  static async writeFile(fileContent: Blob, fName: any): Promise {\n    return new Promise((resolve, reject) => {\n      saveAs(fileContent, fName);\n      resolve(true);\n    });\n  }\n\n  /**\n   * Convert a camel-case string into human-readable form.\n   *\n   * @param camelCaseString\n   */\n  static toDisplayable(camelCaseString: string): string {\n    if (typeof camelCaseString === 'undefined' || !camelCaseString || camelCaseString.indexOf(' ') >= 0) {\n      return camelCaseString;\n    }\n    let displayableString: string = camelCaseString.charAt(0).toUpperCase();\n    for (let index = 1; index = MAX_PATH_WIDTH) {\n      return leaf.substr(0, MAX_PATH_WIDTH);\n    }\n    const delta = MAX_PATH_WIDTH - leaf.length;\n    return path.substr(0, delta) + '...' + leaf;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentFieldDetailComponent.html":{"url":"components/DocumentFieldDetailComponent.html","title":"component - DocumentFieldDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentFieldDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                document-field-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./document-field-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fieldComponents\n                            \n                            \n                                fieldDetailElement\n                            \n                            \n                                    Private\n                                isDragDropTarget\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allowDrop\n                            \n                            \n                                dragEnterLeave\n                            \n                            \n                                editField\n                            \n                            \n                                endDrag\n                            \n                            \n                                fieldShouldBeVisible\n                            \n                            \n                                getCssClass\n                            \n                            \n                                getElementPosition\n                            \n                            \n                                getFieldDetailComponent\n                            \n                            \n                                getFieldId\n                            \n                            \n                                getFieldTypeIcon\n                            \n                            \n                                getMappingClass\n                            \n                            \n                                getParentToggleClass\n                            \n                            \n                                getSpacerWidth\n                            \n                            \n                                getTransformationClass\n                            \n                            \n                                handleMouseClick\n                            \n                            \n                                handleMouseOver\n                            \n                            \n                                removeField\n                            \n                            \n                                startDrag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                field\n                            \n                            \n                                lineMachine\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selected\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         Field\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMachine\n                    \n                \n                \n                    \n                        Type :         LineMachineComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:40\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allowDrop\n                        \n                        \n                    \n                \n            \n            \n                \nallowDrop(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dragEnterLeave\n                        \n                        \n                    \n                \n            \n            \n                \ndragEnterLeave(event: any, entering: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entering\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editField\n                        \n                        \n                    \n                \n            \n            \n                \neditField(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endDrag\n                        \n                        \n                    \n                \n            \n            \n                \nendDrag(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fieldShouldBeVisible\n                        \n                        \n                    \n                \n            \n            \n                \nfieldShouldBeVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCssClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetCssClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getElementPosition\n                        \n                        \n                    \n                \n            \n            \n                \ngetElementPosition()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldDetailComponent\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldDetailComponent(field: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DocumentFieldDetailComponent\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldId\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:281\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldTypeIcon\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldTypeIcon()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappingClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappingClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParentToggleClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetParentToggleClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSpacerWidth\n                        \n                        \n                    \n                \n            \n            \n                \ngetSpacerWidth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:276\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SafeStyle\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTransformationClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetTransformationClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseClick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:188\n                \n            \n\n\n            \n                \n                    Semantic support for a mouse click.\n\nM1 - the field is selected\nCtrl/Cmd-M1 - compound-select\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseOver\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseOver(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeField\n                        \n                        \n                    \n                \n            \n            \n                \nremoveField(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:257\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startDrag\n                        \n                        \n                    \n                \n            \n            \n                \nstartDrag(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldComponents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('fieldDetail')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldDetailElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('fieldDetailElement')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDragDropTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n\n                \n                    \n                        getselected()\n                    \n                \n                            \n                                \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:285\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, ElementRef, ViewChild, ViewChildren, QueryList } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\nimport { DocumentType } from '../../common/config.types';\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\n\nimport { LineMachineComponent } from '../app/line-machine.component';\nimport { ModalWindowComponent } from '../modal/modal-window.component';\n\nimport { PropertyFieldEditComponent } from '../app/property-field-edit.component';\nimport { ConstantFieldEditComponent } from '../app/constant-field-edit.component';\nimport { FieldEditComponent } from '../app/field-edit.component';\n\n@Component({\n  selector: 'document-field-detail',\n  templateUrl: './document-field-detail.component.html',\n})\n\nexport class DocumentFieldDetailComponent {\n  @Input() cfg: ConfigModel;\n  @Input() field: Field;\n  @Input() lineMachine: LineMachineComponent;\n  @Input() modalWindow: ModalWindowComponent;\n\n  @ViewChild('fieldDetailElement') fieldDetailElement: ElementRef;\n  @ViewChildren('fieldDetail') fieldComponents: QueryList;\n\n  private isDragDropTarget = false;\n\n  constructor(private sanitizer: DomSanitizer) { }\n\n  startDrag(event: any): void {\n\n    if (!this.field.isTerminal()) {\n      // ignore drag event, it's coming from a child field who's already set on the drag event\n      return;\n    }\n\n    this.cfg.currentDraggedField = null;\n\n    // event's data transfer store isn't available during dragenter/dragleave/dragover, so we need\n    // to store this info in a global somewhere since those methods depend on knowing if the\n    // dragged field is source/target\n    event = event || window.event;\n    event.dataTransfer.setData('text', '');  // firefox bug\n    this.cfg.currentDraggedField = this.field;\n  }\n\n  dragEnterLeave(event: any, entering: boolean): void {\n    if (!this.field.isTerminal() || (this.field.isSource() === this.cfg.currentDraggedField.isSource())) {\n      this.isDragDropTarget = false;\n      return;\n    }\n    this.isDragDropTarget = entering;\n  }\n\n  allowDrop(event: any): void {\n    if (!this.field.isTerminal() || (this.field.isSource() === this.cfg.currentDraggedField.isSource())) {\n      this.isDragDropTarget = false;\n      return;\n    }\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    }\n    this.isDragDropTarget = true;\n  }\n\n  endDrag(event: MouseEvent): void {\n    this.isDragDropTarget = false;\n    if (!this.field.isTerminal() || (this.field.isSource() === this.cfg.currentDraggedField.isSource())) {\n      return;\n    }\n\n    const droppedField: Field = this.cfg.currentDraggedField;\n    if (droppedField == null) {\n      return;\n    }\n\n    if (!this.cfg.currentDraggedField.selected) {\n      this.cfg.mappingService.fieldSelected(this.cfg.currentDraggedField, event.ctrlKey || event.metaKey);\n    }\n    this.cfg.mappingService.fieldSelected(this.field, false);\n  }\n\n  getFieldTypeIcon(): string {\n    if (this.field.enumeration) {\n      return 'fa fa-file-text-o';\n    }\n    if (this.field.isCollection) {\n      return 'fa fa-list-ul';\n    }\n    if (this.field.docDef.type === DocumentType.XML) {\n      return this.field.isAttribute ? 'fa fa-at' : 'fa fa-code';\n    }\n    return 'fa fa-file-o';\n  }\n\n  fieldShouldBeVisible(): boolean {\n    const partOfMapping: boolean = this.field.partOfMapping;\n    return partOfMapping ? this.cfg.showMappedFields : this.cfg.showUnmappedFields;\n  }\n\n  getTransformationClass(): string {\n    if (!this.field.partOfMapping || !this.field.partOfTransformation) {\n      return 'partOfMappingIcon partOfMappingIconHidden';\n    }\n    return 'partOfMappingIcon fa fa-bolt';\n  }\n\n  getMappingClass(): string {\n    if (!this.field.partOfMapping) {\n      return 'partOfMappingIcon partOfMappingIconHidden';\n    }\n    let clz = 'fa fa-circle';\n    if (!this.field.isTerminal() && this.field.hasUnmappedChildren) {\n      clz = 'fa fa-adjust';\n    }\n    return 'partOfMappingIcon ' + clz;\n  }\n\n  getCssClass(): string {\n    let cssClass = 'fieldDetail';\n    if (this.selected) {\n      cssClass += ' selectedField';\n    }\n    if (!this.field.isTerminal()) {\n      cssClass += ' parentField';\n    }\n    if (!this.field.isSource()) {\n      cssClass += ' outputField';\n    }\n    if (this.isDragDropTarget) {\n      cssClass += ' dragHover';\n    }\n    return cssClass;\n  }\n\n  getElementPosition(): any {\n    let x = 0;\n    let y = 0;\n\n    let el: any = this.fieldDetailElement.nativeElement;\n    while (el != null) {\n      x += el.offsetLeft;\n      y += el.offsetTop;\n      el = el.offsetParent;\n    }\n    return { 'x': x, 'y': y };\n  }\n\n  handleMouseOver(event: MouseEvent): void {\n    if (this.field.isTerminal() && this.lineMachine != null) {\n      this.lineMachine.handleDocumentFieldMouseOver(this, event, this.field.isSource());\n    }\n  }\n\n  getParentToggleClass() {\n    return 'arrow fa fa-angle-' + (this.field.collapsed ? 'right' : 'down');\n  }\n\n  /**\n   * Semantic support for a mouse click.\n   * * M1 - the field is selected\n   * * Ctrl/Cmd-M1 - compound-select\n   *\n   * @param event\n   */\n  handleMouseClick(event: MouseEvent): void {\n    this.cfg.mappingService.fieldSelected(this.field, event.ctrlKey || event.metaKey);\n    this.cfg.mappingService.notifyLineRefresh();\n  }\n\n  getFieldDetailComponent(field: Field): DocumentFieldDetailComponent {\n    if (this.field === field) {\n      return this;\n    }\n\n    // Matching name and doc definition is a match\n    if ((this.field.path === field.path) && (this.field.docDef === field.docDef)) {\n      this.field = field;\n      return this;\n    }\n    for (const c of this.fieldComponents.toArray()) {\n      const returnedComponent: DocumentFieldDetailComponent = c.getFieldDetailComponent(field);\n      if (returnedComponent != null) {\n        return returnedComponent;\n      }\n    }\n    return null;\n  }\n\n  editField(event: any): void {\n    event.stopPropagation();\n    const self: DocumentFieldDetailComponent = this;\n    const oldPath: string = this.field.path;\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Save';\n    const isProperty: boolean = this.field.isProperty();\n    const isConstant: boolean = this.field.isConstant();\n    this.modalWindow.headerText = isProperty ? 'Edit Property' : (isConstant ? 'Edit Constant' : 'Edit Field');\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      if (isProperty) {\n        const propertyComponent: PropertyFieldEditComponent = mw.nestedComponent as PropertyFieldEditComponent;\n        propertyComponent.initialize(self.field, this.field.docDef, this.modalWindow);\n      } else if (isConstant) {\n        const constantComponent: ConstantFieldEditComponent = mw.nestedComponent as ConstantFieldEditComponent;\n        constantComponent.initialize(self.field, this.field.docDef, this.modalWindow);\n      } else {\n        const fieldComponent: FieldEditComponent = mw.nestedComponent as FieldEditComponent;\n        fieldComponent.isSource = self.field.isSource();\n        fieldComponent.initialize(self.field, this.field.docDef, false);\n      }\n    };\n    this.modalWindow.nestedComponentType = isProperty ? PropertyFieldEditComponent\n      : (isConstant ? ConstantFieldEditComponent : FieldEditComponent);\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      let newField: Field = null;\n      if (isProperty) {\n        const propertyComponent: PropertyFieldEditComponent = mw.nestedComponent as PropertyFieldEditComponent;\n        newField = propertyComponent.getField();\n      } else if (isConstant) {\n        const constantComponent: ConstantFieldEditComponent = mw.nestedComponent as ConstantFieldEditComponent;\n        newField = constantComponent.getField();\n      } else {\n        const fieldComponent: FieldEditComponent = mw.nestedComponent as FieldEditComponent;\n        newField = fieldComponent.getField();\n      }\n      self.field.copyFrom(newField);\n\n      self.field.docDef.updateField(self.field, oldPath);\n\n      self.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  removeField(event: any): void {\n    event.stopPropagation();\n    const self: DocumentFieldDetailComponent = this;\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Remove';\n    if (this.field.isPropertyOrConstant()) {\n      this.modalWindow.headerText = this.field.isProperty() ? 'Remove Property?' : 'Remove Constant?';\n    } else {\n      this.modalWindow.headerText = 'Remove field?';\n    }\n    this.modalWindow.message = 'Are you sure you want to remove \\'' + this.field.displayName + '\\'?';\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      self.cfg.mappingService.removeFieldFromAllMappings(self.field);\n      self.field.docDef.removeField(self.field);\n      self.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  getSpacerWidth(): SafeStyle {\n    const width: string = (this.field.fieldDepth * 30).toString();\n    return this.sanitizer.bypassSecurityTrustStyle('display:inline; margin-left:' + width + 'px');\n  }\n\n  getFieldId(): string {\n    return this.field.name && this.field.name.length > 0 ? this.field.name : 'document-root';\n  }\n\n  get selected(): boolean {\n    if (this.cfg.mappings && this.cfg.mappings.activeMapping) {\n      return this.cfg.mappings.activeMapping.getFields(this.field.isSource()).includes(this.field);\n    }\n    return false;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n      \n      &nbsp;\n      \n        \n        \n        \n      \n      \n        \n      \n    \n    &nbsp;\n    \n      {{ field.getFieldLabel(cfg.showTypes, false) }}\n    \n\n    \n      {{ field.getFieldLabel(cfg.showTypes, false) }}\n    \n\n    \n      \n      \n    \n\n    \n      \n      \n    \n\n    \n\n    \n      \n        \n          \n            \n            \n              \n                \n                  \n                    \n                      Preview Results\n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n    \n  \n\n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                    {{ field.getFieldLabel(cfg.showTypes, false) }}              {{ field.getFieldLabel(cfg.showTypes, false) }}                                                                                                                                                                                              Preview Results                                                                                                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DocumentFieldDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DocumentInitializationModel.html":{"url":"classes/DocumentInitializationModel.html","title":"class - DocumentInitializationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DocumentInitializationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/config.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collectionClassName\n                            \n                            \n                                collectionType\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                inspectionResult\n                            \n                            \n                                inspectionSource\n                            \n                            \n                                inspectionType\n                            \n                            \n                                isSource\n                            \n                            \n                                name\n                            \n                            \n                                selectedRoot\n                            \n                            \n                                showFields\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collectionClassName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collectionType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CollectionType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inspectionResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inspectionSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inspectionType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InspectionType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:83\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\nimport { NGXLogger, NgxLoggerLevel } from 'ngx-logger';\nimport { environment } from '../../../../environments/environment';\nimport { MappingDefinition } from './mapping-definition.model';\nimport { DocumentDefinition } from './document-definition.model';\n\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { DocumentManagementService } from '../services/document-management.service';\nimport { MappingManagementService } from '../services/mapping-management.service';\nimport { InitializationService } from '../services/initialization.service';\nimport { ErrorInfo } from '../models/error.model';\n\nimport { DocumentType, InspectionType, CollectionType } from '../common/config.types';\nimport { FieldActionService } from '../services/field-action.service';\nimport { FileManagementService } from '../services/file-management.service';\n\nexport class DataMapperInitializationModel {\n  dataMapperVersion = '0.9.2017.07.28';\n  initialized = false;\n  loadingStatus = 'Loading.';\n  admHttpTimeout = 30000;  // 30 seconds\n  initializationErrorOccurred = false;\n\n  baseJavaInspectionServiceUrl: string;\n  baseXMLInspectionServiceUrl: string;\n  baseJSONInspectionServiceUrl: string;\n  baseMappingServiceUrl: string;\n\n  xsrfHeaderName: string;\n  xsrfCookieName: string;\n  xsrfDefaultTokenValue: string;\n\n  /* class path fetching configuration */\n  classPathFetchTimeoutInMilliseconds = 30000;\n  // if classPath is specified, maven call to resolve pom will be skipped\n  pomPayload: string;\n\n  classPath: string;\n\n  /* inspection service filtering flags */\n  fieldNameBlacklist: string[] = [];\n  classNameBlacklist: string[] = [];\n  disablePrivateOnlyFields = false;\n  disableProtectedOnlyFields = false;\n  disablePublicOnlyFields = false;\n  disablePublicGetterSetterFields = false;\n\n  disableMappingPreviewMode = false;\n\n  /* enable the navigation bar and import/export */\n  disableNavbar = true;\n\n  mappingInitialized = false;\n\n  constructor() {\n    if (environment.xsrf) {\n      this.xsrfHeaderName = environment.xsrf.headerName;\n      this.xsrfCookieName = environment.xsrf.cookieName;\n      this.xsrfDefaultTokenValue = environment.xsrf.defaultTokenValue;\n    }\n  }\n\n}\n\nexport class DocumentInitializationModel {\n  id: string;\n  type: DocumentType;\n  name: string;\n  description: string;\n  isSource: boolean;\n  showFields = true;\n  inspectionType: InspectionType;\n  inspectionSource: string;\n  inspectionResult: string;\n  selectedRoot: string;\n  collectionType: CollectionType;\n  collectionClassName: string;\n}\n\nexport class ConfigModel {\n  static mappingServicesPackagePrefix = 'io.atlasmap.v2';\n  static javaServicesPackagePrefix = 'io.atlasmap.java.v2';\n  static jsonServicesPackagePrefix = 'io.atlasmap.json.v2';\n  static xmlServicesPackagePrefix = 'io.atlasmap.xml.v2';\n  private static cfg: ConfigModel = new ConfigModel();\n\n  initCfg: DataMapperInitializationModel = new DataMapperInitializationModel;\n\n  /* current ui state config */\n  showMappingDetailTray = false;\n  showMappingTable = false;\n  showNamespaceTable = false;\n  showLinesAlways = true;\n  showTypes = false;\n  showMappedFields = true;\n  showUnmappedFields = true;\n  _showMappingPreview = false;\n  currentDraggedField: any = null;\n\n  documentService: DocumentManagementService;\n  mappingService: MappingManagementService;\n  errorService: ErrorHandlerService;\n  initializationService: InitializationService;\n  fieldActionService: FieldActionService;\n  fileService: FileManagementService;\n\n  sourceDocs: DocumentDefinition[] = [];\n  targetDocs: DocumentDefinition[] = [];\n  propertyDoc: DocumentDefinition = new DocumentDefinition();\n  constantDoc: DocumentDefinition = new DocumentDefinition();\n  mappingFiles: string[] = [];\n\n  mappings: MappingDefinition = null;\n\n  preloadedMappingJson: string;\n  preloadedFieldActionMetadata: any;\n\n  // declare in initCfg instead?\n  mappingDefinitionId: number;\n\n  logger: NGXLogger;\n\n  constructor() {\n    this.propertyDoc.type = DocumentType.PROPERTY;\n    this.propertyDoc.name = 'Properties';\n    this.propertyDoc.isSource = true;\n    this.propertyDoc.showFields = false;\n    this.constantDoc.type = DocumentType.CONSTANT;\n    this.constantDoc.name = 'Constants';\n    this.constantDoc.isSource = true;\n    this.constantDoc.showFields = false;\n  }\n\n  static getConfig(): ConfigModel {\n    return ConfigModel.cfg;\n  }\n\n  static setConfig(cfg: ConfigModel): void {\n    ConfigModel.cfg = cfg;\n  }\n\n  set showMappingPreview(show: boolean) {\n    if (show && !this._showMappingPreview) {\n      this.mappingService.enableMappingPreview();\n    } else if (!show && this._showMappingPreview) {\n      this.mappingService.disableMappingPreview();\n    }\n    this._showMappingPreview = show;\n  }\n\n  get showMappingPreview(): boolean {\n    return this._showMappingPreview;\n  }\n\n  isDebugEnabled(): boolean {\n    return [NgxLoggerLevel.DEBUG, NgxLoggerLevel.TRACE].includes(this.logger.getConfigSnapshot().level);\n  }\n\n  isTraceEnabled(): boolean {\n    return this.logger.getConfigSnapshot().level === NgxLoggerLevel.TRACE;\n  }\n\n  addDocument(docInitModel: DocumentInitializationModel): DocumentDefinition {\n    const docDef: DocumentDefinition = new DocumentDefinition();\n    docDef.initModel = docInitModel;\n    docDef.id = docInitModel.id;\n    docDef.type = docInitModel.type;\n    docDef.name = docInitModel.name;\n    docDef.description = docInitModel.description;\n    docDef.isSource = docInitModel.isSource;\n    docDef.showFields = docInitModel.showFields;\n    docDef.inspectionType = docInitModel.inspectionType;\n    docDef.inspectionSource = docInitModel.inspectionSource;\n    docDef.inspectionResult = docInitModel.inspectionResult;\n    docDef.selectedRoot = docInitModel.selectedRoot;\n\n    if (docDef.type === DocumentType.XSD) {\n      docDef.uri = 'atlas:' + 'xml' + ':' + docDef.id;\n    } else if (docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri = 'atlas:' + 'java' + ':' + docDef.id;\n    } else {\n      docDef.uri = 'atlas:' + docDef.type.toLowerCase() + ':' + docDef.id;\n    }\n\n    if (docDef.type === DocumentType.JAVA || docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri += '?className=' + docDef.inspectionSource;\n      if (docInitModel.collectionType && docInitModel.collectionType !== CollectionType.NONE) {\n        docDef.uri += '&collectionType=' + docInitModel.collectionType;\n        if (docInitModel.collectionClassName) {\n          docDef.uri += '&collectionClassName=' + docInitModel.collectionClassName;\n        }\n      }\n    }\n\n    if (docInitModel.isSource) {\n      this.sourceDocs.push(docDef);\n    } else {\n      this.targetDocs.push(docDef);\n    }\n    return docDef;\n  }\n\n  addDocuments(docModels: DocumentInitializationModel[]): DocumentDefinition[] {\n    const docDefs: DocumentDefinition[] = [];\n    for (const docModel of docModels) {\n      docDefs.push(this.addDocument(docModel));\n    }\n    return docDefs;\n  }\n\n  getDocsWithoutPropertyDoc(isSource: boolean): DocumentDefinition[] {\n    return [].concat(isSource ? this.sourceDocs : this.targetDocs);\n  }\n\n  getDocs(isSource: boolean): DocumentDefinition[] {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    return isSource ? [this.propertyDoc, this.constantDoc].concat(docs) : docs;\n  }\n\n  /**\n   * Return a uri:DocumentDefinition document map for either the sources or targets panel contents.\n   *\n   * @param cfg\n   * @param isSource\n   */\n  getDocUriMap(cfg: ConfigModel, isSource: boolean): {[key: string]: DocumentDefinition} {\n    const docMap: {[key: string]: DocumentDefinition} = {};\n    for (const doc of cfg.getDocs(isSource)) {\n      docMap[doc.uri] = doc;\n    }\n    return docMap;\n  }\n\n  /**\n   * Clear source/target/mapping documents from the model.  Reset constant and property document definitions.\n   */\n  clearDocs(): void {\n    this.sourceDocs = [];\n    this.targetDocs = [];\n    this.propertyDoc.clearFields();\n    this.constantDoc.clearFields();\n    this.mappingFiles = [];\n  }\n\n  hasJavaDocuments(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isClassPathResolutionNeeded(): boolean {\n    if (this.initCfg.classPath) {\n      return false;\n    }\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA && doc.inspectionResult == null) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getDocForIdentifier(documentId: string, isSource: boolean): DocumentDefinition {\n    for (const d of this.getDocs(isSource)) {\n      if (d.id === documentId) {\n        return d;\n      }\n    }\n    return null;\n  }\n\n  getFirstXmlDoc(isSource: boolean) {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    for (const doc of docs) {\n      if (doc.type === DocumentType.XML) {\n        return doc;\n      }\n    }\n    return null;\n  }\n\n  getAllDocs(): DocumentDefinition[] {\n    return [this.propertyDoc, this.constantDoc].concat(this.sourceDocs).concat(this.targetDocs);\n  }\n\n  documentsAreLoaded(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (!doc.initialized) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmptyModalBodyComponent.html":{"url":"components/EmptyModalBodyComponent.html","title":"component - EmptyModalBodyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmptyModalBodyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                empty-modal-body\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitialFocusElement\n                            \n                            \n                                isDataValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  Component, Input, ViewChildren, QueryList, OnDestroy,\n  ViewContainerRef, Type, ComponentFactoryResolver, AfterViewInit, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../../models/config.model';\nimport { Subscription, Subject } from 'rxjs';\nimport { ModalErrorWindowComponent } from './modal-error-window.component';\nimport { ErrorInfo } from '../../models/error.model';\n\n// source: http://www.w3schools.com/howto/howto_css_modals.asp\n\nexport interface ModalWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'empty-modal-body',\n  template: '',\n})\n\nexport class EmptyModalBodyComponent implements ModalWindowValidator {\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n}\n\n@Component({\n  selector: 'modal-window',\n  templateUrl: './modal-window.component.html',\n})\n\nexport class ModalWindowComponent implements AfterViewInit, OnDestroy {\n  @Input() headerText = '';\n  @Input() nestedComponentType: Type;\n  @Input() nestedComponentInitializedCallback: Function;\n  @Input() okButtonHandler: Function;\n  @Input() cancelButtonHandler: Function;\n  @Input() cfg: ConfigModel;\n  @Input() modalErrorWindow: ModalErrorWindowComponent;\n\n  message: string = null;\n  nestedComponent: ModalWindowValidator;\n  confirmButtonDisabled = false;\n  confirmButtonText = 'OK';\n  visible = false;\n  fade = false;\n  errors: ErrorInfo[] = [];\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  private componentLoaded = false;\n  private myTargetChangesSubscription: Subscription;\n  private modalErrorSubject: Subject;\n  private modalErrorSubscription: Subscription;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, public detector: ChangeDetectorRef) { }\n\n  ngAfterViewInit() {\n    if (this.myTargetChangesSubscription) {\n      this.myTargetChangesSubscription.unsubscribe();\n    }\n\n    // from: http://stackoverflow.com/questions/40811809/add-component-dynamically-inside-an-ngif\n    this.myTargetChangesSubscription = this.myTarget.changes.subscribe(changes => {\n      setTimeout(() => {\n        if (!this.componentLoaded && this.visible && this.myTarget && (this.myTarget.toArray().length)) {\n          this.loadComponent();\n        }\n        setTimeout(() => {\n          this.detector.detectChanges();\n        }, 10);\n      }, 10);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.myTargetChangesSubscription) {\n      this.myTargetChangesSubscription.unsubscribe();\n    }\n    if (this.modalErrorSubscription) {\n      this.modalErrorSubscription.unsubscribe();\n    }\n    if (this.modalErrorSubject) {\n      this.modalErrorSubject.complete();\n    }\n  }\n\n  loadComponent(): void {\n    const viewContainerRef: ViewContainerRef = this.myTarget.toArray()[0];\n    viewContainerRef.clear();\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.nestedComponentType);\n    this.nestedComponent = viewContainerRef.createComponent(componentFactory).instance as ModalWindowValidator;\n    if (this.nestedComponentInitializedCallback != null) {\n      this.nestedComponentInitializedCallback(this);\n    }\n    const initialFocusElement = this.nestedComponent.getInitialFocusElement();\n    if (initialFocusElement) {\n      initialFocusElement.nativeElement.focus();\n    }\n    if (this.modalErrorSubject && !this.modalErrorSubject.closed) {\n      this.modalErrorSubject.complete();\n    }\n    this.modalErrorSubject = this.cfg.errorService.createFormErrorChannel();\n    this.modalErrorSubscription = this.modalErrorSubject.subscribe((errors: ErrorInfo[]) => {\n      this.errors = errors;\n    });\n  }\n\n  closeClicked(event: MouseEvent): void { this.buttonClicked(false); }\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.modalErrorSubject.complete();\n      this.errors = [];\n      this.visible = false;\n    }, 300);\n  }\n  show(): void {\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.nestedComponentInitializedCallback = null;\n    this.confirmButtonDisabled = false;\n    this.confirmButtonText = 'OK';\n    this.message = '';\n    this.headerText = '';\n    this.componentLoaded = false;\n    this.nestedComponentType = EmptyModalBodyComponent;\n    this.okButtonHandler = null;\n    this.cancelButtonHandler = null;\n  }\n\n  private buttonClicked(okClicked: boolean): void {\n    if (okClicked) {\n      if (this.nestedComponent != null) {\n        this.cfg.errorService.clearFormErrors();\n        if (!(this.nestedComponent.isDataValid())) {\n          return;\n        }\n      }\n      if (this.okButtonHandler) {\n        this.okButtonHandler(this);\n      }\n    } else { // cancel clicked\n      if (this.cancelButtonHandler) {\n        this.cancelButtonHandler(this);\n      }\n    }\n    this.close();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmptyModalBodyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnumValue.html":{"url":"classes/EnumValue.html","title":"class - EnumValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnumValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                ordinal\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ordinal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field.model.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DocumentType } from '../common/config.types';\nimport { DocumentDefinition } from './document-definition.model';\n\nexport class EnumValue {\n  name: string;\n  ordinal: number;\n}\n\nexport class Field {\n  private static uuidCounter = 0;\n\n  name: string = null;\n  classIdentifier: string = null;\n  displayName: string;\n  path: string = null;\n  type: string = null;\n  value: string = null;\n  serviceObject: any = new Object();\n  parentField: Field;\n  partOfMapping = false;\n  partOfTransformation = false;\n  visibleInCurrentDocumentSearch = true;\n  enumeration = false;\n  enumValues: EnumValue[] = [];\n  children: Field[] = [];\n  fieldDepth = 0;\n  uuid: string = null;\n  collapsed = true;\n  hasUnmappedChildren = false;\n  isCollection = false;\n  isArray = false;\n  isAttribute = false;\n  isPrimitive = false;\n  userCreated = false;\n  docDef: DocumentDefinition = null;\n  namespaceAlias: string = null;\n\n  static fieldHasUnmappedChild(field: Field): boolean {\n    if (field == null) {\n      return false;\n    }\n    if (field.isTerminal()) {\n      return (field.partOfMapping === false);\n    }\n    for (const childField of field.children) {\n      if (childField.hasUnmappedChildren || Field.fieldHasUnmappedChild(childField)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static getFieldPaths(fields: Field[]): string[] {\n    const paths: string[] = [];\n    for (const field of fields) {\n      paths.push(field.path);\n    }\n    return paths;\n  }\n\n  static getFieldNames(fields: Field[]): string[] {\n    const paths: string[] = [];\n    for (const field of fields) {\n      paths.push(field.name);\n    }\n    return paths;\n  }\n\n  static getField(fieldPath: string, fields: Field[]): Field {\n    for (const field of fields) {\n      if (fieldPath === field.path) {\n        return field;\n      }\n    }\n    return null;\n  }\n\n  static alphabetizeFields(fields: Field[]): void {\n    const fieldsByName: { [key: string]: Field; } = {};\n    const fieldNames: string[] = [];\n    for (const field of fields) {\n      // if field is a dupe, discard it\n      if (fieldsByName[field.name] != null) {\n        continue;\n      }\n      fieldsByName[field.name] = field;\n      fieldNames.push(field.name);\n    }\n    fieldNames.sort();\n    fields.length = 0;\n    for (const name of fieldNames) {\n      fields.push(fieldsByName[name]);\n    }\n\n    for (const field of fields) {\n      if (field.children && field.children.length) {\n        this.alphabetizeFields(field.children);\n      }\n    }\n  }\n\n  constructor() {\n    this.uuid = Field.uuidCounter.toString();\n    Field.uuidCounter++;\n  }\n\n  /**\n   * Expand all fields above the current field.\n   */\n  expandToRoot() {\n    let parent: Field = this;\n    while (parent != null) {\n      parent.collapsed = false;\n      if (parent.isPropertyOrConstant) {\n        if (parent.docDef) {\n          parent.docDef.showFields = true;\n        }\n      }\n      parent = parent.parentField;\n    }\n  }\n\n  getNameWithNamespace(): string {\n    if (!this.namespaceAlias) {\n      return this.name;\n    }\n    return this.namespaceAlias + ':' + this.name;\n  }\n\n  isParentField(): boolean {\n    if (this.isCollection && !this.isPrimitive) {\n      return true;\n    }\n    return (this.type === 'COMPLEX');\n  }\n\n  isStringField(): boolean {\n    return (this.type === 'STRING');\n  }\n\n  isTerminal(): boolean {\n    if (this.enumeration) {\n      return true;\n    }\n    if (this.isCollection && !this.isPrimitive) {\n      return false;\n    }\n    return (this.type !== 'COMPLEX');\n  }\n\n  copy(): Field {\n    const copy: Field = new Field();\n    Object.assign(copy, this);\n\n    // make these pointers to the same object, not copies\n    copy.serviceObject = this.serviceObject;\n    copy.parentField = this.parentField;\n    copy.docDef = this.docDef;\n\n    copy.children = [];\n    for (const childField of this.children) {\n      copy.children.push(childField.copy());\n    }\n    // console.log(\"Copied: \" + this.name, { \"src\": this, \"target\": copy });\n    return copy;\n  }\n\n  copyFrom(that: Field): void {\n    Object.assign(this, that);\n\n    // make these pointers to the same object, not copies\n    this.serviceObject = that.serviceObject;\n    this.parentField = that.parentField;\n    this.docDef = that.docDef;\n\n    this.children = [];\n    for (const childField of that.children) {\n      this.children.push(childField.copy());\n    }\n  }\n\n  getCollectionParentField(): Field {\n    let parent: Field = this;\n    while (parent != null) {\n      if (parent.isCollection) {\n        return parent;\n      }\n      parent = parent.parentField;\n    }\n    return null;\n  }\n\n  isInCollection(): boolean {\n    return (this.getCollectionParentField() != null);\n  }\n\n  getCollectionCount(): number {\n    let count = 0;\n    let field: Field = this;\n    while (field != null) {\n      if (field.isCollection) {\n        count++;\n      }\n      field = field.parentField;\n    }\n    return count;\n  }\n\n  isSource(): boolean {\n    return (this.docDef != null) && this.docDef.isSource;\n  }\n\n  getCollectionType(): string {\n    return this.isCollection ? (this.isArray ? 'ARRAY' : 'LIST') : null;\n  }\n\n  getFieldLabel(showTypes: boolean, includePath: boolean): string {\n    let fieldPath = includePath ? this.path : this.getNameWithNamespace();\n    if (showTypes && this.type && !this.isPropertyOrConstant()) {\n      fieldPath += ' (' + this.type + ')';\n    } else if (this.isProperty() && this.value != null) {\n      fieldPath += ' = ' + this.value;\n      if (showTypes && this.type) {\n        fieldPath += ' (' + this.type + ')';\n      }\n    }\n    if (!fieldPath && !this.parentField) {\n      fieldPath = '';\n    }\n    return fieldPath;\n  }\n\n  isPropertyOrConstant(): boolean {\n    return (this.docDef == null) ? false : this.docDef.isPropertyOrConstant;\n  }\n\n  isProperty(): boolean {\n    return (this.docDef == null) ? false : this.docDef.type === DocumentType.PROPERTY;\n  }\n\n  isConstant(): boolean {\n    return (this.docDef == null) ? false : this.docDef.type === DocumentType.CONSTANT;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts\n        \n\n            \n                Description\n            \n            \n                ErrorHandlerService handles global errors, mapping validation errors, preview errors,\nmapped field level errors as well as instant form validation errors in a modal windows.\nGlobal errors, mapping validation errors, preview errors and mapped field level errors\nare stored in a same array at this moment. We might want to split them when we show\nthem grouped by ErrorType.\nErrors with ErrorScope.MAPPING and ErrorScope.FIELD are cleared\neverytime active mapping is switched. ErrorScope.FIELD errors are mostly\ninstant and cleared more frequently.\nForm validation errors are supposed to be instant. Channel should be created by\ncreateFormErrorChannel() when modal window is initialized, and should be\ncompleted when modal window is closed.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errors\n                            \n                            \n                                    Private\n                                errorUpdatedSource\n                            \n                            \n                                    Private\n                                formErrors\n                            \n                            \n                                    Private\n                                formErrorUpdatedSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addError\n                            \n                            \n                                clearAllErrors\n                            \n                            \n                                clearFieldErrors\n                            \n                            \n                                clearFormErrors\n                            \n                            \n                                clearPreviewErrors\n                            \n                            \n                                clearValidationErrors\n                            \n                            \n                                createFormErrorChannel\n                            \n                            \n                                    Private\n                                emitUpdatedEvent\n                            \n                            \n                                    Private\n                                excludeByIdentifier\n                            \n                            \n                                    Static\n                                filterWith\n                            \n                            \n                                getErrors\n                            \n                            \n                                isRequiredFieldValid\n                            \n                            \n                                removeError\n                            \n                            \n                                resetAll\n                            \n                            \n                                subscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addError\n                        \n                        \n                    \n                \n            \n            \n                \naddError(errors: ErrorInfo[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:64\n                \n            \n\n\n            \n                \n                    Add one or more ErrorInfo object(s) into error store.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    errors\n                                    \n                                                ErrorInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        one or more {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearAllErrors\n                        \n                        \n                    \n                \n            \n            \n                \nclearAllErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:115\n                \n            \n\n\n            \n                \n                    Remova all errors except form validation errors.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearFieldErrors\n                        \n                        \n                    \n                \n            \n            \n                \nclearFieldErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:140\n                \n            \n\n\n            \n                \n                    Remove all field scoped errors.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearFormErrors\n                        \n                        \n                    \n                \n            \n            \n                \nclearFormErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:148\n                \n            \n\n\n            \n                \n                    Remove all form validation errors.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearPreviewErrors\n                        \n                        \n                    \n                \n            \n            \n                \nclearPreviewErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:123\n                \n            \n\n\n            \n                \n                    Remove all preview errors.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearValidationErrors\n                        \n                        \n                    \n                \n            \n            \n                \nclearValidationErrors(mapping?: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:131\n                \n            \n\n\n            \n                \n                    Remove all mapping validation errors.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createFormErrorChannel\n                        \n                        \n                    \n                \n            \n            \n                \ncreateFormErrorChannel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:167\n                \n            \n\n\n            \n                \n                    Create a Subject for form validation error. This ErrorHandlerService assumes only\none form validation happens at once, as it's used in modal window. Revisit this if there\nneeds to be more than one channel and manage a list of Subject.\n\n\n                    \n                        Returns :         Subject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            emitUpdatedEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitUpdatedEvent(scope?: ErrorScope)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scope\n                                    \n                                                ErrorScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            excludeByIdentifier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    excludeByIdentifier(errors: ErrorInfo[], identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errors\n                                    \n                                                ErrorInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            filterWith\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filterWith(errors: ErrorInfo[], mapping?: MappingModel, level?: ErrorLevel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:50\n                \n            \n\n\n            \n                \n                    FIlter an array of ErrorInfo with specified condition.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    errors\n                                    \n                                                ErrorInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An array of {\n\n                                    \n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    level\n                                    \n                                                ErrorLevel\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:83\n                \n            \n\n\n            \n                \n                    Return all errors in the store.\n\n\n                    \n                    \n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                    \n                        An array of {\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isRequiredFieldValid\n                        \n                        \n                    \n                \n            \n            \n                \nisRequiredFieldValid(value: string, fieldDescription: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:182\n                \n            \n\n\n            \n                \n                    Validate the specified field value in a form, generating a form validation error if not defined.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nA form field to validate\n\n\n                                    \n                                \n                                \n                                    fieldDescription\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nused in error diagnostic\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeError\n                        \n                        \n                    \n                \n            \n            \n                \nremoveError(identifier: string, scope?: ErrorScope)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:91\n                \n            \n\n\n            \n                \n                    Remove one ErrorInfo by specifying ID.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error ID\n\n                                    \n                                \n                                \n                                    scope\n                                    \n                                                ErrorScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetAll\n                        \n                        \n                    \n                \n            \n            \n                \nresetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:104\n                \n            \n\n\n            \n                \n                    Clear all global/mapping errors as well as form validation erros and its Subject\nif it exists.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subscribe\n                        \n                        \n                    \n                \n            \n            \n                \nsubscribe(observer: (errors: ErrorInfo[]) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:158\n                \n            \n\n\n            \n                \n                    Subscribe an error updated event. Observer will be notified\nwhen an error is added or removed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    observer\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Observer\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorInfo[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorUpdatedSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            formErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorInfo[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            formErrorUpdatedSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:42\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { ErrorInfo, ErrorLevel, ErrorScope, ErrorType } from '../models/error.model';\nimport { ConfigModel } from '../models/config.model';\nimport { Subject, Subscription } from 'rxjs';\nimport { MappingModel } from '../models/mapping.model';\n\n/**\n * ErrorHandlerService handles global errors, mapping validation errors, preview errors,\n * mapped field level errors as well as instant form validation errors in a modal windows.\n * Global errors, mapping validation errors, preview errors and mapped field level errors\n * are stored in a same array at this moment. We might want to split them when we show\n * them grouped by {@link ErrorType}.\n * Errors with {@link ErrorScope.MAPPING} and {@link ErrorScope.FIELD} are cleared\n * everytime active mapping is switched. {@link ErrorScope.FIELD} errors are mostly\n * instant and cleared more frequently.\n * Form validation errors are supposed to be instant. Channel should be created by\n * {@link createFormErrorChannel()} when modal window is initialized, and should be\n * completed when modal window is closed.\n */\n@Injectable()\nexport class ErrorHandlerService {\n  private errors: ErrorInfo[] = [];\n  private formErrors: ErrorInfo[] = [];\n  private errorUpdatedSource = new Subject();\n  private formErrorUpdatedSource: Subject;\n\n  /**\n   * FIlter an array of {@link ErrorInfo} with specified condition.\n   * @param errors An array of {@link ErrorInfo} to filter\n   * @param mapping {@link MappingModel} to filter {@link ErrorScope.MAPPING} errors\n   * @param level {@link ErrorLevel} to filter with\n   */\n  static filterWith(errors: ErrorInfo[], mapping?: MappingModel, level?: ErrorLevel): ErrorInfo[] {\n    if (!errors || errors.length === 0) {\n      return [];\n    }\n    return errors.filter(e =>\n      (!e.mapping || (mapping && e.mapping === mapping))\n        && (!level || !e.level || e.level === level)\n    );\n  }\n\n  /**\n   * Add one or more {@link ErrorInfo} object(s) into error store.\n   * @param errors one or more {@link ErrorInfo} object(s)\n   */\n  addError(...errors: ErrorInfo[]): void {\n    errors.forEach(error => {\n      if (error.object && error.object.message) {\n        // TODO show error.object in more polished way... maybe with better error console\n        error.message += ('\\n' + error.object.message);\n      }\n      const store = ErrorScope.FORM === error.scope ? this.formErrors : this.errors;\n      if (store.find(e => e.message === error.message)) {\n        return;\n      }\n      store.unshift(error);\n    });\n    this.emitUpdatedEvent();\n  }\n\n  /**\n   * Return all errors in the store.\n   * @return An array of {@link ErrorInfo}\n   */\n  getErrors(): ErrorInfo[] {\n    return Object.assign([], this.errors);\n  }\n\n  /**\n   * Remove one {@link ErrorInfo} by specifying ID.\n   * @param identifier Error ID\n   */\n  removeError(identifier: string, scope?: ErrorScope): void {\n    if (scope === ErrorScope.FORM && !this.formErrorUpdatedSource.closed) {\n      this.formErrors = this.excludeByIdentifier(this.formErrors, identifier);\n    } else {\n      this.errors = this.excludeByIdentifier(this.errors, identifier);\n    }\n    this.emitUpdatedEvent();\n  }\n\n  /**\n   * Clear all global/mapping errors as well as form validation erros and its Subject\n   * if it exists.\n   */\n  resetAll(): void {\n    this.clearAllErrors();\n    this.formErrors = [];\n    if (this.formErrorUpdatedSource && !this.formErrorUpdatedSource.closed) {\n      this.formErrorUpdatedSource.complete();\n    }\n  }\n\n  /**\n   * Remova all errors except form validation errors.\n   */\n  clearAllErrors() {\n    this.errors = [];\n    this.emitUpdatedEvent();\n  }\n\n  /**\n   * Remove all preview errors.\n   */\n  clearPreviewErrors(): void {\n    this.errors = this.errors.filter(e => e.type !== ErrorType.PREVIEW);\n    this.emitUpdatedEvent();\n  }\n\n  /**\n   * Remove all mapping validation errors.\n   */\n  clearValidationErrors(mapping?: MappingModel): void {\n    this.errors = this.errors.filter(e =>\n      e.type !== ErrorType.VALIDATION && (!mapping || !e.mapping || e.mapping !== mapping));\n    this.emitUpdatedEvent();\n  }\n\n  /**\n   * Remove all field scoped errors.\n   */\n  clearFieldErrors() {\n    this.errors = this.errors.filter(e => e.scope !== ErrorScope.FIELD);\n    this.emitUpdatedEvent();\n  }\n\n  /**\n   * Remove all form validation errors.\n   */\n  clearFormErrors() {\n    this.formErrors = [];\n    this.emitUpdatedEvent(ErrorScope.FORM);\n  }\n\n  /**\n   * Subscribe an error updated event. Observer will be notified\n   * when an error is added or removed.\n   * @param observer Observer\n   */\n  subscribe(observer: (errors: ErrorInfo[]) => void): Subscription {\n    return this.errorUpdatedSource.subscribe(observer);\n  }\n\n  /**\n   * Create a Subject for form validation error. This ErrorHandlerService assumes only\n   * one form validation happens at once, as it's used in modal window. Revisit this if there\n   * needs to be more than one channel and manage a list of {@link Subject}.\n   */\n  createFormErrorChannel(): Subject {\n    if (this.formErrorUpdatedSource && !this.formErrorUpdatedSource.closed) {\n      this.formErrorUpdatedSource.complete();\n    }\n    this.formErrors = [];\n    this.formErrorUpdatedSource = new Subject();\n    this.formErrorUpdatedSource.subscribe({ complete: () => this.formErrors = [] });\n    return this.formErrorUpdatedSource;\n  }\n\n  /**\n   * Validate the specified field value in a form, generating a form validation error if not defined.\n   * @param value - A form field to validate\n   * @param fieldDescription - used in error diagnostic\n   */\n  isRequiredFieldValid(value: string, fieldDescription: string): boolean {\n    if (value == null || '' === value) {\n      const errorMessage: string = fieldDescription + ' is required.';\n      this.addError(new ErrorInfo({message: errorMessage, level: ErrorLevel.ERROR, scope: ErrorScope.FORM}));\n      this.emitUpdatedEvent(ErrorScope.FORM);\n      return false;\n    }\n    return true;\n  }\n\n  private emitUpdatedEvent(scope?: ErrorScope) {\n    if (ErrorScope.FORM === scope) {\n      if (this.formErrorUpdatedSource && !this.formErrorUpdatedSource.closed) {\n        this.formErrorUpdatedSource.next(this.formErrors);\n      }\n    } else {\n      this.errorUpdatedSource.next(this.errors);\n    }\n  }\n\n  private excludeByIdentifier(errors: ErrorInfo[], identifier: string): ErrorInfo[] {\n    return errors.filter(e => e.identifier !== identifier);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorInfo.html":{"url":"classes/ErrorInfo.html","title":"class - ErrorInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/error.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _identifier\n                            \n                            \n                                    Private\n                                    Static\n                                errorIdentifierCounter\n                            \n                            \n                                field\n                            \n                            \n                                level\n                            \n                            \n                                mapping\n                            \n                            \n                                message\n                            \n                            \n                                object\n                            \n                            \n                                scope\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    identifier\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            errorIdentifierCounter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappedField\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorLevel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scope\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorScope\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        identifier\n                    \n                \n\n                \n                    \n                        getidentifier()\n                    \n                \n                            \n                                \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:59\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { MappingModel, MappedField } from './mapping.model';\n\nexport enum ErrorLevel {\n  DEBUG = 'DEBUG',\n  INFO = 'INFO',\n  WARN = 'WARN',\n  ERROR = 'ERROR'\n }\n\nexport enum ErrorScope {\n  APPLICATION = 'APPLICATION',\n  MAPPING = 'MAPPING',\n  FIELD = 'FIELD',\n  FORM = 'FORM'\n}\n\nexport enum ErrorType {\n  INTERNAL = 'INTERNAL',\n  USER = 'USER',\n  VALIDATION = 'VALIDATION',\n  PREVIEW = 'PREVIEW',\n  FORM = 'FORM'\n}\n\nexport class ErrorInfo {\n  private static errorIdentifierCounter = 0;\n  private _identifier: string;\n\n  message: string;\n  level: ErrorLevel;\n  scope: ErrorScope;\n  type: ErrorType;\n  mapping: MappingModel;\n  field: MappedField;\n  object: any;\n\n  constructor(init: Partial) {\n    this._identifier = ErrorInfo.errorIdentifierCounter.toString();\n    ErrorInfo.errorIdentifierCounter++;\n    Object.assign(this, init);\n  }\n\n  get identifier() {\n    return this._identifier;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExampleAppModule.html":{"url":"modules/ExampleAppModule.html","title":"module - ExampleAppModule","body":"\n                   \n\n\n\n\n    Modules\n    ExampleAppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExampleAppModule\n\n\n\ncluster_ExampleAppModule_declarations\n\n\n\ncluster_ExampleAppModule_imports\n\n\n\ncluster_ExampleAppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nExampleAppModule\n\nExampleAppModule\n\nExampleAppModule -->\n\nAppComponent->ExampleAppModule\n\n\n\n\n\nAtlasmapNavbarComponent\n\nAtlasmapNavbarComponent\n\nExampleAppModule -->\n\nAtlasmapNavbarComponent->ExampleAppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nExampleAppModule->AppComponent \n\n\n\n\n\nAtlasmapNavbarComponent \n\nAtlasmapNavbarComponent \n\nAtlasmapNavbarComponent  -->\n\nExampleAppModule->AtlasmapNavbarComponent \n\n\n\n\n\nDataMapperModule\n\nDataMapperModule\n\nExampleAppModule -->\n\nDataMapperModule->ExampleAppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/example-app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AtlasmapNavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DataMapperModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AtlasmapNavbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n    Copyright (C) 2017 Red Hat, Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { AtlasmapNavbarComponent } from './atlasmap-navbar.component';\n\nimport { DataMapperModule } from './lib/atlasmap-data-mapper/data-mapper.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AtlasmapNavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot([]),\n    DataMapperModule.withInterceptor(),\n  ],\n  providers: [],\n  bootstrap: [\n    AppComponent,\n    AtlasmapNavbarComponent,\n  ],\n})\n\nexport class ExampleAppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Examples.html":{"url":"classes/Examples.html","title":"class - Examples","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Examples\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/examples.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                pom\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            pom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `\n    \n\n        4.0.0\n        foo.bar\n        test.model\n        1.10.0\n        jar\n        Test :: Model\n\n        \n            \n                com.fasterxml.jackson.core\n                jackson-annotations\n                2.8.5\n            \n            \n                com.fasterxml.jackson.core\n                jackson-databind\n                2.8.5\n            \n            \n                com.fasterxml.jackson.core\n                jackson-core\n                2.8.5\n            \n        \n    \n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/examples.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Examples {\n  static pom = `\n    \n\n        4.0.0\n        foo.bar\n        test.model\n        1.10.0\n        jar\n        Test :: Model\n\n        \n            \n                com.fasterxml.jackson.core\n                jackson-annotations\n                2.8.5\n            \n            \n                com.fasterxml.jackson.core\n                jackson-databind\n                2.8.5\n            \n            \n                com.fasterxml.jackson.core\n                jackson-core\n                2.8.5\n            \n        \n    \n  `;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpressionNode.html":{"url":"classes/ExpressionNode.html","title":"class - ExpressionNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpressionNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Static\n                                sequence\n                            \n                            \n                                    Protected\n                                uuid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUuid\n                            \n                            \n                                    Abstract\n                                toHTML\n                            \n                            \n                                    Abstract\n                                toText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prefix: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prefix\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            sequence\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            uuid\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUuid\n                        \n                        \n                    \n                \n            \n            \n                \ngetUuid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toHTML()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { MappedField, MappingModel } from './mapping.model';\nimport { Subject } from 'rxjs';\nimport { ErrorScope, ErrorType, ErrorInfo, ErrorLevel } from './error.model';\n\nexport class ExpressionUpdatedEvent {\n  constructor(public node?: ExpressionNode, public offset?: number) {}\n}\n\nexport abstract class ExpressionNode {\n  protected static sequence = 0;\n  protected uuid;\n\n  constructor(prefix: string) {\n    this.uuid = prefix + ExpressionNode.sequence++;\n  }\n\n  getUuid() {\n    return this.uuid;\n  }\n\n  abstract toText(): string;\n  abstract toHTML(): string;\n}\n\nexport class TextNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-text-';\n\n  constructor(public str: string) {\n    super(TextNode.PREFIX);\n  }\n\n  toText(): string {\n    return this.str;\n  }\n\n  toHTML(): string {\n    return `${this.str.replace(/ /g, '&nbsp;')}`;\n  }\n\n}\n\nexport class FieldNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-field-';\n\n  constructor(private mapping: MappingModel, public field?: MappedField, private index?: number) {\n    super(FieldNode.PREFIX);\n    if (!field) {\n      this.field = mapping.getMappedFieldForIndex((index + 1).toString(), true);\n    }\n  }\n\n  toText(): string {\n    return '${' + (this.mapping.getIndexForMappedField(this.field) - 1) + '}';\n  }\n\n  toHTML(): string {\n    if (this.field && this.field.field) {\n      return `${this.field.field.name}`;\n    } else {\n      return `N/A`;\n    }\n  }\n\n}\n\nexport class ExpressionModel {\n  expressionUpdatedSource = new Subject();\n  expressionUpdated$ = this.expressionUpdatedSource.asObservable();\n\n  private _nodes: ExpressionNode[] = [];\n  private textCache = '';\n  private htmlCache = '';\n\n  constructor(private mapping: MappingModel, private cfg: ConfigModel) {}\n\n  generateInitialExpression() {\n    this.mapping.getUserMappedFields(true).forEach(f => this.appendFieldNode(f));\n  }\n\n  get nodes(): ReadonlyArray {\n    return this._nodes;\n  }\n\n  getLastNodeIndex() {\n    return this._nodes.length - 1;\n  }\n\n  getLastNode() {\n    return this._nodes[this.getLastNodeIndex()];\n  }\n\n  getNode(nodeId?: string): any {\n    if (!nodeId) {\n      return this.getLastNode();\n    }\n    return this._nodes.find(n => n.getUuid() === nodeId);\n  }\n\n  setConfigModel(cfg: ConfigModel) {\n    this.cfg = cfg;\n  }\n\n  /**\n   * Clear all text from the specified TextNode offset range or from the '@' to the end\n   * of the text node if no node ID is specified.\n   *\n   * Return the new UUID position indicator string or null.\n   *\n   * @param nodeId\n   * @param startOffset\n   * @param endOffset\n   */\n  clearText(nodeId?: string, startOffset?: number, endOffset?: number): TextNode {\n    let targetNode: TextNode;\n    let targetNodeIndex = 0;\n    if (!nodeId) {\n      const lastNode = this.getLastNode();\n      if (!(lastNode instanceof TextNode)) {\n        return null;\n      }\n      const keyPos = lastNode.str.indexOf('@');\n      if (keyPos !== -1) {\n        targetNodeIndex = this._nodes.indexOf(lastNode);\n        targetNode = lastNode;\n        targetNode.str = targetNode.str.substring(0, keyPos);\n      }\n    } else {\n      const node = this._nodes.find(n => n.getUuid() === nodeId);\n      if (!(node instanceof TextNode) || !endOffset) {\n        return null;\n      }\n      targetNode = node;\n      targetNodeIndex = this._nodes.indexOf(targetNode);\n      const cleanStr = targetNode.str.replace(targetNode.str.substring(startOffset, endOffset), '');\n      targetNode.str = cleanStr;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n    return targetNode;\n  }\n\n  /**\n   * Insert text into expression at specified position. If nodeId is not specified,\n   * it will be added to the end of expression. It parses the string\n   * and insert a set of TextNode & FieldNode if it contains field reference like ${0},\n   * otherwise just one TextNode.\n   * This emits ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   * @param str string to insert\n   * @param nodeId target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertText(str: string, nodeId?: string, offset?: number) {\n    this.insertNodes(this.createNodesFromText(str), nodeId, offset);\n  }\n\n  /**\n   * Insert an array of ExpressionNodes at the specified position. If insertPosition is\n   * not specified the nodes will be appended to the end of the expression.\n   * This emits an ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   *\n   * @param newNodes an array of ExpressionNode to add\n   * @param insertPosition target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertNodes(newNodes: ExpressionNode[], insertPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!insertPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        this._nodes.push(...newNodes);\n      } else if (last instanceof TextNode && newNodes[0] instanceof TextNode) {\n        const lastTextNode = last as TextNode;\n        (last as TextNode).str += (newNodes[0] as TextNode).str;\n        newNodes.splice(0, 1, last);\n        this._nodes.splice(this.getLastNodeIndex(), 1, ...newNodes);\n      } else if (last instanceof FieldNode && newNodes[0] instanceof FieldNode) {\n        this._nodes.splice(this.getLastNodeIndex(), 0, new TextNode(' + '), ...newNodes);\n      } else {\n        this._nodes.push(...newNodes);\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    const updatedEvent = new ExpressionUpdatedEvent();\n    const targetNode = this._nodes.find(n => n.getUuid() === insertPosition);\n    const targetNodeIndex = this._nodes.indexOf(targetNode);\n\n    if (targetNode instanceof TextNode) {\n      if (offset === undefined || offset === null || offset  0) {\n        if (newNodes[0] instanceof TextNode) {\n          targetNode.str = pre + (newNodes[0] as TextNode).str;\n          newNodes.splice(0, 1, targetNode);\n        } else {\n          targetNode.str = pre;\n          newNodes.splice(0, 0, targetNode);\n        }\n      }\n      if (post.length > 0) {\n        const lastNewNodeIndex = newNodes.length - 1;\n        if (newNodes[lastNewNodeIndex] instanceof TextNode) {\n          let mergedTextNode: TextNode;\n          if (pre.length > 0) {\n            mergedTextNode = newNodes[lastNewNodeIndex] as TextNode;\n            mergedTextNode.str += post;\n          } else {\n            mergedTextNode = targetNode;\n            mergedTextNode.str = (newNodes[lastNewNodeIndex]as TextNode).str + post;\n          }\n          newNodes.splice(lastNewNodeIndex, 1, mergedTextNode);\n        } else {\n          if (pre.length > 0) {\n            newNodes.push(new TextNode(post));\n          } else {\n            targetNode.str = post;\n            newNodes.push(targetNode);\n          }\n        }\n      }\n      this._nodes.splice(targetNodeIndex, 1, ...newNodes);\n      const lastAddedIndex = targetNodeIndex + newNodes.length - 1;\n      if (this._nodes[lastAddedIndex] instanceof FieldNode\n          && this.nodes[lastAddedIndex + 1] instanceof FieldNode) {\n        // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n        const space = new TextNode(' + ');\n        this._nodes.splice(lastAddedIndex + 1, 0, space);\n        updatedEvent.node = space;\n        updatedEvent.offset = 1;\n      } else if (this._nodes[lastAddedIndex] instanceof FieldNode) {\n        updatedEvent.node = this._nodes[lastAddedIndex + 1];\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = this._nodes[lastAddedIndex];\n        updatedEvent.offset = (this._nodes[lastAddedIndex] as TextNode).str.length - post.length;\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next(updatedEvent);\n      return;\n    }\n\n    // targetNode is a FieldNode - insert the text before it if offset is 0, otherwise after it\n    if (offset !== 0 && newNodes[0] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      newNodes.splice(0, 0, new TextNode(' + '));\n    }\n    const nextNodeIndex = offset === 0 ? targetNodeIndex : targetNodeIndex + 1;\n    const nextNode = this._nodes[nextNodeIndex];\n    if (nextNode instanceof TextNode && newNodes[newNodes.length - 1] instanceof TextNode) {\n      updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      nextNode.str = (newNodes[newNodes.length - 1] as TextNode).str + (nextNode as TextNode).str;\n      newNodes.pop();\n      this._nodes.splice(nextNodeIndex, 1, ...newNodes);\n      updatedEvent.node = nextNode;\n    } else if (nextNode instanceof FieldNode && newNodes[newNodes.length - 1] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      const space = new TextNode(' + ');\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes, space);\n      updatedEvent.node = space;\n      updatedEvent.offset = 1;\n    } else {\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes);\n      if (nextNode instanceof TextNode) {\n        updatedEvent.node = nextNode;\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = newNodes[newNodes.length - 1];\n        updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  removeToken(lastFieldRefRemoved: (removed: MappedField) => void, tokenPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!tokenPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        return;\n      }\n      if (last instanceof FieldNode) {\n        const removed = this._nodes.pop() as FieldNode;\n        if (!this._nodes.find(n => n instanceof FieldNode && n.field === removed.field)) {\n          lastFieldRefRemoved(removed.field);\n        }\n      } else if (last instanceof TextNode) {\n        if (last.str.length > 0) {\n          last.str = last.str.substring(0, last.str.length - 1);\n        } else {\n          this._nodes.pop();\n        }\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    let updatedEvent = new ExpressionUpdatedEvent();\n    let targetNode = this._nodes.find(n => n.getUuid() === tokenPosition);\n    let targetNodeIndex = this._nodes.indexOf(targetNode);\n    if (!targetNode || offset === -1) {\n      if (targetNodeIndex  n instanceof FieldNode && n.field === targetFieldNode.field)) {\n        lastFieldRefRemoved(targetFieldNode.field);\n      }\n      if (this._nodes.length > targetNodeIndex) {\n        if (this._nodes[targetNodeIndex - 1] instanceof TextNode\n            && this._nodes[targetNodeIndex] instanceof TextNode) {\n          const newOffset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n          (this._nodes[targetNodeIndex - 1] as TextNode).str\n              += (this._nodes[targetNodeIndex] as TextNode).str;\n          this._nodes.splice(targetNodeIndex, 1);\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = newOffset;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof FieldNode\n            && this._nodes[targetNodeIndex] instanceof FieldNode) {\n          const glue = new TextNode(' + ');\n          this._nodes.splice(targetNodeIndex, 0, glue);\n          updatedEvent.node = glue;\n          updatedEvent.offset = 3;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n        } else if (this._nodes[targetNodeIndex] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex];\n          updatedEvent.offset = 0;\n        }\n      } else {\n        // end of line\n        updatedEvent = undefined;\n      }\n    } else {\n      const targetString = (targetNode as TextNode).str;\n      (targetNode as TextNode).str = offset === 0 ? targetString.substr(1)\n        : targetString.substring(0, offset) + targetString.substring(offset + 1);\n      if ((targetNode as TextNode).str.length === 0) {\n        this.cfg.errorService.addError(new ErrorInfo({message: 'At least one space is required between field references.',\n          level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.USER, mapping: this.mapping}));\n        return;\n      }\n      updatedEvent.node = targetNode;\n      updatedEvent.offset = offset;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  /**\n   * Replace the content of the last text node with a substring terminating at the\n   * specified index.\n   *\n   * @param index\n   */\n  clearToEnd(index: number): void {\n    const last = this.getLastNode();\n    if (!(last instanceof TextNode)) {\n      return;\n    }\n    last.str = last.str.substring(0, index);\n  }\n\n  /**\n   * Reflect mapped source fields to the field references in the expression.\n   * Selected source fields are inserted into or appended to the expression,\n   * and unselected source fields are removed from expression.\n   *\n   * @param mapping Corresponding MappingModel object\n   */\n  updateFieldReference(mapping: MappingModel, insertPosition?: string, offset?: number) {\n    const mappedFields = mapping.getUserMappedFields(true);\n    const toAdd: MappedField[] = [];\n    const toRemove: MappedField[] = [];\n    let fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n\n    // Remove the field from the expression if unmapped.\n    for (const node of fieldNodes) {\n      if (mappedFields.includes(node.field)) {\n        continue;\n      }\n      const index = this._nodes.indexOf(node);\n      this._nodes.splice(index, 1);\n      if (this._nodes.length > index && this._nodes[index - 1] instanceof TextNode\n          && this._nodes[index] instanceof TextNode) {\n        (this._nodes[index - 1] as TextNode).str += (this._nodes[index] as TextNode).str;\n        this._nodes.splice(index, 1);\n      }\n    }\n\n    // Add the specified field into the expression - append if no insert position is specified.\n    fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n    for (const mfield of mappedFields) {\n      if (!fieldNodes.find(n => n.field === mfield)) {\n        if (insertPosition) {\n          this.insertNodes([new FieldNode(this.mapping, mfield)], insertPosition, offset);\n        } else {\n          this.appendFieldNode(mfield);\n        }\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  clear() {\n    this._nodes = [];\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  toText() {\n    return this.textCache;\n  }\n\n  toHTML() {\n    return this.htmlCache;\n  }\n\n  private updateCache() {\n    let answer = '';\n    this._nodes.forEach(node => answer += node.toText());\n    this.textCache = answer;\n    answer = '';\n    this._nodes.forEach(node => answer += node.toHTML());\n    this.htmlCache = answer;\n  }\n\n  private createNodesFromText(text: string): ExpressionNode[] {\n    const answer = [];\n    let position = -1;\n    let fn = null;\n\n    while ((position = text.search(/\\$\\{[0-9]+\\}/)) !== -1 ) {\n      if (position !== 0) {\n        answer.push(new TextNode(text.substring(0, position)));\n      }\n      const index = parseInt(text.substring(position + 2, text.indexOf('}')), 10);\n      fn = new FieldNode(this.mapping, null, index);\n      if (fn.field === null) {\n        this.cfg.errorService.addError(new ErrorInfo({message: `Unable to map expression index \"${index}\" to field node.`,\n          level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.INTERNAL, mapping: this.mapping}));\n      } else {\n        answer.push(fn);\n      }\n      text = text.substring(text.indexOf('}') + 1);\n    }\n    if (text.length > 0) {\n      answer.push(new TextNode(text));\n    }\n    return answer;\n  }\n\n  private appendFieldNode(mfield: MappedField) {\n    const lastNode = this._nodes.pop();\n    if (lastNode instanceof FieldNode) {\n        this._nodes.push(lastNode, new TextNode(' + '));\n    } else if (lastNode instanceof TextNode) {\n      if (lastNode.str.length === 0) {\n        this._nodes.push(new TextNode(' + '));\n      } else {\n        this._nodes.push(lastNode);\n      }\n    }\n    this._nodes.push(new FieldNode(this.mapping, mfield));\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpressionUpdatedEvent.html":{"url":"classes/ExpressionUpdatedEvent.html","title":"class - ExpressionUpdatedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpressionUpdatedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                node\n                            \n                            \n                                    Public\n                                    Optional\n                                offset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(node?: ExpressionNode, offset?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                  \n                                                        \n                                                                        ExpressionNode\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        offset\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            node\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ExpressionNode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            offset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { MappedField, MappingModel } from './mapping.model';\nimport { Subject } from 'rxjs';\nimport { ErrorScope, ErrorType, ErrorInfo, ErrorLevel } from './error.model';\n\nexport class ExpressionUpdatedEvent {\n  constructor(public node?: ExpressionNode, public offset?: number) {}\n}\n\nexport abstract class ExpressionNode {\n  protected static sequence = 0;\n  protected uuid;\n\n  constructor(prefix: string) {\n    this.uuid = prefix + ExpressionNode.sequence++;\n  }\n\n  getUuid() {\n    return this.uuid;\n  }\n\n  abstract toText(): string;\n  abstract toHTML(): string;\n}\n\nexport class TextNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-text-';\n\n  constructor(public str: string) {\n    super(TextNode.PREFIX);\n  }\n\n  toText(): string {\n    return this.str;\n  }\n\n  toHTML(): string {\n    return `${this.str.replace(/ /g, '&nbsp;')}`;\n  }\n\n}\n\nexport class FieldNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-field-';\n\n  constructor(private mapping: MappingModel, public field?: MappedField, private index?: number) {\n    super(FieldNode.PREFIX);\n    if (!field) {\n      this.field = mapping.getMappedFieldForIndex((index + 1).toString(), true);\n    }\n  }\n\n  toText(): string {\n    return '${' + (this.mapping.getIndexForMappedField(this.field) - 1) + '}';\n  }\n\n  toHTML(): string {\n    if (this.field && this.field.field) {\n      return `${this.field.field.name}`;\n    } else {\n      return `N/A`;\n    }\n  }\n\n}\n\nexport class ExpressionModel {\n  expressionUpdatedSource = new Subject();\n  expressionUpdated$ = this.expressionUpdatedSource.asObservable();\n\n  private _nodes: ExpressionNode[] = [];\n  private textCache = '';\n  private htmlCache = '';\n\n  constructor(private mapping: MappingModel, private cfg: ConfigModel) {}\n\n  generateInitialExpression() {\n    this.mapping.getUserMappedFields(true).forEach(f => this.appendFieldNode(f));\n  }\n\n  get nodes(): ReadonlyArray {\n    return this._nodes;\n  }\n\n  getLastNodeIndex() {\n    return this._nodes.length - 1;\n  }\n\n  getLastNode() {\n    return this._nodes[this.getLastNodeIndex()];\n  }\n\n  getNode(nodeId?: string): any {\n    if (!nodeId) {\n      return this.getLastNode();\n    }\n    return this._nodes.find(n => n.getUuid() === nodeId);\n  }\n\n  setConfigModel(cfg: ConfigModel) {\n    this.cfg = cfg;\n  }\n\n  /**\n   * Clear all text from the specified TextNode offset range or from the '@' to the end\n   * of the text node if no node ID is specified.\n   *\n   * Return the new UUID position indicator string or null.\n   *\n   * @param nodeId\n   * @param startOffset\n   * @param endOffset\n   */\n  clearText(nodeId?: string, startOffset?: number, endOffset?: number): TextNode {\n    let targetNode: TextNode;\n    let targetNodeIndex = 0;\n    if (!nodeId) {\n      const lastNode = this.getLastNode();\n      if (!(lastNode instanceof TextNode)) {\n        return null;\n      }\n      const keyPos = lastNode.str.indexOf('@');\n      if (keyPos !== -1) {\n        targetNodeIndex = this._nodes.indexOf(lastNode);\n        targetNode = lastNode;\n        targetNode.str = targetNode.str.substring(0, keyPos);\n      }\n    } else {\n      const node = this._nodes.find(n => n.getUuid() === nodeId);\n      if (!(node instanceof TextNode) || !endOffset) {\n        return null;\n      }\n      targetNode = node;\n      targetNodeIndex = this._nodes.indexOf(targetNode);\n      const cleanStr = targetNode.str.replace(targetNode.str.substring(startOffset, endOffset), '');\n      targetNode.str = cleanStr;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n    return targetNode;\n  }\n\n  /**\n   * Insert text into expression at specified position. If nodeId is not specified,\n   * it will be added to the end of expression. It parses the string\n   * and insert a set of TextNode & FieldNode if it contains field reference like ${0},\n   * otherwise just one TextNode.\n   * This emits ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   * @param str string to insert\n   * @param nodeId target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertText(str: string, nodeId?: string, offset?: number) {\n    this.insertNodes(this.createNodesFromText(str), nodeId, offset);\n  }\n\n  /**\n   * Insert an array of ExpressionNodes at the specified position. If insertPosition is\n   * not specified the nodes will be appended to the end of the expression.\n   * This emits an ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   *\n   * @param newNodes an array of ExpressionNode to add\n   * @param insertPosition target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertNodes(newNodes: ExpressionNode[], insertPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!insertPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        this._nodes.push(...newNodes);\n      } else if (last instanceof TextNode && newNodes[0] instanceof TextNode) {\n        const lastTextNode = last as TextNode;\n        (last as TextNode).str += (newNodes[0] as TextNode).str;\n        newNodes.splice(0, 1, last);\n        this._nodes.splice(this.getLastNodeIndex(), 1, ...newNodes);\n      } else if (last instanceof FieldNode && newNodes[0] instanceof FieldNode) {\n        this._nodes.splice(this.getLastNodeIndex(), 0, new TextNode(' + '), ...newNodes);\n      } else {\n        this._nodes.push(...newNodes);\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    const updatedEvent = new ExpressionUpdatedEvent();\n    const targetNode = this._nodes.find(n => n.getUuid() === insertPosition);\n    const targetNodeIndex = this._nodes.indexOf(targetNode);\n\n    if (targetNode instanceof TextNode) {\n      if (offset === undefined || offset === null || offset  0) {\n        if (newNodes[0] instanceof TextNode) {\n          targetNode.str = pre + (newNodes[0] as TextNode).str;\n          newNodes.splice(0, 1, targetNode);\n        } else {\n          targetNode.str = pre;\n          newNodes.splice(0, 0, targetNode);\n        }\n      }\n      if (post.length > 0) {\n        const lastNewNodeIndex = newNodes.length - 1;\n        if (newNodes[lastNewNodeIndex] instanceof TextNode) {\n          let mergedTextNode: TextNode;\n          if (pre.length > 0) {\n            mergedTextNode = newNodes[lastNewNodeIndex] as TextNode;\n            mergedTextNode.str += post;\n          } else {\n            mergedTextNode = targetNode;\n            mergedTextNode.str = (newNodes[lastNewNodeIndex]as TextNode).str + post;\n          }\n          newNodes.splice(lastNewNodeIndex, 1, mergedTextNode);\n        } else {\n          if (pre.length > 0) {\n            newNodes.push(new TextNode(post));\n          } else {\n            targetNode.str = post;\n            newNodes.push(targetNode);\n          }\n        }\n      }\n      this._nodes.splice(targetNodeIndex, 1, ...newNodes);\n      const lastAddedIndex = targetNodeIndex + newNodes.length - 1;\n      if (this._nodes[lastAddedIndex] instanceof FieldNode\n          && this.nodes[lastAddedIndex + 1] instanceof FieldNode) {\n        // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n        const space = new TextNode(' + ');\n        this._nodes.splice(lastAddedIndex + 1, 0, space);\n        updatedEvent.node = space;\n        updatedEvent.offset = 1;\n      } else if (this._nodes[lastAddedIndex] instanceof FieldNode) {\n        updatedEvent.node = this._nodes[lastAddedIndex + 1];\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = this._nodes[lastAddedIndex];\n        updatedEvent.offset = (this._nodes[lastAddedIndex] as TextNode).str.length - post.length;\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next(updatedEvent);\n      return;\n    }\n\n    // targetNode is a FieldNode - insert the text before it if offset is 0, otherwise after it\n    if (offset !== 0 && newNodes[0] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      newNodes.splice(0, 0, new TextNode(' + '));\n    }\n    const nextNodeIndex = offset === 0 ? targetNodeIndex : targetNodeIndex + 1;\n    const nextNode = this._nodes[nextNodeIndex];\n    if (nextNode instanceof TextNode && newNodes[newNodes.length - 1] instanceof TextNode) {\n      updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      nextNode.str = (newNodes[newNodes.length - 1] as TextNode).str + (nextNode as TextNode).str;\n      newNodes.pop();\n      this._nodes.splice(nextNodeIndex, 1, ...newNodes);\n      updatedEvent.node = nextNode;\n    } else if (nextNode instanceof FieldNode && newNodes[newNodes.length - 1] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      const space = new TextNode(' + ');\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes, space);\n      updatedEvent.node = space;\n      updatedEvent.offset = 1;\n    } else {\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes);\n      if (nextNode instanceof TextNode) {\n        updatedEvent.node = nextNode;\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = newNodes[newNodes.length - 1];\n        updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  removeToken(lastFieldRefRemoved: (removed: MappedField) => void, tokenPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!tokenPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        return;\n      }\n      if (last instanceof FieldNode) {\n        const removed = this._nodes.pop() as FieldNode;\n        if (!this._nodes.find(n => n instanceof FieldNode && n.field === removed.field)) {\n          lastFieldRefRemoved(removed.field);\n        }\n      } else if (last instanceof TextNode) {\n        if (last.str.length > 0) {\n          last.str = last.str.substring(0, last.str.length - 1);\n        } else {\n          this._nodes.pop();\n        }\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    let updatedEvent = new ExpressionUpdatedEvent();\n    let targetNode = this._nodes.find(n => n.getUuid() === tokenPosition);\n    let targetNodeIndex = this._nodes.indexOf(targetNode);\n    if (!targetNode || offset === -1) {\n      if (targetNodeIndex  n instanceof FieldNode && n.field === targetFieldNode.field)) {\n        lastFieldRefRemoved(targetFieldNode.field);\n      }\n      if (this._nodes.length > targetNodeIndex) {\n        if (this._nodes[targetNodeIndex - 1] instanceof TextNode\n            && this._nodes[targetNodeIndex] instanceof TextNode) {\n          const newOffset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n          (this._nodes[targetNodeIndex - 1] as TextNode).str\n              += (this._nodes[targetNodeIndex] as TextNode).str;\n          this._nodes.splice(targetNodeIndex, 1);\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = newOffset;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof FieldNode\n            && this._nodes[targetNodeIndex] instanceof FieldNode) {\n          const glue = new TextNode(' + ');\n          this._nodes.splice(targetNodeIndex, 0, glue);\n          updatedEvent.node = glue;\n          updatedEvent.offset = 3;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n        } else if (this._nodes[targetNodeIndex] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex];\n          updatedEvent.offset = 0;\n        }\n      } else {\n        // end of line\n        updatedEvent = undefined;\n      }\n    } else {\n      const targetString = (targetNode as TextNode).str;\n      (targetNode as TextNode).str = offset === 0 ? targetString.substr(1)\n        : targetString.substring(0, offset) + targetString.substring(offset + 1);\n      if ((targetNode as TextNode).str.length === 0) {\n        this.cfg.errorService.addError(new ErrorInfo({message: 'At least one space is required between field references.',\n          level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.USER, mapping: this.mapping}));\n        return;\n      }\n      updatedEvent.node = targetNode;\n      updatedEvent.offset = offset;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  /**\n   * Replace the content of the last text node with a substring terminating at the\n   * specified index.\n   *\n   * @param index\n   */\n  clearToEnd(index: number): void {\n    const last = this.getLastNode();\n    if (!(last instanceof TextNode)) {\n      return;\n    }\n    last.str = last.str.substring(0, index);\n  }\n\n  /**\n   * Reflect mapped source fields to the field references in the expression.\n   * Selected source fields are inserted into or appended to the expression,\n   * and unselected source fields are removed from expression.\n   *\n   * @param mapping Corresponding MappingModel object\n   */\n  updateFieldReference(mapping: MappingModel, insertPosition?: string, offset?: number) {\n    const mappedFields = mapping.getUserMappedFields(true);\n    const toAdd: MappedField[] = [];\n    const toRemove: MappedField[] = [];\n    let fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n\n    // Remove the field from the expression if unmapped.\n    for (const node of fieldNodes) {\n      if (mappedFields.includes(node.field)) {\n        continue;\n      }\n      const index = this._nodes.indexOf(node);\n      this._nodes.splice(index, 1);\n      if (this._nodes.length > index && this._nodes[index - 1] instanceof TextNode\n          && this._nodes[index] instanceof TextNode) {\n        (this._nodes[index - 1] as TextNode).str += (this._nodes[index] as TextNode).str;\n        this._nodes.splice(index, 1);\n      }\n    }\n\n    // Add the specified field into the expression - append if no insert position is specified.\n    fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n    for (const mfield of mappedFields) {\n      if (!fieldNodes.find(n => n.field === mfield)) {\n        if (insertPosition) {\n          this.insertNodes([new FieldNode(this.mapping, mfield)], insertPosition, offset);\n        } else {\n          this.appendFieldNode(mfield);\n        }\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  clear() {\n    this._nodes = [];\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  toText() {\n    return this.textCache;\n  }\n\n  toHTML() {\n    return this.htmlCache;\n  }\n\n  private updateCache() {\n    let answer = '';\n    this._nodes.forEach(node => answer += node.toText());\n    this.textCache = answer;\n    answer = '';\n    this._nodes.forEach(node => answer += node.toHTML());\n    this.htmlCache = answer;\n  }\n\n  private createNodesFromText(text: string): ExpressionNode[] {\n    const answer = [];\n    let position = -1;\n    let fn = null;\n\n    while ((position = text.search(/\\$\\{[0-9]+\\}/)) !== -1 ) {\n      if (position !== 0) {\n        answer.push(new TextNode(text.substring(0, position)));\n      }\n      const index = parseInt(text.substring(position + 2, text.indexOf('}')), 10);\n      fn = new FieldNode(this.mapping, null, index);\n      if (fn.field === null) {\n        this.cfg.errorService.addError(new ErrorInfo({message: `Unable to map expression index \"${index}\" to field node.`,\n          level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.INTERNAL, mapping: this.mapping}));\n      } else {\n        answer.push(fn);\n      }\n      text = text.substring(text.indexOf('}') + 1);\n    }\n    if (text.length > 0) {\n      answer.push(new TextNode(text));\n    }\n    return answer;\n  }\n\n  private appendFieldNode(mfield: MappedField) {\n    const lastNode = this._nodes.pop();\n    if (lastNode instanceof FieldNode) {\n        this._nodes.push(lastNode, new TextNode(' + '));\n    } else if (lastNode instanceof TextNode) {\n      if (lastNode.str.length === 0) {\n        this._nodes.push(new TextNode(' + '));\n      } else {\n        this._nodes.push(lastNode);\n      }\n    }\n    this._nodes.push(new FieldNode(this.mapping, mfield));\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldAction.html":{"url":"classes/FieldAction.html","title":"class - FieldAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                argumentValues\n                            \n                            \n                                definition\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                getArgumentValue\n                            \n                            \n                                setArgumentValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            argumentValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FieldActionArgumentValue[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            definition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldActionDefinition\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:77\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(definition: FieldActionDefinition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                FieldActionDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldAction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getArgumentValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetArgumentValue(argumentName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argumentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldActionArgumentValue\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setArgumentValue\n                        \n                        \n                    \n                \n            \n            \n                \nsetArgumentValue(argumentName: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argumentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FieldActionArgument {\n  name: string = null;\n  type = 'STRING';\n  values = null;\n  serviceObject: any = new Object();\n}\n\nexport class FieldActionArgumentValue {\n  name: string = null;\n  value: string = null;\n}\n\nexport enum Multiplicity {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  ZERO_TO_ONE = 'ZERO_TO_ONE'\n}\n\nexport class FieldActionDefinition {\n  name: string;\n  isCustom: boolean;\n  arguments: FieldActionArgument[] = [];\n  method: string;\n  sourceType = 'undefined';\n  targetType = 'undefined';\n  multiplicity = Multiplicity.ONE_TO_ONE;\n  serviceObject: any = new Object();\n\n  populateFieldAction(action: FieldAction): void {\n    action.name = this.name;\n    action.definition = this;\n\n    // Use the parsed values if present, otherwise set to '0'.\n    if (action.argumentValues == null || action.argumentValues.length === 0) {\n      action.argumentValues = [];\n      for (const arg of this.arguments) {\n\n        // Default the input field to 0 for numerics\n        if (['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(arg.type) !== -1) {\n          action.setArgumentValue(arg.name, '0');\n        } else {\n          action.setArgumentValue(arg.name, '');\n        }\n      }\n    }\n  }\n\n  getArgumentForName(name: string): FieldActionArgument {\n    for (const argument of this.arguments) {\n      if (argument.name === name) {\n        return argument;\n      }\n    }\n    return null;\n  }\n\n}\n\nexport class FieldAction {\n  name: string;\n  definition: FieldActionDefinition = null;\n  argumentValues: FieldActionArgumentValue[] = [];\n\n  static create(definition: FieldActionDefinition): FieldAction {\n    const instance = new FieldAction();\n    instance.definition = definition;\n    instance.name = definition.name;\n    return instance;\n  }\n\n  getArgumentValue(argumentName: string): FieldActionArgumentValue {\n    for (const argValue of this.argumentValues) {\n      if (argValue.name === argumentName) {\n        return argValue;\n      }\n    }\n    const newArgValue: FieldActionArgumentValue = new FieldActionArgumentValue();\n    newArgValue.name = argumentName;\n    newArgValue.value = '0';\n    this.argumentValues.push(newArgValue);\n    return newArgValue;\n  }\n\n  setArgumentValue(argumentName: string, value: string): void {\n    this.getArgumentValue(argumentName).value = value;\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldActionArgument.html":{"url":"classes/FieldActionArgument.html","title":"class - FieldActionArgument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldActionArgument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                serviceObject\n                            \n                            \n                                type\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serviceObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : new Object()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            values\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FieldActionArgument {\n  name: string = null;\n  type = 'STRING';\n  values = null;\n  serviceObject: any = new Object();\n}\n\nexport class FieldActionArgumentValue {\n  name: string = null;\n  value: string = null;\n}\n\nexport enum Multiplicity {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  ZERO_TO_ONE = 'ZERO_TO_ONE'\n}\n\nexport class FieldActionDefinition {\n  name: string;\n  isCustom: boolean;\n  arguments: FieldActionArgument[] = [];\n  method: string;\n  sourceType = 'undefined';\n  targetType = 'undefined';\n  multiplicity = Multiplicity.ONE_TO_ONE;\n  serviceObject: any = new Object();\n\n  populateFieldAction(action: FieldAction): void {\n    action.name = this.name;\n    action.definition = this;\n\n    // Use the parsed values if present, otherwise set to '0'.\n    if (action.argumentValues == null || action.argumentValues.length === 0) {\n      action.argumentValues = [];\n      for (const arg of this.arguments) {\n\n        // Default the input field to 0 for numerics\n        if (['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(arg.type) !== -1) {\n          action.setArgumentValue(arg.name, '0');\n        } else {\n          action.setArgumentValue(arg.name, '');\n        }\n      }\n    }\n  }\n\n  getArgumentForName(name: string): FieldActionArgument {\n    for (const argument of this.arguments) {\n      if (argument.name === name) {\n        return argument;\n      }\n    }\n    return null;\n  }\n\n}\n\nexport class FieldAction {\n  name: string;\n  definition: FieldActionDefinition = null;\n  argumentValues: FieldActionArgumentValue[] = [];\n\n  static create(definition: FieldActionDefinition): FieldAction {\n    const instance = new FieldAction();\n    instance.definition = definition;\n    instance.name = definition.name;\n    return instance;\n  }\n\n  getArgumentValue(argumentName: string): FieldActionArgumentValue {\n    for (const argValue of this.argumentValues) {\n      if (argValue.name === argumentName) {\n        return argValue;\n      }\n    }\n    const newArgValue: FieldActionArgumentValue = new FieldActionArgumentValue();\n    newArgValue.name = argumentName;\n    newArgValue.value = '0';\n    this.argumentValues.push(newArgValue);\n    return newArgValue;\n  }\n\n  setArgumentValue(argumentName: string, value: string): void {\n    this.getArgumentValue(argumentName).value = value;\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldActionArgumentValue.html":{"url":"classes/FieldActionArgumentValue.html","title":"class - FieldActionArgumentValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldActionArgumentValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FieldActionArgument {\n  name: string = null;\n  type = 'STRING';\n  values = null;\n  serviceObject: any = new Object();\n}\n\nexport class FieldActionArgumentValue {\n  name: string = null;\n  value: string = null;\n}\n\nexport enum Multiplicity {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  ZERO_TO_ONE = 'ZERO_TO_ONE'\n}\n\nexport class FieldActionDefinition {\n  name: string;\n  isCustom: boolean;\n  arguments: FieldActionArgument[] = [];\n  method: string;\n  sourceType = 'undefined';\n  targetType = 'undefined';\n  multiplicity = Multiplicity.ONE_TO_ONE;\n  serviceObject: any = new Object();\n\n  populateFieldAction(action: FieldAction): void {\n    action.name = this.name;\n    action.definition = this;\n\n    // Use the parsed values if present, otherwise set to '0'.\n    if (action.argumentValues == null || action.argumentValues.length === 0) {\n      action.argumentValues = [];\n      for (const arg of this.arguments) {\n\n        // Default the input field to 0 for numerics\n        if (['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(arg.type) !== -1) {\n          action.setArgumentValue(arg.name, '0');\n        } else {\n          action.setArgumentValue(arg.name, '');\n        }\n      }\n    }\n  }\n\n  getArgumentForName(name: string): FieldActionArgument {\n    for (const argument of this.arguments) {\n      if (argument.name === name) {\n        return argument;\n      }\n    }\n    return null;\n  }\n\n}\n\nexport class FieldAction {\n  name: string;\n  definition: FieldActionDefinition = null;\n  argumentValues: FieldActionArgumentValue[] = [];\n\n  static create(definition: FieldActionDefinition): FieldAction {\n    const instance = new FieldAction();\n    instance.definition = definition;\n    instance.name = definition.name;\n    return instance;\n  }\n\n  getArgumentValue(argumentName: string): FieldActionArgumentValue {\n    for (const argValue of this.argumentValues) {\n      if (argValue.name === argumentName) {\n        return argValue;\n      }\n    }\n    const newArgValue: FieldActionArgumentValue = new FieldActionArgumentValue();\n    newArgValue.name = argumentName;\n    newArgValue.value = '0';\n    this.argumentValues.push(newArgValue);\n    return newArgValue;\n  }\n\n  setArgumentValue(argumentName: string, value: string): void {\n    this.getArgumentValue(argumentName).value = value;\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldActionDefinition.html":{"url":"classes/FieldActionDefinition.html","title":"class - FieldActionDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldActionDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                arguments\n                            \n                            \n                                isCustom\n                            \n                            \n                                method\n                            \n                            \n                                multiplicity\n                            \n                            \n                                name\n                            \n                            \n                                serviceObject\n                            \n                            \n                                sourceType\n                            \n                            \n                                targetType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getArgumentForName\n                            \n                            \n                                populateFieldAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arguments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FieldActionArgument[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCustom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            method\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            multiplicity\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Multiplicity.ONE_TO_ONE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serviceObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : new Object()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'undefined'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'undefined'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:42\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getArgumentForName\n                        \n                        \n                    \n                \n            \n            \n                \ngetArgumentForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldActionArgument\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            populateFieldAction\n                        \n                        \n                    \n                \n            \n            \n                \npopulateFieldAction(action: FieldAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FieldActionArgument {\n  name: string = null;\n  type = 'STRING';\n  values = null;\n  serviceObject: any = new Object();\n}\n\nexport class FieldActionArgumentValue {\n  name: string = null;\n  value: string = null;\n}\n\nexport enum Multiplicity {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  ZERO_TO_ONE = 'ZERO_TO_ONE'\n}\n\nexport class FieldActionDefinition {\n  name: string;\n  isCustom: boolean;\n  arguments: FieldActionArgument[] = [];\n  method: string;\n  sourceType = 'undefined';\n  targetType = 'undefined';\n  multiplicity = Multiplicity.ONE_TO_ONE;\n  serviceObject: any = new Object();\n\n  populateFieldAction(action: FieldAction): void {\n    action.name = this.name;\n    action.definition = this;\n\n    // Use the parsed values if present, otherwise set to '0'.\n    if (action.argumentValues == null || action.argumentValues.length === 0) {\n      action.argumentValues = [];\n      for (const arg of this.arguments) {\n\n        // Default the input field to 0 for numerics\n        if (['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(arg.type) !== -1) {\n          action.setArgumentValue(arg.name, '0');\n        } else {\n          action.setArgumentValue(arg.name, '');\n        }\n      }\n    }\n  }\n\n  getArgumentForName(name: string): FieldActionArgument {\n    for (const argument of this.arguments) {\n      if (argument.name === name) {\n        return argument;\n      }\n    }\n    return null;\n  }\n\n}\n\nexport class FieldAction {\n  name: string;\n  definition: FieldActionDefinition = null;\n  argumentValues: FieldActionArgumentValue[] = [];\n\n  static create(definition: FieldActionDefinition): FieldAction {\n    const instance = new FieldAction();\n    instance.definition = definition;\n    instance.name = definition.name;\n    return instance;\n  }\n\n  getArgumentValue(argumentName: string): FieldActionArgumentValue {\n    for (const argValue of this.argumentValues) {\n      if (argValue.name === argumentName) {\n        return argValue;\n      }\n    }\n    const newArgValue: FieldActionArgumentValue = new FieldActionArgumentValue();\n    newArgValue.name = argumentName;\n    newArgValue.value = '0';\n    this.argumentValues.push(newArgValue);\n    return newArgValue;\n  }\n\n  setArgumentValue(argumentName: string, value: string): void {\n    this.getArgumentValue(argumentName).value = value;\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FieldActionService.html":{"url":"injectables/FieldActionService.html","title":"injectable - FieldActionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FieldActionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/field-action.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                cfg\n                            \n                            \n                                    Private\n                                headers\n                            \n                            \n                                isInitialized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                appliesToField\n                            \n                            \n                                    Private\n                                appliesToSourceField\n                            \n                            \n                                    Private\n                                appliesToTargetField\n                            \n                            \n                                    Private\n                                clearActionDefinitions\n                            \n                            \n                                    Private\n                                doFetchFieldActions\n                            \n                            \n                                    Private\n                                extractFieldActionDefinition\n                            \n                            \n                                    Async\n                                fetchFieldActions\n                            \n                            \n                                getActionDefinitionForName\n                            \n                            \n                                getActionsAppliesToField\n                            \n                            \n                                    Private\n                                getActualField\n                            \n                            \n                                    Private\n                                matchesDate\n                            \n                            \n                                    Private\n                                matchesNumeric\n                            \n                            \n                                    Private\n                                sortFieldActionDefinitions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorService: ErrorHandlerService, logger: NGXLogger, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorService\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            appliesToField\n                        \n                        \n                    \n                \n            \n            \n                \nappliesToField(action: FieldActionDefinition, mapping: MappingModel, isSource: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:245\n                \n            \n\n\n            \n                \n                    Return true if the action's source/target types and collection types match the respective source/target\nfield properties for source transformations, or matches the respective target field properties only for\na target transformation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldActionDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            appliesToSourceField\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    appliesToSourceField(action: FieldActionDefinition, mapping: MappingModel, selectedSourceField: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:282\n                \n            \n\n\n            \n                \n                    Check if it could be applied to source field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldActionDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FieldMappingPair\n\n                                    \n                                \n                                \n                                    selectedSourceField\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected source field\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            appliesToTargetField\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    appliesToTargetField(action: FieldActionDefinition, mapping: MappingModel, selectedTargetField: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:307\n                \n            \n\n\n            \n                \n                    Check if it could be applied for target field. Target type may not change.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldActionDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FieldMappingPair\n\n                                    \n                                \n                                \n                                    selectedTargetField\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected target field\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clearActionDefinitions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearActionDefinitions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:360\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            doFetchFieldActions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doFetchFieldActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractFieldActionDefinition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractFieldActionDefinition(actionDetail: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actionDetail\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldActionDefinition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchFieldActions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchFieldActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionDefinitionForName\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionDefinitionForName(actionName: string, multiplicity?: Multiplicity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    multiplicity\n                                    \n                                                Multiplicity\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldActionDefinition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionsAppliesToField\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionsAppliesToField(mapping: MappingModel, isSource: boolean, multiplicity: Multiplicity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:137\n                \n            \n\n\n            \n                \n                    Return the field action Definitions applicable to the specified field mapping pair.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                                \n                                    multiplicity\n                                    \n                                                Multiplicity\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        Multiplicity.ONE_TO_ONE\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     FieldActionDefinition[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getActualField\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getActualField(mapping: MappingModel, isSource: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:267\n                \n            \n\n\n            \n                \n                    Return the first non-padding field in either the source or target mappings.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Field\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            matchesDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    matchesDate(candidateType: string, selectedType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:342\n                \n            \n\n\n            \n                \n                    Return true if the candidate type and selected type are generically a date, false otherwise.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    candidateType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            matchesNumeric\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    matchesNumeric(candidateType: string, selectedType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:354\n                \n            \n\n\n            \n                \n                    Return true if the candidate type and selected type are generically numeric, false otherwise.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    candidateType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            sortFieldActionDefinitions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sortFieldActionDefinitions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {\n    [Multiplicity.ONE_TO_ONE]: [],\n    [Multiplicity.ONE_TO_MANY]: [],\n    [Multiplicity.MANY_TO_ONE]: [],\n    [Multiplicity.ZERO_TO_ONE]: []\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new HttpHeaders(\n    {'Content-Type': 'application/json; application/octet-stream',\n     'Accept':       'application/json; application/octet-stream'})\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isInitialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ConfigModel } from '../models/config.model';\nimport { NGXLogger } from 'ngx-logger';\nimport { ErrorHandlerService } from './error-handler.service';\nimport { FieldActionDefinition, FieldActionArgument, Multiplicity } from '../models/field-action.model';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { MappingModel } from '../models/mapping.model';\nimport { Field } from '../models/field.model';\nimport { ErrorInfo, ErrorLevel, ErrorScope, ErrorType } from '../models/error.model';\n\n@Injectable()\nexport class FieldActionService {\n  cfg: ConfigModel = ConfigModel.getConfig();\n  actions: { [key in Multiplicity]: FieldActionDefinition[]} = {\n    [Multiplicity.ONE_TO_ONE]: [],\n    [Multiplicity.ONE_TO_MANY]: [],\n    [Multiplicity.MANY_TO_ONE]: [],\n    [Multiplicity.ZERO_TO_ONE]: []\n  };\n\n  isInitialized = false;\n  private headers = new HttpHeaders(\n    {'Content-Type': 'application/json; application/octet-stream',\n     'Accept':       'application/json; application/octet-stream'});\n\n  constructor(\n    private errorService: ErrorHandlerService,\n    private logger: NGXLogger,\n    private http: HttpClient) {}\n\n  async fetchFieldActions(): Promise {\n    return new Promise((resolve, reject) => {\n      if (this.cfg.preloadedFieldActionMetadata) {\n        this.clearActionDefinitions();\n        if (this.cfg.preloadedFieldActionMetadata && this.cfg.preloadedFieldActionMetadata.ActionDetails) {\n          for (const actionDetail of this.cfg.preloadedFieldActionMetadata.ActionDetails.actionDetail) {\n            const fieldActionDefinition = this.extractFieldActionDefinition(actionDetail);\n            if (!fieldActionDefinition.multiplicity) {\n              this.logger.debug(`Field action (${fieldActionDefinition.name}) is missing multiplicity, ingoring`);\n              continue;\n            }\n            if (fieldActionDefinition.name === 'Expression') { // Expression is handled in special manner\n              continue;\n            }\n            this.actions[fieldActionDefinition.multiplicity].push(fieldActionDefinition);\n          }\n        }\n        this.sortFieldActionDefinitions();\n        this.isInitialized = true;\n        resolve(true);\n        return;\n      }\n\n      if (this.cfg.mappingService == null) {\n        this.cfg.errorService.addError(new ErrorInfo({message: 'Mapping service is not provided. Field Actions will not be used.',\n          level: ErrorLevel.WARN, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL}));\n        this.isInitialized = true;\n        resolve(true);\n        return;\n      } else if (this.cfg.initCfg.baseMappingServiceUrl == null) {\n        this.cfg.errorService.addError(new ErrorInfo({message: 'Mapping service URL is not provided. Field Actions will not be used.',\n        level: ErrorLevel.WARN, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL}));\n        this.isInitialized = true;\n        resolve(true);\n        return;\n      }\n\n      // Fetch the field actions from the runtime service.\n      this.doFetchFieldActions().toPromise()\n        .then((fetchedActionConfigs: FieldActionDefinition[]) => {\n          if (fetchedActionConfigs.length === 1) {\n            this.logger.debug('No field action was returned from backend');\n            resolve(false);\n          }\n          this.clearActionDefinitions();\n          fetchedActionConfigs.forEach(action => {\n            if (!action.multiplicity) {\n              this.logger.debug(`Field action  (${action.name}) is missing multiplicity, ignoring`);\n              return;\n            }\n            if (action.name === 'Expression') { // Expression is handled in special manner\n              return;\n            }\n            this.actions[action.multiplicity].push(action);\n          });\n          this.sortFieldActionDefinitions();\n          this.isInitialized = true;\n          resolve(true);\n        }).catch((error: any) => {\n          if (error.status === 0) {\n            reject(`Fatal network error: Could not connect to AtlasMap design runtime service. (${error})`);\n          } else {\n            reject(`Could not load field action configs: (${error.message})`);\n          }\n        });\n    });\n  }\n\n  getActionDefinitionForName(actionName: string, multiplicity?: Multiplicity): FieldActionDefinition {\n    if (!this.actions || !actionName) {\n      return null;\n    }\n    let actions: FieldActionDefinition[] = [];\n    if (multiplicity) {\n      actions = this.actions[multiplicity];\n     } else {\n       Object.values(this.actions).forEach(arr => actions = actions.concat(arr));\n     }\n    for (const actionDef of actions) {\n      if (actionName === actionDef.name) {\n        return actionDef;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Return the field action Definitions applicable to the specified field mapping pair.\n   * @param mapping\n   */\n  getActionsAppliesToField(mapping: MappingModel, isSource: boolean = true,\n  multiplicity: Multiplicity = Multiplicity.ONE_TO_ONE): FieldActionDefinition[] {\n    if (!mapping || !this.actions) {\n      return [];\n    }\n    return this.actions[multiplicity].filter(d => this.appliesToField(d, mapping, isSource));\n  }\n\n  private doFetchFieldActions(): Observable {\n    return new Observable((observer: any) => {\n      const actionConfigs: FieldActionDefinition[] = [];\n      const url: string = this.cfg.initCfg.baseMappingServiceUrl + 'fieldActions';\n      this.cfg.logger.trace('Field Action Config Request');\n      this.http.get(url, { headers: this.headers }).toPromise().then((body: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Field Action Config Response: ${JSON.stringify(body)}`);\n        }\n        if (body && body.ActionDetails\n          && body.ActionDetails.actionDetail\n          && body.ActionDetails.actionDetail.length) {\n          for (const actionDetail of body.ActionDetails.actionDetail) {\n            const fieldActionConfig = this.extractFieldActionDefinition(actionDetail);\n            actionConfigs.push(fieldActionConfig);\n          }\n        }\n        observer.next(actionConfigs);\n        observer.complete();\n      }).catch((error: any) => {\n        observer.error(error);\n        observer.next(actionConfigs);\n        observer.complete();\n      });\n    });\n  }\n\n  private extractFieldActionDefinition(actionDetail: any): FieldActionDefinition {\n    if (this.cfg.isDebugEnabled()) {\n      this.cfg.logger.debug(`Deserializing field action definition: ${JSON.stringify(actionDetail)}`);\n    }\n\n    const fieldActionDefinition = new FieldActionDefinition();\n    fieldActionDefinition.name = actionDetail.name;\n    fieldActionDefinition.isCustom = actionDetail.custom;\n    fieldActionDefinition.sourceType = actionDetail.sourceType;\n    fieldActionDefinition.targetType = actionDetail.targetType;\n    fieldActionDefinition.method = actionDetail.method;\n    fieldActionDefinition.multiplicity = actionDetail.multiplicity;\n    fieldActionDefinition.serviceObject = actionDetail;\n\n    if (actionDetail.actionSchema) {\n\n      for (const key of Object.keys(actionDetail.actionSchema.properties)) {\n        const propertyObject = actionDetail.actionSchema.properties[key];\n        if (key === '@type') {\n          fieldActionDefinition.name = propertyObject.const;\n          continue;\n        }\n        const argumentDefinition = new FieldActionArgument();\n        argumentDefinition.name = key;\n        argumentDefinition.type = propertyObject.type;\n        argumentDefinition.values = propertyObject.enum;\n        argumentDefinition.serviceObject = propertyObject;\n        fieldActionDefinition.arguments.push(argumentDefinition);\n      }\n    }\n    return fieldActionDefinition;\n  }\n\n  private sortFieldActionDefinitions() {\n    Object.keys(this.actions).forEach(multiplicity => {\n      const definitions = this.actions[multiplicity];\n      const sortedActionDefinitions: FieldActionDefinition[] = [];\n      if (definitions == null || definitions.length === 0) {\n        return;\n      }\n\n      const defsByName: { [key: string]: FieldActionDefinition[]; } = {};\n      const defNames: string[] = [];\n      for (const fieldActionConfig of definitions) {\n        const name: string = fieldActionConfig.name;\n        let sameNamedDefs: FieldActionDefinition[] = defsByName[name];\n        if (!sameNamedDefs) {\n          sameNamedDefs = [];\n          defNames.push(name);\n        }\n        sameNamedDefs.push(fieldActionConfig);\n        defsByName[name] = sameNamedDefs;\n      }\n\n      defNames.sort();\n\n      for (const name of defNames) {\n        const sameNamedDefs: FieldActionDefinition[] = defsByName[name];\n        for (const fieldActionDefinition of sameNamedDefs) {\n          sortedActionDefinitions.push(fieldActionDefinition);\n        }\n      }\n      this.actions[multiplicity] = sortedActionDefinitions;\n    });\n  }\n\n  /**\n   * Return true if the action's source/target types and collection types match the respective source/target\n   * field properties for source transformations, or matches the respective target field properties only for\n   * a target transformation.\n   *\n   * @param mapping\n   */\n  appliesToField(action: FieldActionDefinition, mapping: MappingModel, isSource: boolean): boolean {\n\n    if (mapping == null) {\n      return false;\n    }\n    const selectedSourceField: Field = this.getActualField(mapping, true);\n    const selectedTargetField: Field = this.getActualField(mapping, false);\n\n    if ((isSource && selectedSourceField == null) || (!isSource) && selectedTargetField == null) {\n      return false;\n    }\n\n    return isSource ? this.appliesToSourceField(action, mapping, selectedSourceField)\n     : this.appliesToTargetField(action, mapping, selectedTargetField);\n  }\n\n  /**\n   * Return the first non-padding field in either the source or target mappings.\n   *\n   * @param mapping\n   * @param isSource\n   */\n  private getActualField(mapping: MappingModel, isSource: boolean): Field {\n    let targetField: Field = null;\n    for (targetField of mapping.getFields(isSource)) {\n      if ((targetField.name !== '')) {\n        break;\n      }\n    }\n    return targetField;\n  }\n\n  /**\n   * Check if it could be applied to source field.\n   * @param mapping FieldMappingPair\n   * @param selectedSourceField selected source field\n   */\n  private appliesToSourceField(action: FieldActionDefinition, mapping: MappingModel, selectedSourceField: Field): boolean {\n\n    // Check for matching types - date.\n    if (this.matchesDate(action.sourceType, selectedSourceField.type)) {\n      return true;\n    }\n\n    // Check for matching types - numeric.\n    if (this.matchesNumeric(action.sourceType, selectedSourceField.type)) {\n      return true;\n    }\n\n    // First check if the source types match.\n    if ((action.sourceType === 'ANY') || (selectedSourceField.type === action.sourceType)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Check if it could be applied for target field. Target type may not change.\n   * @param mapping FieldMappingPair\n   * @param selectedTargetField selected target field\n   */\n  private appliesToTargetField(action: FieldActionDefinition, mapping: MappingModel, selectedTargetField: Field): boolean {\n    if (selectedTargetField == null) {\n      return false;\n    }\n\n    if (action.multiplicity !== Multiplicity.ONE_TO_ONE) {\n      return false;\n    }\n\n    // Check for matching types - date.\n    if (this.matchesDate(action.sourceType, selectedTargetField.type)\n     && this.matchesDate(action.targetType, selectedTargetField.type)) {\n      return true;\n    }\n\n    // Check for matching types - numeric.\n    if (this.matchesNumeric(action.sourceType, selectedTargetField.type)\n     && this.matchesNumeric(action.targetType, selectedTargetField.type)) {\n      return true;\n    }\n\n    if (action.sourceType !== 'ANY' && action.sourceType !== selectedTargetField.type) {\n      return false;\n    }\n\n    // All other types must match the selected field types with the candidate field action types.\n    return (action.targetType === 'ANY' || selectedTargetField.type === action.targetType);\n  }\n\n  /**\n   * Return true if the candidate type and selected type are generically a date, false otherwise.\n   *\n   * @param candidateType\n   * @param selectedType\n   */\n  private matchesDate(candidateType: string, selectedType: string): boolean {\n    return ((candidateType === 'ANY') ||\n      (candidateType === 'ANY_DATE' &&\n        ['DATE', 'DATE_TIME', 'DATE_TIME_TZ', 'TIME'].indexOf(selectedType) !== -1));\n  }\n\n  /**\n   * Return true if the candidate type and selected type are generically numeric, false otherwise.\n   *\n   * @param candidateType\n   * @param selectedType\n   */\n  private matchesNumeric(candidateType: string, selectedType: string): boolean {\n    return ((candidateType === 'ANY') ||\n      (candidateType === 'NUMBER' &&\n        ['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(selectedType) !== -1));\n  }\n\n  private clearActionDefinitions() {\n    Object.keys(Multiplicity).forEach(m => this.actions[m] = []);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FieldEditComponent.html":{"url":"components/FieldEditComponent.html","title":"component - FieldEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FieldEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                field-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./field-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                dataSource\n                            \n                            \n                                docDef\n                            \n                            \n                                editMode\n                            \n                            \n                                field\n                            \n                            \n                                fieldType\n                            \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                isSource\n                            \n                            \n                                isXML\n                            \n                            \n                                namespaceAlias\n                            \n                            \n                                namespaces\n                            \n                            \n                                parentField\n                            \n                            \n                                parentFieldName\n                            \n                            \n                                valueType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                executeSearch\n                            \n                            \n                                fieldTypeSelectionChanged\n                            \n                            \n                                getField\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                handleOnBlur\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                namespaceSelectionChanged\n                            \n                            \n                                parentSelectionChanged\n                            \n                            \n                                valueTypeSelectionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:45\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            executeSearch\n                        \n                        \n                    \n                \n            \n            \n                \nexecuteSearch(filter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fieldTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nfieldTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getField\n                        \n                        \n                    \n                \n            \n            \n                \ngetField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Field\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleOnBlur\n                        \n                        \n                    \n                \n            \n            \n                \nhandleOnBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(field: Field, docDef: DocumentDefinition, isAdd: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docDef\n                                    \n                                                DocumentDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isAdd\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            namespaceSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nnamespaceSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parentSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nparentSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nvalueTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                    \n                        \n                            Default value : new Field()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : 'element'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('value')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isXML\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespaceAlias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespaces\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentFieldName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { DocumentDefinition, NamespaceModel } from '../../models/document-definition.model';\nimport { Field } from '../../models/field.model';\nimport { DocumentType } from '../../common/config.types';\nimport { ConfigModel } from '../../models/config.model';\nimport { Observable } from 'rxjs';\nimport { ModalWindowValidator } from '../modal/modal-window.component';\n\n@Component({\n  selector: 'field-edit',\n  templateUrl: './field-edit.component.html',\n})\n\nexport class FieldEditComponent implements ModalWindowValidator {\n  cfg: ConfigModel = ConfigModel.getConfig();\n  field: Field = new Field();\n  parentField: Field;\n  parentFieldName: String = null;\n  isSource = false;\n  fieldType: any = 'element';\n  valueType: any = 'STRING';\n  namespaceAlias = '';\n  editMode = false;\n  namespaces: NamespaceModel[] = [];\n  docDef: DocumentDefinition = null;\n  dataSource: Observable;\n  isXML = false;\n  @ViewChild('value') private focusEl: ElementRef;\n\n  constructor() {\n    this.dataSource = Observable.create((observer: any) => {\n      observer.next(this.executeSearch(observer.outerValue));\n    });\n  }\n\n  initialize(field: Field, docDef: DocumentDefinition, isAdd: boolean): void {\n    this.docDef = docDef;\n    this.editMode = !isAdd;\n    this.field = field == null ? new Field() : field.copy();\n    this.valueType = (this.field.type == null) ? 'STRING' : this.field.type;\n    this.parentField = this.field.parentField;\n\n    if (this.docDef.type === DocumentType.XML) {\n      this.isXML = true;\n      this.fieldType = this.field.isAttribute ? 'attribute' : 'element';\n      this.parentField = (this.field.parentField == null) ? docDef.fields[0] : this.field.parentField;\n      const unqualifiedNS: NamespaceModel = NamespaceModel.getUnqualifiedNamespace();\n      this.namespaceAlias = unqualifiedNS.alias;\n      if (this.field.namespaceAlias) {\n        this.namespaceAlias = this.field.namespaceAlias;\n      }\n      if (isAdd) { // on add, inherit namespace from parent field\n        this.namespaceAlias = this.parentField.namespaceAlias == null ? unqualifiedNS.alias : this.parentField.namespaceAlias;\n      }\n\n      this.namespaces = [unqualifiedNS].concat(this.docDef.namespaces);\n\n      // if the field references a namespace that doesn't exist, add a fake namespace option for the\n      // user to select if they desire to leave that bad namespace alias in place\n      let namespaceFound = false;\n      for (const ns of this.namespaces) {\n        if (ns.alias === this.namespaceAlias) {\n          namespaceFound = true;\n          break;\n        }\n      }\n      if (!namespaceFound) {\n        const fakeNamespace: NamespaceModel = new NamespaceModel();\n        fakeNamespace.alias = this.namespaceAlias;\n        this.namespaces.push(fakeNamespace);\n      }\n    }\n    this.parentFieldName = this.parentField.name;\n  }\n\n  handleOnBlur(event: any): void {\n    this.parentFieldName = this.parentField.name;\n  }\n\n  parentSelectionChanged(event: any): void {\n    const oldParentField: Field = this.parentField;\n    this.parentField = event.item['field'];\n    this.parentField = (this.parentField == null) ? oldParentField : this.parentField;\n    this.parentFieldName = this.parentField.name;\n\n    // change namespace dropdown selecte option to match parent fields' namespace automatically\n    const unqualifiedNS: NamespaceModel = NamespaceModel.getUnqualifiedNamespace();\n    this.namespaceAlias = this.parentField.namespaceAlias == null ? unqualifiedNS.alias : this.parentField.namespaceAlias;\n  }\n\n  fieldTypeSelectionChanged(event: any): void {\n    this.fieldType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  valueTypeSelectionChanged(event: any): void {\n    this.valueType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  namespaceSelectionChanged(event: any): void {\n    this.namespaceAlias = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  executeSearch(filter: string): any[] {\n    const formattedFields: any[] = [];\n\n    for (const field of this.docDef.getAllFields()) {\n      if (!field.isParentField()) {\n        continue;\n      }\n      const displayName = (field == null) ? '' : field.getFieldLabel(ConfigModel.getConfig().showTypes, true);\n      const formattedField: any = { 'field': field, 'displayName': displayName };\n      if (filter == null || filter === ''\n        || formattedField['displayName'].toLowerCase().indexOf(filter.toLowerCase()) !== -1) {\n        formattedFields.push(formattedField);\n      }\n      if (formattedFields.length > 9) {\n        break;\n      }\n    }\n    return formattedFields;\n  }\n\n  getField(): Field {\n    this.field.displayName = this.field.name;\n    this.field.parentField = this.parentField;\n    this.field.type = this.valueType;\n    this.field.userCreated = true;\n    this.field.serviceObject.jsonType = 'io.atlasmap.json.v2.JsonField';\n    if (this.docDef.type === DocumentType.XML) {\n      this.field.isAttribute = (this.fieldType === 'attribute');\n      this.field.namespaceAlias = this.namespaceAlias;\n      const unqualifiedNS: NamespaceModel = NamespaceModel.getUnqualifiedNamespace();\n      if (this.namespaceAlias === unqualifiedNS.alias) {\n        this.field.namespaceAlias = null;\n      }\n      this.field.serviceObject.jsonType = 'io.atlasmap.xml.v2.XmlField';\n    }\n    return this.field;\n  }\n\n  isDataValid(): boolean {\n    return ConfigModel.getConfig().errorService.isRequiredFieldValid(this.field.name, 'Name');\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n}\n\n    \n\n    \n        \n\n  {{ model['field'].docDef.name }}\n  {{ model['field'].path }}\n\n\n\n  \n    Parent\n    \n  \n  \n    Name\n    \n  \n  \n    Namespace\n    \n      \n        {{ ns.getPrettyLabel() }}\n      \n    \n  \n  \n    Field Type\n    \n      Element\n      Attribute\n    \n  \n  \n    Value Type\n    \n      Boolean\n      Byte\n      ByteArray\n      Char\n      Complex\n      Decimal\n      Double\n      Float\n      Integer\n      Long\n      Short\n      String\n      Time\n      Date\n      DateTime\n      DateTZ\n      TimeTZ\n      DateTimeTZ\n      Unsigned Byte\n      Unsigned Integer\n      Unsigned Long\n      Unsigned Short\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ model[\\'field\\'].docDef.name }}  {{ model[\\'field\\'].path }}      Parent            Name            Namespace                  {{ ns.getPrettyLabel() }}                  Field Type          Element      Attribute            Value Type          Boolean      Byte      ByteArray      Char      Complex      Decimal      Double      Float      Integer      Long      Short      String      Time      Date      DateTime      DateTZ      TimeTZ      DateTimeTZ      Unsigned Byte      Unsigned Integer      Unsigned Long      Unsigned Short      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'FieldEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldNode.html":{"url":"classes/FieldNode.html","title":"class - FieldNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ExpressionNode\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                field\n                            \n                            \n                                    Static\n                                    Readonly\n                                PREFIX\n                            \n                            \n                                    Protected\n                                    Static\n                                sequence\n                            \n                            \n                                    Protected\n                                uuid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toHTML\n                            \n                            \n                                toText\n                            \n                            \n                                getUuid\n                            \n                            \n                                    Abstract\n                                toHTML\n                            \n                            \n                                    Abstract\n                                toText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapping: MappingModel, field?: MappedField, index?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        MappingModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        MappedField\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        index\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappedField\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            PREFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'expression-field-'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            sequence\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                            \n                                \n                                    Inherited from         ExpressionNode\n\n                                \n                            \n                        \n                            \n                                    Defined in         ExpressionNode:27\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            uuid\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         ExpressionNode\n\n                                \n                            \n                        \n                            \n                                    Defined in         ExpressionNode:28\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \ntoHTML()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \ntoText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUuid\n                        \n                        \n                    \n                \n            \n            \n                \ngetUuid()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toHTML()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toText()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { MappedField, MappingModel } from './mapping.model';\nimport { Subject } from 'rxjs';\nimport { ErrorScope, ErrorType, ErrorInfo, ErrorLevel } from './error.model';\n\nexport class ExpressionUpdatedEvent {\n  constructor(public node?: ExpressionNode, public offset?: number) {}\n}\n\nexport abstract class ExpressionNode {\n  protected static sequence = 0;\n  protected uuid;\n\n  constructor(prefix: string) {\n    this.uuid = prefix + ExpressionNode.sequence++;\n  }\n\n  getUuid() {\n    return this.uuid;\n  }\n\n  abstract toText(): string;\n  abstract toHTML(): string;\n}\n\nexport class TextNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-text-';\n\n  constructor(public str: string) {\n    super(TextNode.PREFIX);\n  }\n\n  toText(): string {\n    return this.str;\n  }\n\n  toHTML(): string {\n    return `${this.str.replace(/ /g, '&nbsp;')}`;\n  }\n\n}\n\nexport class FieldNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-field-';\n\n  constructor(private mapping: MappingModel, public field?: MappedField, private index?: number) {\n    super(FieldNode.PREFIX);\n    if (!field) {\n      this.field = mapping.getMappedFieldForIndex((index + 1).toString(), true);\n    }\n  }\n\n  toText(): string {\n    return '${' + (this.mapping.getIndexForMappedField(this.field) - 1) + '}';\n  }\n\n  toHTML(): string {\n    if (this.field && this.field.field) {\n      return `${this.field.field.name}`;\n    } else {\n      return `N/A`;\n    }\n  }\n\n}\n\nexport class ExpressionModel {\n  expressionUpdatedSource = new Subject();\n  expressionUpdated$ = this.expressionUpdatedSource.asObservable();\n\n  private _nodes: ExpressionNode[] = [];\n  private textCache = '';\n  private htmlCache = '';\n\n  constructor(private mapping: MappingModel, private cfg: ConfigModel) {}\n\n  generateInitialExpression() {\n    this.mapping.getUserMappedFields(true).forEach(f => this.appendFieldNode(f));\n  }\n\n  get nodes(): ReadonlyArray {\n    return this._nodes;\n  }\n\n  getLastNodeIndex() {\n    return this._nodes.length - 1;\n  }\n\n  getLastNode() {\n    return this._nodes[this.getLastNodeIndex()];\n  }\n\n  getNode(nodeId?: string): any {\n    if (!nodeId) {\n      return this.getLastNode();\n    }\n    return this._nodes.find(n => n.getUuid() === nodeId);\n  }\n\n  setConfigModel(cfg: ConfigModel) {\n    this.cfg = cfg;\n  }\n\n  /**\n   * Clear all text from the specified TextNode offset range or from the '@' to the end\n   * of the text node if no node ID is specified.\n   *\n   * Return the new UUID position indicator string or null.\n   *\n   * @param nodeId\n   * @param startOffset\n   * @param endOffset\n   */\n  clearText(nodeId?: string, startOffset?: number, endOffset?: number): TextNode {\n    let targetNode: TextNode;\n    let targetNodeIndex = 0;\n    if (!nodeId) {\n      const lastNode = this.getLastNode();\n      if (!(lastNode instanceof TextNode)) {\n        return null;\n      }\n      const keyPos = lastNode.str.indexOf('@');\n      if (keyPos !== -1) {\n        targetNodeIndex = this._nodes.indexOf(lastNode);\n        targetNode = lastNode;\n        targetNode.str = targetNode.str.substring(0, keyPos);\n      }\n    } else {\n      const node = this._nodes.find(n => n.getUuid() === nodeId);\n      if (!(node instanceof TextNode) || !endOffset) {\n        return null;\n      }\n      targetNode = node;\n      targetNodeIndex = this._nodes.indexOf(targetNode);\n      const cleanStr = targetNode.str.replace(targetNode.str.substring(startOffset, endOffset), '');\n      targetNode.str = cleanStr;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n    return targetNode;\n  }\n\n  /**\n   * Insert text into expression at specified position. If nodeId is not specified,\n   * it will be added to the end of expression. It parses the string\n   * and insert a set of TextNode & FieldNode if it contains field reference like ${0},\n   * otherwise just one TextNode.\n   * This emits ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   * @param str string to insert\n   * @param nodeId target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertText(str: string, nodeId?: string, offset?: number) {\n    this.insertNodes(this.createNodesFromText(str), nodeId, offset);\n  }\n\n  /**\n   * Insert an array of ExpressionNodes at the specified position. If insertPosition is\n   * not specified the nodes will be appended to the end of the expression.\n   * This emits an ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   *\n   * @param newNodes an array of ExpressionNode to add\n   * @param insertPosition target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertNodes(newNodes: ExpressionNode[], insertPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!insertPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        this._nodes.push(...newNodes);\n      } else if (last instanceof TextNode && newNodes[0] instanceof TextNode) {\n        const lastTextNode = last as TextNode;\n        (last as TextNode).str += (newNodes[0] as TextNode).str;\n        newNodes.splice(0, 1, last);\n        this._nodes.splice(this.getLastNodeIndex(), 1, ...newNodes);\n      } else if (last instanceof FieldNode && newNodes[0] instanceof FieldNode) {\n        this._nodes.splice(this.getLastNodeIndex(), 0, new TextNode(' + '), ...newNodes);\n      } else {\n        this._nodes.push(...newNodes);\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    const updatedEvent = new ExpressionUpdatedEvent();\n    const targetNode = this._nodes.find(n => n.getUuid() === insertPosition);\n    const targetNodeIndex = this._nodes.indexOf(targetNode);\n\n    if (targetNode instanceof TextNode) {\n      if (offset === undefined || offset === null || offset  0) {\n        if (newNodes[0] instanceof TextNode) {\n          targetNode.str = pre + (newNodes[0] as TextNode).str;\n          newNodes.splice(0, 1, targetNode);\n        } else {\n          targetNode.str = pre;\n          newNodes.splice(0, 0, targetNode);\n        }\n      }\n      if (post.length > 0) {\n        const lastNewNodeIndex = newNodes.length - 1;\n        if (newNodes[lastNewNodeIndex] instanceof TextNode) {\n          let mergedTextNode: TextNode;\n          if (pre.length > 0) {\n            mergedTextNode = newNodes[lastNewNodeIndex] as TextNode;\n            mergedTextNode.str += post;\n          } else {\n            mergedTextNode = targetNode;\n            mergedTextNode.str = (newNodes[lastNewNodeIndex]as TextNode).str + post;\n          }\n          newNodes.splice(lastNewNodeIndex, 1, mergedTextNode);\n        } else {\n          if (pre.length > 0) {\n            newNodes.push(new TextNode(post));\n          } else {\n            targetNode.str = post;\n            newNodes.push(targetNode);\n          }\n        }\n      }\n      this._nodes.splice(targetNodeIndex, 1, ...newNodes);\n      const lastAddedIndex = targetNodeIndex + newNodes.length - 1;\n      if (this._nodes[lastAddedIndex] instanceof FieldNode\n          && this.nodes[lastAddedIndex + 1] instanceof FieldNode) {\n        // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n        const space = new TextNode(' + ');\n        this._nodes.splice(lastAddedIndex + 1, 0, space);\n        updatedEvent.node = space;\n        updatedEvent.offset = 1;\n      } else if (this._nodes[lastAddedIndex] instanceof FieldNode) {\n        updatedEvent.node = this._nodes[lastAddedIndex + 1];\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = this._nodes[lastAddedIndex];\n        updatedEvent.offset = (this._nodes[lastAddedIndex] as TextNode).str.length - post.length;\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next(updatedEvent);\n      return;\n    }\n\n    // targetNode is a FieldNode - insert the text before it if offset is 0, otherwise after it\n    if (offset !== 0 && newNodes[0] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      newNodes.splice(0, 0, new TextNode(' + '));\n    }\n    const nextNodeIndex = offset === 0 ? targetNodeIndex : targetNodeIndex + 1;\n    const nextNode = this._nodes[nextNodeIndex];\n    if (nextNode instanceof TextNode && newNodes[newNodes.length - 1] instanceof TextNode) {\n      updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      nextNode.str = (newNodes[newNodes.length - 1] as TextNode).str + (nextNode as TextNode).str;\n      newNodes.pop();\n      this._nodes.splice(nextNodeIndex, 1, ...newNodes);\n      updatedEvent.node = nextNode;\n    } else if (nextNode instanceof FieldNode && newNodes[newNodes.length - 1] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      const space = new TextNode(' + ');\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes, space);\n      updatedEvent.node = space;\n      updatedEvent.offset = 1;\n    } else {\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes);\n      if (nextNode instanceof TextNode) {\n        updatedEvent.node = nextNode;\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = newNodes[newNodes.length - 1];\n        updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  removeToken(lastFieldRefRemoved: (removed: MappedField) => void, tokenPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!tokenPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        return;\n      }\n      if (last instanceof FieldNode) {\n        const removed = this._nodes.pop() as FieldNode;\n        if (!this._nodes.find(n => n instanceof FieldNode && n.field === removed.field)) {\n          lastFieldRefRemoved(removed.field);\n        }\n      } else if (last instanceof TextNode) {\n        if (last.str.length > 0) {\n          last.str = last.str.substring(0, last.str.length - 1);\n        } else {\n          this._nodes.pop();\n        }\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    let updatedEvent = new ExpressionUpdatedEvent();\n    let targetNode = this._nodes.find(n => n.getUuid() === tokenPosition);\n    let targetNodeIndex = this._nodes.indexOf(targetNode);\n    if (!targetNode || offset === -1) {\n      if (targetNodeIndex  n instanceof FieldNode && n.field === targetFieldNode.field)) {\n        lastFieldRefRemoved(targetFieldNode.field);\n      }\n      if (this._nodes.length > targetNodeIndex) {\n        if (this._nodes[targetNodeIndex - 1] instanceof TextNode\n            && this._nodes[targetNodeIndex] instanceof TextNode) {\n          const newOffset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n          (this._nodes[targetNodeIndex - 1] as TextNode).str\n              += (this._nodes[targetNodeIndex] as TextNode).str;\n          this._nodes.splice(targetNodeIndex, 1);\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = newOffset;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof FieldNode\n            && this._nodes[targetNodeIndex] instanceof FieldNode) {\n          const glue = new TextNode(' + ');\n          this._nodes.splice(targetNodeIndex, 0, glue);\n          updatedEvent.node = glue;\n          updatedEvent.offset = 3;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n        } else if (this._nodes[targetNodeIndex] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex];\n          updatedEvent.offset = 0;\n        }\n      } else {\n        // end of line\n        updatedEvent = undefined;\n      }\n    } else {\n      const targetString = (targetNode as TextNode).str;\n      (targetNode as TextNode).str = offset === 0 ? targetString.substr(1)\n        : targetString.substring(0, offset) + targetString.substring(offset + 1);\n      if ((targetNode as TextNode).str.length === 0) {\n        this.cfg.errorService.addError(new ErrorInfo({message: 'At least one space is required between field references.',\n          level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.USER, mapping: this.mapping}));\n        return;\n      }\n      updatedEvent.node = targetNode;\n      updatedEvent.offset = offset;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  /**\n   * Replace the content of the last text node with a substring terminating at the\n   * specified index.\n   *\n   * @param index\n   */\n  clearToEnd(index: number): void {\n    const last = this.getLastNode();\n    if (!(last instanceof TextNode)) {\n      return;\n    }\n    last.str = last.str.substring(0, index);\n  }\n\n  /**\n   * Reflect mapped source fields to the field references in the expression.\n   * Selected source fields are inserted into or appended to the expression,\n   * and unselected source fields are removed from expression.\n   *\n   * @param mapping Corresponding MappingModel object\n   */\n  updateFieldReference(mapping: MappingModel, insertPosition?: string, offset?: number) {\n    const mappedFields = mapping.getUserMappedFields(true);\n    const toAdd: MappedField[] = [];\n    const toRemove: MappedField[] = [];\n    let fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n\n    // Remove the field from the expression if unmapped.\n    for (const node of fieldNodes) {\n      if (mappedFields.includes(node.field)) {\n        continue;\n      }\n      const index = this._nodes.indexOf(node);\n      this._nodes.splice(index, 1);\n      if (this._nodes.length > index && this._nodes[index - 1] instanceof TextNode\n          && this._nodes[index] instanceof TextNode) {\n        (this._nodes[index - 1] as TextNode).str += (this._nodes[index] as TextNode).str;\n        this._nodes.splice(index, 1);\n      }\n    }\n\n    // Add the specified field into the expression - append if no insert position is specified.\n    fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n    for (const mfield of mappedFields) {\n      if (!fieldNodes.find(n => n.field === mfield)) {\n        if (insertPosition) {\n          this.insertNodes([new FieldNode(this.mapping, mfield)], insertPosition, offset);\n        } else {\n          this.appendFieldNode(mfield);\n        }\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  clear() {\n    this._nodes = [];\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  toText() {\n    return this.textCache;\n  }\n\n  toHTML() {\n    return this.htmlCache;\n  }\n\n  private updateCache() {\n    let answer = '';\n    this._nodes.forEach(node => answer += node.toText());\n    this.textCache = answer;\n    answer = '';\n    this._nodes.forEach(node => answer += node.toHTML());\n    this.htmlCache = answer;\n  }\n\n  private createNodesFromText(text: string): ExpressionNode[] {\n    const answer = [];\n    let position = -1;\n    let fn = null;\n\n    while ((position = text.search(/\\$\\{[0-9]+\\}/)) !== -1 ) {\n      if (position !== 0) {\n        answer.push(new TextNode(text.substring(0, position)));\n      }\n      const index = parseInt(text.substring(position + 2, text.indexOf('}')), 10);\n      fn = new FieldNode(this.mapping, null, index);\n      if (fn.field === null) {\n        this.cfg.errorService.addError(new ErrorInfo({message: `Unable to map expression index \"${index}\" to field node.`,\n          level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.INTERNAL, mapping: this.mapping}));\n      } else {\n        answer.push(fn);\n      }\n      text = text.substring(text.indexOf('}') + 1);\n    }\n    if (text.length > 0) {\n      answer.push(new TextNode(text));\n    }\n    return answer;\n  }\n\n  private appendFieldNode(mfield: MappedField) {\n    const lastNode = this._nodes.pop();\n    if (lastNode instanceof FieldNode) {\n        this._nodes.push(lastNode, new TextNode(' + '));\n    } else if (lastNode instanceof TextNode) {\n      if (lastNode.str.length === 0) {\n        this._nodes.push(new TextNode(' + '));\n      } else {\n        this._nodes.push(lastNode);\n      }\n    }\n    this._nodes.push(new FieldNode(this.mapping, mfield));\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileManagementService.html":{"url":"injectables/FileManagementService.html","title":"injectable - FileManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/file-management.service.ts\n        \n\n            \n                Description\n            \n            \n                Handles file manipulation stored in the backend, including import/export via UI.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _cfg\n                            \n                            \n                                    Private\n                                headers\n                            \n                            \n                                    Private\n                                jsonBuffer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportMappingsCatalog\n                            \n                            \n                                findMappingFiles\n                            \n                            \n                                getCurrentADMCatalog\n                            \n                            \n                                getCurrentMappingCatalog\n                            \n                            \n                                    Private\n                                getCurrentMappingJson\n                            \n                            \n                                    Private\n                                    Async\n                                getJsonBuf\n                            \n                            \n                                    Private\n                                getMappingDefinitionId\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Async\n                                importADMCatalog\n                            \n                            \n                                resetLibs\n                            \n                            \n                                resetMappings\n                            \n                            \n                                setBinaryFileToService\n                            \n                            \n                                setMappingToService\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    cfg\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: NGXLogger, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            exportMappingsCatalog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exportMappingsCatalog(mappingsFileName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:234\n                \n            \n\n\n            \n                \n                    Update the current mapping files and export the current mappings catalog (ADM).\nEstablish the file content in JSON format (mappings + schema + instance-schema), compress\nit (GZIP), update the runtime, then fetch the full ADM catalog ZIP file from the runtime\nand export it.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappingsFileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findMappingFiles\n                        \n                        \n                    \n                \n            \n            \n                \nfindMappingFiles(filter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentADMCatalog\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentADMCatalog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentMappingCatalog\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentMappingCatalog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:83\n                \n            \n\n\n            \n                \n                    Retrieve the current user data mappings catalog from the server as a GZIP compressed byte array buffer.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCurrentMappingJson\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentMappingJson()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:412\n                \n            \n\n\n            \n                \n                    Retrieve the current user AtlasMap data mappings from the server as an JSON buffer.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getJsonBuf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getJsonBuf()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:385\n                \n            \n\n\n            \n                \n                    Asynchronously retrieve the current user-defined AtlasMap mappings from the runtime server as an JSON buffer.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getMappingDefinitionId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMappingDefinitionId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:447\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(message: string, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:451\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            importADMCatalog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    importADMCatalog(mappingsFileName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:339\n                \n            \n\n\n            \n                \n                    Perform a binary read of the specified catalog (.ADM) file and push it to the runtime.  The ADM file is\nin (ZIP) file format.  Once pushed, we can retrieve from runtime the extracted compressed (GZIP) mappings\nfile catalog as well as the mappings JSON file.  These files exist separately for performance reasons.\nOnce the runtime has its ADM catalog, catalog files and mappings file set then restart the DM.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    mappingsFileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nADM master ZIP catalog\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetLibs\n                        \n                        \n                    \n                \n            \n            \n                \nresetLibs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:159\n                \n            \n\n\n            \n                \n                    Establish an observable function to delete user-defined JAR library files on the runtime.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetMappings\n                        \n                        \n                    \n                \n            \n            \n                \nresetMappings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:138\n                \n            \n\n\n            \n                \n                    Establish an observable function to delete mapping files on the runtime.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBinaryFileToService\n                        \n                        \n                    \n                \n            \n            \n                \nsetBinaryFileToService(compressedBuffer: any, url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:207\n                \n            \n\n\n            \n                \n                    The user has either exported their mappings or imported new mappings.  Either way we're saving them on the server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    compressedBuffer\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMappingToService\n                        \n                        \n                    \n                \n            \n            \n                \nsetMappingToService(jsonBuffer: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:183\n                \n            \n\n\n            \n                \n                    Commit the specified AtlasMapping JSON user mapping string to the runtime service.  The mappings\nare kept separate so they can be updated with minimal overhead.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    jsonBuffer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new HttpHeaders(\n    {'Content-Type': 'application/json; application/octet-stream',\n     'Accept':       'application/json; application/octet-stream'})\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            jsonBuffer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:39\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n\n                \n                    \n                        getcfg()\n                    \n                \n                            \n                                \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:43\n                                \n                            \n\n                \n                    \n                        setcfg(cfg)\n                    \n                \n                            \n                                \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:47\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            cfg\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { ConfigModel } from '../models/config.model';\nimport { NGXLogger } from 'ngx-logger';\nimport { deflate } from 'pako';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, forkJoin } from 'rxjs';\nimport { DataMapperUtil } from '../common/data-mapper-util';\nimport { map, timeout } from 'rxjs/operators';\nimport { DocumentManagementService } from './document-management.service';\nimport { InspectionType } from '../common/config.types';\nimport { ErrorScope, ErrorType, ErrorInfo, ErrorLevel } from '../models/error.model';\n\n/**\n * Handles file manipulation stored in the backend, including import/export via UI.\n */\n@Injectable()\nexport class FileManagementService {\n  _cfg: ConfigModel;\n\n  private headers = new HttpHeaders(\n    {'Content-Type': 'application/json; application/octet-stream',\n     'Accept':       'application/json; application/octet-stream'});\n  private jsonBuffer: string;\n\n  constructor(private logger: NGXLogger, private http: HttpClient) {}\n\n  get cfg() {\n    return this._cfg;\n  }\n\n  set cfg(cfg: ConfigModel) {\n    this._cfg = cfg;\n    if (!this._cfg.logger) {\n      this._cfg.logger = this.logger;\n    }\n  }\n\n  findMappingFiles(filter: string): Observable {\n    return new Observable((observer: any) => {\n      const url = this.cfg.initCfg.baseMappingServiceUrl + 'mappings/' + this.cfg.mappingDefinitionId\n        + (filter == null ? '' : '?filter=' + filter);\n      this.cfg.logger.trace('Mapping List Request');\n      this.http.get(url, { headers: this.headers }).toPromise().then((body: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping List Response: ${JSON.stringify(body)}`);\n        }\n        const entries: any[] = body.StringMap.stringMapEntry;\n        const mappingFileNames: string[] = [];\n        for (const entry of entries) {\n          mappingFileNames.push(entry.name);\n        }\n        observer.next(mappingFileNames);\n        observer.complete();\n      }).catch((error: any) => {\n        if (error.status !== DataMapperUtil.HTTP_STATUS_NO_CONTENT) {\n          this.handleError('Error occurred while accessing the current mapping files from the runtime service.', error);\n          observer.error(error);\n        }\n        observer.complete();\n      });\n    }).pipe(timeout(this.cfg.initCfg.admHttpTimeout));\n  }\n\n  /**\n   * Retrieve the current user data mappings catalog from the server as a GZIP compressed byte array buffer.\n   */\n  getCurrentMappingCatalog(): Observable {\n    return new Observable((observer: any) => {\n      const baseURL: string = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/GZ/';\n      const url: string = baseURL + this.getMappingDefinitionId();\n      this.cfg.logger.trace('Mapping Catalog Request');\n      const catHeaders = new HttpHeaders(\n        { 'Content-Type':  'application/octet-stream',\n          'Accept':        'application/octet-stream',\n          'Response-Type': 'application/octet-stream'\n        });\n      this.http.get(url, { headers: catHeaders, responseType: 'arraybuffer' }).toPromise().then((body: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping Catalog Response: ${JSON.stringify(body)}`);\n        }\n        observer.next(body);\n        observer.complete();\n      }).catch((error: any) => {\n        if (error.status !== DataMapperUtil.HTTP_STATUS_NO_CONTENT) {\n          this.handleError('Error occurred while accessing the current mappings catalog from the runtime service.', error);\n          observer.error(error);\n        }\n        observer.complete();\n      });\n    }).pipe(timeout(this.cfg.initCfg.admHttpTimeout));\n  }\n\n  getCurrentADMCatalog(): Observable {\n    return new Observable((observer: any) => {\n      const baseURL: string = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/ZIP/';\n      const url: string = baseURL + this.getMappingDefinitionId();\n      this.cfg.logger.trace('Mapping Catalog Request');\n      const catHeaders = new HttpHeaders(\n        { 'Content-Type':  'application/octet-stream',\n          'Accept':        'application/octet-stream',\n          'Response-Type': 'application/octet-stream'\n        });\n      this.http.get(url, { headers: catHeaders, responseType: 'arraybuffer' }).toPromise().then((body: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping Catalog Response: ${JSON.stringify(body)}`);\n        }\n        observer.next(body);\n        observer.complete();\n      }).catch((error: any) => {\n        if (error.status !== DataMapperUtil.HTTP_STATUS_NO_CONTENT) {\n          this.handleError('Error occurred while accessing the ADM catalog from the runtime service.', error);\n          observer.error(error);\n        }\n        observer.complete();\n      });\n    }).pipe(timeout(this.cfg.initCfg.admHttpTimeout));\n  }\n\n  /**\n   * Establish an observable function to delete mapping files on the runtime.\n   */\n  resetMappings(): Observable {\n    return new Observable((observer: any) => {\n      const url = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/RESET/' + this.cfg.mappingDefinitionId;\n      this.cfg.logger.trace('Mapping Service Request - Reset');\n      this.http.delete(url, { headers: this.headers }).toPromise().then((res: any) => {\n          if (this.cfg.isTraceEnabled()) {\n            this.cfg.logger.trace(`Mapping Service Response - Reset: ${JSON.stringify(res)}`);\n          }\n          observer.next(true);\n          observer.complete();\n          return res;\n        })\n        .catch((error: any) => {\n          this.handleError('Error occurred while resetting mappings.', error); },\n      );\n    }).pipe(timeout(this.cfg.initCfg.admHttpTimeout));\n  }\n\n  /**\n   * Establish an observable function to delete user-defined JAR library files on the runtime.\n   */\n  resetLibs(): Observable {\n    return new Observable((observer: any) => {\n      const url = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/resetLibs';\n      this.cfg.logger.trace('Mapping Service Request - Reset User-Defined Libraries');\n      this.http.delete(url, { headers: this.headers }).toPromise().then((res: any) => {\n          if (this.cfg.isTraceEnabled()) {\n            this.cfg.logger.trace(`Mapping Service Response - Reset Libs: ${JSON.stringify(res)}`);\n          }\n          observer.next(true);\n          observer.complete();\n          return res;\n        })\n        .catch((error: any) => {\n          this.handleError('Error occurred while resetting user-defined JAR libraries.', error); },\n      );\n    }).pipe(timeout(this.cfg.initCfg.admHttpTimeout));\n  }\n\n /**\n  * Commit the specified AtlasMapping JSON user mapping string to the runtime service.  The mappings\n  * are kept separate so they can be updated with minimal overhead.\n  *\n  * @param buffer - JSON content\n  */\n  setMappingToService(jsonBuffer: string): Observable {\n    return new Observable((observer: any) => {\n      const url = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/JSON/' + this.getMappingDefinitionId();\n      this.cfg.logger.trace('Mapping Service Request');\n      this.http.put(url, jsonBuffer, { headers: this.headers }).toPromise().then((res: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping Service Response: ${JSON.stringify(res)}`);\n        }\n        observer.next(true);\n        observer.complete();\n      })\n      .catch((error: any) => {\n        this.handleError('Error occurred while establishing mappings from an imported JSON.', error);\n        observer.error(error);\n        observer.complete();\n      });\n    });\n  }\n\n  /**\n   * The user has either exported their mappings or imported new mappings.  Either way we're saving them on the server.\n   *\n   * @param compressedBuffer\n   */\n   setBinaryFileToService(compressedBuffer: any, url: string): Observable {\n     return new Observable((observer: any) => {\n       this.cfg.logger.trace('Set Compressed Mapping Service Request');\n       this.http.put(url, compressedBuffer, { headers: this.headers }).toPromise().then((res: any) => {\n          if (this.cfg.isTraceEnabled()) {\n            this.cfg.logger.trace(`Set Compressed Mapping Service Response: ${JSON.stringify(res)}`);\n          }\n          observer.next(true);\n          observer.complete();\n       })\n      .catch((error: any) => {\n        this.handleError('Error occurred while saving mapping.', error);\n        observer.error(error);\n        observer.complete();\n      });\n    });\n   }\n\n  /**\n   * Update the current mapping files and export the current mappings catalog (ADM).\n   *\n   * Establish the file content in JSON format (mappings + schema + instance-schema), compress\n   * it (GZIP), update the runtime, then fetch the full ADM catalog ZIP file from the runtime\n   * and export it.\n   *\n   * @param event\n   */\n  async exportMappingsCatalog(mappingsFileName: string): Promise {\n    return new Promise(async(resolve, reject) => {\n      let aggregateBuffer = '   {\\n';\n      let userExport = true;\n\n      try {\n        if (mappingsFileName === null || mappingsFileName.length === 0) {\n          mappingsFileName = 'atlasmap-mapping.adm';\n          userExport = false;\n        }\n\n        // Retrieve the JSON mappings buffer from the server.\n        if (await this.getJsonBuf()) {\n          aggregateBuffer += DocumentManagementService.generateExportMappings(this.jsonBuffer[0]);\n        }\n\n        let exportMeta = '   \"exportMeta\": [\\n';\n        let exportBlockData = '      \"exportBlockData\": [\\n';\n        let docCount = 0;\n\n        // Establish two string arrays:\n        //   exportMeta - meta-data describing the instance or schema documents.\n        //   exportBlockData - the actual source of the instance/schema/mappings documents or the Java class name.\n        for (const doc of this.cfg.getAllDocs()) {\n          if (doc.inspectionSource !== null &&\n               (doc.inspectionType === InspectionType.INSTANCE) || (doc.inspectionType === InspectionType.SCHEMA) ||\n                 (doc.inspectionType === InspectionType.JAVA_CLASS) ) {\n            if (docCount > 0) {\n              exportMeta += ',\\n';\n              exportBlockData += ',\\n';\n            }\n            exportMeta += DocumentManagementService.generateExportMetaStr(doc);\n            exportBlockData += DocumentManagementService.generateExportBlockData(doc.inspectionSource);\n            docCount++;\n          }\n        }\n        exportMeta += '   ],\\n';\n        exportBlockData += '   ]\\n';\n        aggregateBuffer += exportMeta;\n        aggregateBuffer += exportBlockData;\n        aggregateBuffer += '   }\\n';\n\n        // Compress the JSON buffer - write out as binary.\n        const binBuffer = DataMapperUtil.str2bytes(aggregateBuffer);\n        try {\n          const compress = deflate(binBuffer, {gzip: true});\n          let fileContent: Blob = new Blob([compress], {type: 'application/octet-stream'});\n\n          // Save the model mappings to the runtime.\n          this.setBinaryFileToService(fileContent,\n            this.cfg.initCfg.baseMappingServiceUrl + 'mapping/GZ/' + this.getMappingDefinitionId()).toPromise()\n            .then(async(result: boolean) => {\n\n            // Fetch the full ADM catalog file from the runtime (ZIP) and export it to to the local\n            // downloads area.\n            if (userExport) {\n\n              this.getCurrentADMCatalog().subscribe( async(value: Uint8Array) => {\n\n                // If value is null then no compressed mappings catalog is available on the server.\n                if (value !== null) {\n                  fileContent = new Blob([value], {type: 'application/octet-stream'});\n                  if (!await DataMapperUtil.writeFile(fileContent, mappingsFileName)) {\n                    this.cfg.errorService.addError(new ErrorInfo({message: 'Unable to save the current data mappings.',\n                      level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL}));\n                  }\n                }\n                resolve(true);\n              });\n            }\n            resolve(true);\n          }).catch((error: any) => {\n            if (error.status === 0) {\n              this.cfg.errorService.addError(new ErrorInfo({\n                message: 'Fatal network error: Unable to connect to the AtlasMap design runtime service.',\n                level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n            } else {\n              this.cfg.errorService.addError(new ErrorInfo({\n                message: `Unable to update the catalog mappings file to the AtlasMap design runtime service.\n                  ${error.status} ${error.statusText}`,\n                level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n            }\n          });\n        } catch (error1) {\n          this.cfg.errorService.addError(new ErrorInfo({message: 'Unable to compress the current data mappings.',\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error1}));\n          return;\n        }\n      } catch (error) {\n        this.cfg.errorService.addError(new ErrorInfo({message: 'Unable to export the current data mappings.',\n          level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n        return;\n      }\n    });\n  }\n\n  /**\n   * Perform a binary read of the specified catalog (.ADM) file and push it to the runtime.  The ADM file is\n   * in (ZIP) file format.  Once pushed, we can retrieve from runtime the extracted compressed (GZIP) mappings\n   * file catalog as well as the mappings JSON file.  These files exist separately for performance reasons.\n   *\n   * Once the runtime has its ADM catalog, catalog files and mappings file set then restart the DM.\n   *\n   * @param mappingsFileName - ADM master ZIP catalog\n   */\n  async importADMCatalog(mappingsFileName: string): Promise {\n    return new Promise(async(resolve, reject) => {\n      let fileBin = null;\n      const reader = new FileReader();\n\n      // Turn the imported ADM file into a binary octet stream.\n      try {\n        fileBin = await DataMapperUtil.readBinaryFile(mappingsFileName, reader);\n      } catch (error) {\n        this.cfg.errorService.addError(new ErrorInfo({message: `Unable to import the specified catalog file \\'${mappingsFileName}\\'`,\n          level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n        return;\n      }\n      const fileContent: Blob = new Blob([fileBin], {type: 'application/octet-stream'});\n\n      // Push the binary stream to the runtime.\n      this.setBinaryFileToService(fileContent, this.cfg.initCfg.baseMappingServiceUrl +\n        'mapping/ZIP/' + this.getMappingDefinitionId()).toPromise().then( async(result: boolean) => {\n\n        try {\n          this.cfg.mappings = null;\n          this.cfg.clearDocs();\n          await this.cfg.initializationService.initialize();\n        } catch (error) {\n          this.cfg.errorService.addError(new ErrorInfo({message: `Unable to import the catalog file: ${mappingsFileName} ${error.message}`,\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n          return;\n        }\n      }).catch((error: any) => {\n        if (error.status === 0) {\n          this.cfg.errorService.addError(new ErrorInfo({\n            message: 'Fatal network error: Unable to connect to the AtlasMap design runtime service.',\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n        } else {\n          this.cfg.errorService.addError(new ErrorInfo({\n            message: `Unable to send the ADM file to the runtime service.  ${error.status} ${error.statusText}`,\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n        }\n      });\n      resolve(true);\n    });\n  }\n\n  /**\n   * Asynchronously retrieve the current user-defined AtlasMap mappings from the runtime server as an JSON buffer.\n   */\n  private async getJsonBuf(): Promise {\n    return new Promise((resolve, reject) => {\n      if (this.cfg.mappings === null) {\n        resolve(false);\n      }\n      this.cfg.mappingFiles[0] = this.cfg.mappings.name;\n      this.getCurrentMappingJson().toPromise().then((result: string) => {\n        this.jsonBuffer = result;\n        resolve(true);\n      }).catch((error: any) => {\n        if (error.status === 0) {\n          this.cfg.errorService.addError(new ErrorInfo({\n            message: 'Fatal network error: Unable to connect to the AtlasMap design runtime service.',\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n        } else {\n          this.cfg.errorService.addError(new ErrorInfo({\n            message: `Unable to access current mapping definitions: ${error.status} ${error.statusText}`,\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n        }\n        resolve(false);\n      });\n    });\n  }\n\n  /**\n   * Retrieve the current user AtlasMap data mappings from the server as an JSON buffer.\n   */\n  private getCurrentMappingJson(): Observable {\n    const mappingDefinitionIds: number[] = [this.cfg.mappingDefinitionId];\n    return new Observable((observer: any) => {\n      const baseURL: string = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/JSON/';\n      const operations: Observable[] = [];\n      for (const mappingDefinitionId of mappingDefinitionIds) {\n        const url: string = baseURL + mappingDefinitionId;\n        this.cfg.logger.trace('Mapping Service Request');\n        const jsonHeaders = new HttpHeaders(\n          { 'Content-Type':  'application/json',\n            'Accept':        'application/json',\n            'Response-Type': 'application/json'\n          });\n        const operation = this.http.get(url, { headers: jsonHeaders, responseType: 'text' }).pipe(map((res: any) => res ));\n        operations.push(operation);\n      }\n\n      forkJoin(operations).toPromise().then((data: string[]) => {\n        if (!data) {\n          observer.next('no data');\n          observer.complete();\n          return;\n        }\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping Service Response: ${JSON.stringify(data)}`);\n        }\n        observer.next(data);\n        observer.complete();\n      }).catch((error: any) => {\n        observer.error(error);\n        observer.complete();\n      });\n    });\n  }\n\n  private getMappingDefinitionId(): number {\n    return this.cfg.mappingDefinitionId;\n  }\n\n  private handleError(message: string, error: any): void {\n    this.cfg.errorService.addError(new ErrorInfo({message: message, level: ErrorLevel.ERROR,\n      scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n    this.cfg.initCfg.initialized = true;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FocusDirective.html":{"url":"directives/FocusDirective.html","title":"directive - FocusDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  FocusDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/common/focus.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterContentChecked\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [focus]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hasFocus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentChecked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/common/focus.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        focus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/common/focus.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentChecked\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentChecked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/focus.directive.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hasFocus\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/common/focus.directive.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input, AfterContentChecked } from '@angular/core';\n\n@Directive({\n  selector: '[focus]'\n})\nexport class FocusDirective implements AfterContentChecked {\n\n  @Input() focus: boolean;\n  private hasFocus = false;\n\n  constructor(private elementRef: ElementRef) {\n  }\n\n  ngAfterContentChecked() {\n    if (this.focus && !this.hasFocus) {\n      this.elementRef.nativeElement.focus();\n      this.hasFocus = true;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LineModel.html":{"url":"classes/LineModel.html","title":"class - LineModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LineModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sourceX\n                            \n                            \n                                sourceY\n                            \n                            \n                                stroke\n                            \n                            \n                                style\n                            \n                            \n                                targetField\n                            \n                            \n                                targetX\n                            \n                            \n                                targetY\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stroke\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'url(#line-gradient-dormant)'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            style\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SafeStyle\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ChangeDetectorRef, Component, ElementRef, Input, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { MappingModel } from '../../models/mapping.model';\nimport { Field } from '../../models/field.model';\n\nimport { DocumentDefinitionComponent } from '../document/document-definition.component';\nimport { DocumentFieldDetailComponent } from '../document/document-field-detail.component';\nimport { Subscription } from 'rxjs';\n\nexport class LineModel {\n  sourceX: string;\n  sourceY: string;\n  targetX: string;\n  targetY: string;\n  stroke = 'url(#line-gradient-dormant)';\n  style: SafeStyle;\n  targetField: Field;\n}\n\n@Component({\n  selector: 'line-machine',\n  templateUrl: './line-machine.component.html',\n})\n\nexport class LineMachineComponent implements OnInit, OnDestroy {\n  @Input() cfg: ConfigModel;\n  @Input() docDefInput: DocumentDefinitionComponent;\n  @Input() docDefOutput: DocumentDefinitionComponent;\n\n  lines: LineModel[] = [];\n  lineBeingFormed: LineModel;\n  drawingLine = false;\n  svgStyle: SafeStyle;\n\n  @ViewChild('lineMachineElement') lineMachineElement: ElementRef;\n\n  private yOffset = 3;\n  private lineRefreshSubscription: Subscription;\n\n  constructor(private sanitizer: DomSanitizer, public detector: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.lineRefreshSubscription = this.cfg.mappingService.lineRefresh$.subscribe(() => {\n      this.mappingChanged();\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.lineRefreshSubscription) {\n      this.lineRefreshSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Match the line geometry of a selected line to determine the matching line model array element.  Return\n   * the target field from that array element.\n   *\n   * @param selectedLineAttrs\n   */\n  private getTargetFieldFromLine(selectedLineAttrs: NamedNodeMap): Field {\n    for (const line of this.lines) {\n      if ((selectedLineAttrs[1].nodeValue === line.sourceX) &&\n          (selectedLineAttrs[2].nodeValue === line.sourceY) &&\n          (selectedLineAttrs[3].nodeValue === line.targetX) &&\n          (selectedLineAttrs[4].nodeValue === line.targetY)) {\n        return line.targetField;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * The user has selected between the panels.  This is likely a line - verify it and select the fields\n   * associated with the line.\n   *\n   * @param event\n   */\n  handleLineClick(event) {\n    const selectedElement = event.target;\n    if (selectedElement !== null && selectedElement.nodeName === 'line') {\n      const targetField: Field = this.getTargetFieldFromLine(selectedElement.attributes);\n      if (targetField != null) {\n        this.cfg.mappingService.fieldSelected(targetField, false);\n        setTimeout(() => {\n          this.redrawLinesForMappings();\n        }, 1);\n      }\n    }\n  }\n\n  addLineFromParams(sourceX: string, sourceY: string, targetX: string, targetY: string, stroke: string, targetField: Field): void {\n    const l: LineModel = new LineModel();\n    l.sourceX = sourceX;\n    l.sourceY = sourceY;\n    l.targetX = targetX;\n    l.targetY = targetY;\n    l.stroke = stroke;\n    l.targetField = targetField;\n    this.addLine(l);\n  }\n\n  addLine(l: LineModel): void {\n    this.createLineStyle(l);\n    this.lines.push(l);\n  }\n\n  setLineBeingFormed(l: LineModel): void {\n    if (l != null) {\n      this.createLineStyle(l);\n    }\n    this.lineBeingFormed = l;\n  }\n\n  clearLines(): void {\n    this.lines = [];\n    this.lineBeingFormed = null;\n    this.drawingLine = false;\n  }\n\n  drawLine(event: MouseEvent): void {\n    this.drawCurrentLine(event.offsetX.toString(), event.offsetY.toString());\n  }\n\n  drawCurrentLine(x: string, y: string): void {\n    if (this.drawingLine && this.lineBeingFormed) {\n      this.lineBeingFormed.targetX = x;\n      this.lineBeingFormed.targetY = y;\n    }\n  }\n\n  handleDocumentFieldMouseOver(component: DocumentFieldDetailComponent, event: any, isSource: boolean): void {\n    if (!this.drawingLine) {\n      return;\n    }\n    if (isSource) {\n      return;\n    }\n    const targetY = this.docDefOutput.getFieldDetailComponentPosition(component.field).y;\n    this.drawCurrentLine('100%', (targetY + this.yOffset).toString());\n  }\n\n  mappingChanged(): void {\n    this.drawingLine = false;\n    this.setLineBeingFormed(null);\n    this.redrawLinesForMappings();\n  }\n\n  redrawLinesForMappings(): void {\n    if (!this.cfg.initCfg.initialized || !this.cfg.mappings) {\n      this.clearLines();\n\n      // Clear any scroll deltas from the sources and targets panels.\n      if (this.docDefOutput) {\n        this.docDefInput.handleScroll(null);\n      }\n      if (this.docDefOutput) {\n        this.docDefOutput.handleScroll(null);\n      }\n      return;\n    }\n    if (!this.cfg.mappings.activeMapping) {\n      this.setLineBeingFormed(null);\n    }\n    this.clearLines();\n    if (!this.cfg.showMappedFields) {\n      return;\n    }\n    const mappings: MappingModel[] = this.cfg.mappings.mappings;\n    const activeMapping: MappingModel = this.cfg.mappings.activeMapping;\n    let foundSelectedMapping = false;\n    for (const m of mappings) {\n      foundSelectedMapping = foundSelectedMapping || (m === activeMapping);\n      this.drawLinesForMapping(m);\n    }\n    if (!foundSelectedMapping && activeMapping) {\n      this.drawLinesForMapping(activeMapping);\n    }\n    setTimeout(() => {\n      this.detector.detectChanges();\n    }, 10);\n  }\n\n  private createLineStyle(l: LineModel): void {\n    // angular2 will throw an error if we don't use this sanitizer to signal to angular2 that the css style value is ok.\n    l.style = this.sanitizer.bypassSecurityTrustStyle('stroke:' + l.stroke + '; stroke-width:4px;');\n  }\n\n  private drawLinesForMapping(m: MappingModel): void {\n    const el: any = this.lineMachineElement.nativeElement;\n    const lineMachineHeight: number = el.offsetHeight;\n\n    const isSelectedMapping: boolean = (this.cfg.mappings.activeMapping === m);\n    const stroke: string = 'url(#line-gradient-' + (isSelectedMapping ? 'active' : 'dormant') + ')';\n    if (!m.sourceFields.length || !m.targetFields.length) {\n      return;\n    }\n\n    for (const mappedInputField of m.sourceFields) {\n      const inputField: Field = mappedInputField.field;\n      if (!this.checkFieldEligibiltyForLineDrawing(inputField, 'input', m)) {\n        continue;\n      }\n\n      const inputFieldPos: any = this.getScreenPosForField(inputField, this.docDefInput);\n      if (inputFieldPos == null) {\n        continue;\n      }\n\n      let sourceY: number = inputFieldPos.y;\n      sourceY = (sourceY  (lineMachineHeight - 27)) ? (lineMachineHeight - 27) : sourceY;\n\n      for (const mappedOutputField of m.targetFields) {\n        const outputField: Field = mappedOutputField.field;\n        if (!this.checkFieldEligibiltyForLineDrawing(outputField, 'output', m)) {\n          continue;\n        }\n\n        const outputFieldPos: any = this.getScreenPosForField(outputField, this.docDefOutput);\n        if (outputFieldPos == null) {\n          continue;\n        }\n\n        let targetY: number = outputFieldPos.y;\n        targetY = (targetY  (lineMachineHeight - 27)) ? (lineMachineHeight - 27) : targetY;\n\n        if (isSelectedMapping || (this.cfg.showLinesAlways)) {\n          this.addLineFromParams('0', (sourceY + this.yOffset).toString(),\n            '100%', (targetY + this.yOffset).toString(), stroke, outputField);\n        }\n      }\n    }\n  }\n\n  private getScreenPosForField(field: Field, docDefComponent: DocumentDefinitionComponent): any {\n    if (field == null || field.docDef == null) {\n      return null;\n    }\n    if (!field.docDef.showFields) {\n      const pos: any = docDefComponent.getDocDefElementPosition(field.docDef);\n      if (pos) {\n        pos['y'] = pos['y'] + 5;\n      }\n      return pos;\n    }\n    let parentField: Field = field;\n    while (parentField != null) {\n      const fieldPos: any = docDefComponent.getFieldDetailComponentPosition(parentField);\n      if (fieldPos != null) {\n        return fieldPos;\n      }\n      parentField = parentField.parentField;\n    }\n    return null;\n  }\n\n  private checkFieldEligibiltyForLineDrawing(field: Field, description: string, m: MappingModel): boolean {\n    if (!field) {\n      return false;\n    }\n    if (!field.visibleInCurrentDocumentSearch) {\n      return false;\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LookupTable.html":{"url":"classes/LookupTable.html","title":"class - LookupTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LookupTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                name\n                            \n                            \n                                sourceIdentifier\n                            \n                            \n                                targetIdentifier\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEntryForSource\n                            \n                            \n                                getInputOutputKey\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:44\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LookupTableEntry[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceIdentifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetIdentifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:44\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEntryForSource\n                        \n                        \n                    \n                \n            \n            \n                \ngetEntryForSource(sourceValue: string, autocreate: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    autocreate\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LookupTableEntry\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInputOutputKey\n                        \n                        \n                    \n                \n            \n            \n                \ngetInputOutputKey()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class LookupTableEntry {\n  sourceValue: string;\n  sourceType = 'STRING';\n  targetValue: string;\n  targetType = 'STRING';\n\n  toJSON(): any {\n    return {\n      'sourceValue': this.sourceValue,\n      'sourceType': this.sourceType,\n      'targetValue': this.targetValue,\n      'targetType': this.targetType,\n    };\n  }\n\n  fromJSON(json: any): void {\n    this.sourceValue = json.sourceValue;\n    this.sourceType = json.sourceType;\n    this.targetValue = json.targetValue;\n    this.targetType = json.targetType;\n  }\n}\n\nexport class LookupTable {\n  name: string;\n  entries: LookupTableEntry[] = [];\n  sourceIdentifier: string;\n  targetIdentifier: string;\n\n  constructor() {\n    this.name = (new Date().getTime() + '-' + Math.floor(Math.random() * 1000000).toString());\n  }\n\n  getInputOutputKey(): string {\n    return this.sourceIdentifier + ':' + this.targetIdentifier;\n  }\n\n  getEntryForSource(sourceValue: string, autocreate: boolean): LookupTableEntry {\n    for (const entry of this.entries) {\n      if (entry.sourceValue === sourceValue) {\n        return entry;\n      }\n    }\n    if (autocreate) {\n      const entry: LookupTableEntry = new LookupTableEntry();\n      entry.sourceValue = sourceValue;\n      this.entries.push(entry);\n      return entry;\n    }\n    return null;\n  }\n\n  toString() {\n    let result: string = 'Lookup Table, name: ' + this.name + ', entries: ' + this.entries.length;\n    result += '\\n\\sourceIdentifier: ' + this.sourceIdentifier;\n    result += '\\n\\targetIdentifier: ' + this.targetIdentifier;\n    let counter = 0;\n    for (const entry of this.entries) {\n      result += '\\n\\tEntry #' + counter + ': ' + entry.sourceValue + ' => ' + entry.targetValue;\n      counter += 1;\n    }\n    return result;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LookupTableComponent.html":{"url":"components/LookupTableComponent.html","title":"component - LookupTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LookupTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lookup-table\n            \n\n\n\n\n            \n                templateUrl\n                ./lookup-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                mapping\n                            \n                            \n                                outputSelects\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                saveTable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(cfg: ConfigModel, mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveTable\n                        \n                        \n                    \n                \n            \n            \n                \nsaveTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LookupTableData[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            outputSelects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('outputSelect')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            table\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LookupTable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChildren, ElementRef, QueryList } from '@angular/core';\n\nimport { LookupTable, LookupTableEntry } from '../../models/lookup-table.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\nimport { MappingModel } from '../../models/mapping.model';\nimport { ModalWindowValidator } from '../modal/modal-window.component';\nimport { ErrorScope, ErrorType, ErrorInfo } from '../../models/error.model';\n\nexport class LookupTableData {\n  sourceEnumValue: string;\n  targetEnumValues: string[];\n  selectedTargetEnumValue: string;\n}\n\n@Component({\n  selector: 'lookup-table',\n  templateUrl: './lookup-table.component.html',\n})\n\nexport class LookupTableComponent implements ModalWindowValidator {\n  mapping: MappingModel;\n\n  table: LookupTable;\n  data: LookupTableData[];\n\n  @ViewChildren('outputSelect') outputSelects: QueryList;\n\n  initialize(cfg: ConfigModel, mapping: MappingModel): void {\n    this.mapping = mapping;\n\n    const targetField: Field = mapping.getFields(false)[0];\n    const targetValues: string[] = [];\n    targetValues.push('[ None ]');\n    for (const e of targetField.enumValues) {\n      targetValues.push(e.name);\n    }\n\n    this.table = cfg.mappings.getTableByName(mapping.transition.lookupTableName);\n    if (this.table == null) {\n      cfg.errorService.addError(new ErrorInfo({message: 'Could not find enum lookup table for mapping.',\n        scope: ErrorScope.MAPPING, type: ErrorType.INTERNAL, mapping: mapping}));\n    }\n\n    const d: LookupTableData[] = [];\n    const sourceField: Field = mapping.getFields(true)[0];\n    for (const e of sourceField.enumValues) {\n      const tableData: LookupTableData = new LookupTableData();\n      tableData.sourceEnumValue = e.name;\n      tableData.targetEnumValues = [].concat(targetValues);\n      const selected: LookupTableEntry = this.table.getEntryForSource(tableData.sourceEnumValue, false);\n      tableData.selectedTargetEnumValue = (selected == null) ? '[ None ]' : selected.targetValue;\n      d.push(tableData);\n    }\n    this.data = d;\n  }\n\n  isDataValid() {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n  saveTable(): void {\n    this.table.entries = [];\n    for (const c of this.outputSelects.toArray()) {\n      const selectedOptions: any[] = c.nativeElement.selectedOptions;\n      if (selectedOptions && selectedOptions.length) {\n        const targetValue: string = selectedOptions[0].label;\n        if (targetValue === '[ None ]') {\n          continue;\n        }\n        const e: LookupTableEntry = new LookupTableEntry();\n        e.sourceValue = c.nativeElement.attributes['sourceValue'].value;\n        e.targetValue = targetValue;\n        this.table.entries.push(e);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{ d.sourceEnumValue }}\n    \n      {{ targetEnumValue }}\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ d.sourceEnumValue }}          {{ targetEnumValue }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'LookupTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LookupTableData.html":{"url":"classes/LookupTableData.html","title":"class - LookupTableData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LookupTableData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedTargetEnumValue\n                            \n                            \n                                sourceEnumValue\n                            \n                            \n                                targetEnumValues\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTargetEnumValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceEnumValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetEnumValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, ViewChildren, ElementRef, QueryList } from '@angular/core';\n\nimport { LookupTable, LookupTableEntry } from '../../models/lookup-table.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\nimport { MappingModel } from '../../models/mapping.model';\nimport { ModalWindowValidator } from '../modal/modal-window.component';\nimport { ErrorScope, ErrorType, ErrorInfo } from '../../models/error.model';\n\nexport class LookupTableData {\n  sourceEnumValue: string;\n  targetEnumValues: string[];\n  selectedTargetEnumValue: string;\n}\n\n@Component({\n  selector: 'lookup-table',\n  templateUrl: './lookup-table.component.html',\n})\n\nexport class LookupTableComponent implements ModalWindowValidator {\n  mapping: MappingModel;\n\n  table: LookupTable;\n  data: LookupTableData[];\n\n  @ViewChildren('outputSelect') outputSelects: QueryList;\n\n  initialize(cfg: ConfigModel, mapping: MappingModel): void {\n    this.mapping = mapping;\n\n    const targetField: Field = mapping.getFields(false)[0];\n    const targetValues: string[] = [];\n    targetValues.push('[ None ]');\n    for (const e of targetField.enumValues) {\n      targetValues.push(e.name);\n    }\n\n    this.table = cfg.mappings.getTableByName(mapping.transition.lookupTableName);\n    if (this.table == null) {\n      cfg.errorService.addError(new ErrorInfo({message: 'Could not find enum lookup table for mapping.',\n        scope: ErrorScope.MAPPING, type: ErrorType.INTERNAL, mapping: mapping}));\n    }\n\n    const d: LookupTableData[] = [];\n    const sourceField: Field = mapping.getFields(true)[0];\n    for (const e of sourceField.enumValues) {\n      const tableData: LookupTableData = new LookupTableData();\n      tableData.sourceEnumValue = e.name;\n      tableData.targetEnumValues = [].concat(targetValues);\n      const selected: LookupTableEntry = this.table.getEntryForSource(tableData.sourceEnumValue, false);\n      tableData.selectedTargetEnumValue = (selected == null) ? '[ None ]' : selected.targetValue;\n      d.push(tableData);\n    }\n    this.data = d;\n  }\n\n  isDataValid() {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n  saveTable(): void {\n    this.table.entries = [];\n    for (const c of this.outputSelects.toArray()) {\n      const selectedOptions: any[] = c.nativeElement.selectedOptions;\n      if (selectedOptions && selectedOptions.length) {\n        const targetValue: string = selectedOptions[0].label;\n        if (targetValue === '[ None ]') {\n          continue;\n        }\n        const e: LookupTableEntry = new LookupTableEntry();\n        e.sourceValue = c.nativeElement.attributes['sourceValue'].value;\n        e.targetValue = targetValue;\n        this.table.entries.push(e);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LookupTableEntry.html":{"url":"classes/LookupTableEntry.html","title":"class - LookupTableEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LookupTableEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sourceType\n                            \n                            \n                                sourceValue\n                            \n                            \n                                targetType\n                            \n                            \n                                targetValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fromJSON\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fromJSON\n                        \n                        \n                    \n                \n            \n            \n                \nfromJSON(json: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    json\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class LookupTableEntry {\n  sourceValue: string;\n  sourceType = 'STRING';\n  targetValue: string;\n  targetType = 'STRING';\n\n  toJSON(): any {\n    return {\n      'sourceValue': this.sourceValue,\n      'sourceType': this.sourceType,\n      'targetValue': this.targetValue,\n      'targetType': this.targetType,\n    };\n  }\n\n  fromJSON(json: any): void {\n    this.sourceValue = json.sourceValue;\n    this.sourceType = json.sourceType;\n    this.targetValue = json.targetValue;\n    this.targetType = json.targetType;\n  }\n}\n\nexport class LookupTable {\n  name: string;\n  entries: LookupTableEntry[] = [];\n  sourceIdentifier: string;\n  targetIdentifier: string;\n\n  constructor() {\n    this.name = (new Date().getTime() + '-' + Math.floor(Math.random() * 1000000).toString());\n  }\n\n  getInputOutputKey(): string {\n    return this.sourceIdentifier + ':' + this.targetIdentifier;\n  }\n\n  getEntryForSource(sourceValue: string, autocreate: boolean): LookupTableEntry {\n    for (const entry of this.entries) {\n      if (entry.sourceValue === sourceValue) {\n        return entry;\n      }\n    }\n    if (autocreate) {\n      const entry: LookupTableEntry = new LookupTableEntry();\n      entry.sourceValue = sourceValue;\n      this.entries.push(entry);\n      return entry;\n    }\n    return null;\n  }\n\n  toString() {\n    let result: string = 'Lookup Table, name: ' + this.name + ', entries: ' + this.entries.length;\n    result += '\\n\\sourceIdentifier: ' + this.sourceIdentifier;\n    result += '\\n\\targetIdentifier: ' + this.targetIdentifier;\n    let counter = 0;\n    for (const entry of this.entries) {\n      result += '\\n\\tEntry #' + counter + ': ' + entry.sourceValue + ' => ' + entry.targetValue;\n      counter += 1;\n    }\n    return result;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LookupTableUtil.html":{"url":"classes/LookupTableUtil.html","title":"class - LookupTableUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LookupTableUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/utils/lookup-table-util.ts\n        \n\n            \n                Description\n            \n            \n                Static routines for handling LookupTable.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                getFirstMappingForLookupTable\n                            \n                            \n                                    Static\n                                populateMappingLookupTable\n                            \n                            \n                                    Static\n                                updateLookupTables\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getFirstMappingForLookupTable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFirstMappingForLookupTable(mappingDefinition: MappingDefinition, lookupTableName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/lookup-table-util.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappingDefinition\n                                    \n                                                MappingDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lookupTableName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MappingModel\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            populateMappingLookupTable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    populateMappingLookupTable(mappingDefinition: MappingDefinition, m: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/lookup-table-util.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappingDefinition\n                                    \n                                                MappingDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    m\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateLookupTables\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLookupTables(mappingDefinition: MappingDefinition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/lookup-table-util.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappingDefinition\n                                    \n                                                MappingDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MappingModel } from '../models/mapping.model';\nimport { TransitionMode } from '../models/transition.model';\nimport { Field } from '../models/field.model';\nimport { LookupTable } from '../models/lookup-table.model';\nimport { MappingDefinition } from '../models/mapping-definition.model';\n\n/**\n * Static routines for handling LookupTable.\n */\nexport class LookupTableUtil {\n\n  static populateMappingLookupTable(mappingDefinition: MappingDefinition, m: MappingModel): void {\n    if (!(m.transition.mode === TransitionMode.ENUM\n      && m.transition.lookupTableName == null\n      && m.getFields(true).length === 1\n      && m.getFields(false).length === 1)) {\n      return;\n    }\n    let inputClassIdentifier: string = null;\n    let outputClassIdentifier: string = null;\n\n    const inputField: Field = m.getFields(true)[0];\n    if (inputField) {\n      inputClassIdentifier = inputField.classIdentifier;\n    }\n    const outputField: Field = m.getFields(true)[0];\n    if (outputField) {\n      outputClassIdentifier = outputField.classIdentifier;\n    }\n    if (inputClassIdentifier && outputClassIdentifier) {\n      let table: LookupTable = mappingDefinition.getTableBySourceTarget(inputClassIdentifier, outputClassIdentifier);\n      if (table == null) {\n        table = new LookupTable();\n        table.sourceIdentifier = inputClassIdentifier;\n        table.targetIdentifier = outputClassIdentifier;\n        mappingDefinition.addTable(table);\n        m.transition.lookupTableName = table.name;\n      } else {\n        m.transition.lookupTableName = table.name;\n      }\n    }\n  }\n\n  static updateLookupTables(mappingDefinition: MappingDefinition) {\n    for (const t of mappingDefinition.getTables()) {\n      if (t.sourceIdentifier && t.targetIdentifier) {\n        continue;\n      }\n      const m: MappingModel = LookupTableUtil.getFirstMappingForLookupTable(mappingDefinition, t.name);\n      if (m != null && m.transition.lookupTableName != null) {\n        if (!t.sourceIdentifier) {\n          const inputField: Field = m.getFields(true)[0];\n          if (inputField) {\n            t.sourceIdentifier = inputField.classIdentifier;\n          }\n        }\n        if (!t.targetIdentifier) {\n          const outputField: Field = m.getFields(false)[0];\n          if (outputField) {\n            t.targetIdentifier = outputField.classIdentifier;\n          }\n        }\n      }\n    }\n    for (const m of mappingDefinition.mappings) {\n      LookupTableUtil.populateMappingLookupTable(mappingDefinition, m);\n    }\n  }\n\n  private static getFirstMappingForLookupTable(mappingDefinition: MappingDefinition, lookupTableName: string): MappingModel {\n    for (const m of mappingDefinition.mappings) {\n      if (m.transition.lookupTableName === lookupTableName) {\n        return m;\n      }\n    }\n    return null;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MappedField.html":{"url":"classes/MappedField.html","title":"class - MappedField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MappedField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                field\n                            \n                            \n                                parsedData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isPadField\n                            \n                            \n                                isSource\n                            \n                            \n                                removeAction\n                            \n                            \n                                    Static\n                                sortMappedFieldsByPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FieldAction[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappedFieldParsingData\n\n                        \n                    \n                    \n                        \n                            Default value : new MappedFieldParsingData()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:39\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPadField\n                        \n                        \n                    \n                \n            \n            \n                \nisPadField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSource\n                        \n                        \n                    \n                \n            \n            \n                \nisSource()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeAction\n                        \n                        \n                    \n                \n            \n            \n                \nremoveAction(action: FieldAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            sortMappedFieldsByPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sortMappedFieldsByPath(mappedFields: MappedField[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappedFields\n                                    \n                                            MappedField[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MappedField[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { Field } from './field.model';\nimport { TransitionModel } from './transition.model';\n\nimport { DataMapperUtil } from '../common/data-mapper-util';\nimport { FieldAction } from './field-action.model';\nimport { PaddingField } from './document-definition.model';\n\nexport class MappedFieldParsingData {\n  parsedName: string = null;\n  parsedPath: string = null;\n  parsedValue: string = null;\n  parsedDocID: string = null;\n  parsedDocURI: string = null;\n  parsedIndex: string = null;\n  fieldIsProperty = false;\n  fieldIsConstant = false;\n  parsedValueType: string = null;\n  parsedActions: FieldAction[] = [];\n  userCreated = false;\n}\n\nexport class MappedField {\n  parsedData: MappedFieldParsingData = new MappedFieldParsingData();\n  field: Field;\n  actions: FieldAction[] = [];\n\n  static sortMappedFieldsByPath(mappedFields: MappedField[]): MappedField[] {\n    if (mappedFields == null || mappedFields.length === 0) {\n      return [];\n    }\n    const fieldsByPath: { [key: string]: MappedField; } = {};\n    const fieldPaths: string[] = [];\n    for (const mappedField of mappedFields) {\n      if (mappedField == null || mappedField.field == null) {\n        continue;\n      }\n      const path: string = mappedField.field.path;\n      fieldsByPath[path] = mappedField;\n      fieldPaths.push(path);\n    }\n    fieldPaths.sort();\n    const result: MappedField[] = [];\n    for (const name of fieldPaths) {\n      result.push(fieldsByPath[name]);\n    }\n    return result;\n  }\n\n  isPadField(): boolean {\n    return this.field instanceof PaddingField;\n  }\n\n  isSource(): boolean {\n    return this.field.isSource();\n  }\n\n  removeAction(action: FieldAction): void {\n    DataMapperUtil.removeItemFromArray(action, this.actions);\n  }\n\n}\n\nexport class MappingModel {\n  cfg: ConfigModel;\n  uuid: string;\n\n  sourceFields: MappedField[] = [];\n  targetFields: MappedField[] = [];\n  transition: TransitionModel = new TransitionModel();\n\n  constructor() {\n    this.uuid = 'mapping.' + Math.floor((Math.random() * 1000000) + 1).toString();\n    this.cfg = ConfigModel.getConfig();\n  }\n\n  getFirstCollectionField(isSource: boolean): Field {\n    for (const f of isSource ? this.sourceFields : this.targetFields) {\n      if (f.field.isInCollection()) {\n        return f.field;\n      }\n    }\n    return null;\n  }\n\n  isLookupMode(): boolean {\n    for (const f of this.sourceFields.concat(this.targetFields)) {\n      if (f.field.enumeration) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Add the specified field to this field mapping.\n   *\n   * @param field - field to add to the mapping\n   * @param first - if true add the field to the beginning of the array, last otherwise.\n   */\n  addField(field: Field, first: boolean): MappedField {\n    const mappedField: MappedField = new MappedField();\n    mappedField.field = field;\n    if (first) {\n      this.getMappedFields(field.isSource()).unshift(mappedField);\n    } else {\n      this.getMappedFields(field.isSource()).push(mappedField);\n    }\n    return mappedField;\n  }\n\n  /**\n   * Remove the specified field from this field mapping.\n   *\n   * @param field\n   */\n  removeField(field: Field) {\n    const mappedFields = this.getMappedFields(field.isSource());\n    DataMapperUtil.removeItemFromArray(mappedFields.find(mf => mf.field === field), mappedFields);\n  }\n\n  /**\n   * Return the number of user-defined (non-padding) fields in this mapping.\n   *\n   * @param field\n   */\n  getUserFieldCount(field: Field): number {\n    const mappedFields = this.getMappedFields(field.isSource());\n    let userFieldCount = 0;\n\n    for (const mappedField of mappedFields) {\n      if (!mappedField.isPadField()) {\n        userFieldCount++;\n      }\n    }\n    return userFieldCount;\n  }\n\n  hasMappedField(isSource: boolean) {\n    return isSource ? this.sourceFields.length > 0 : this.targetFields.length > 0;\n  }\n\n  isEmpty() {\n    return this.sourceFields.length === 0 && this.targetFields.length === 0;\n  }\n\n  isFullyMapped(): boolean {\n    return this.sourceFields.length > 0 && this.targetFields.length > 0;\n  }\n\n  addMappedField(mappedField: MappedField, isSource: boolean): void {\n    this.getMappedFields(isSource).push(mappedField);\n  }\n\n  removeMappedField(mappedField: MappedField): void {\n    DataMapperUtil.removeItemFromArray(mappedField, this.getMappedFields(mappedField.field.isSource()));\n  }\n\n  getMappedFieldForField(field: Field): MappedField {\n    for (const mappedField of this.getMappedFields(field.isSource())) {\n      if (mappedField.field === field) {\n        return mappedField;\n      }\n    }\n    return null;\n  }\n\n  getMappedFieldForIndex(index: string, isSource: boolean): MappedField {\n    if (!index) {\n      return null;\n    }\n    const mappedFields = this.getMappedFields(isSource);\n    if (+index - 1 > mappedFields.length - 1) {\n      return null;\n    }\n    return mappedFields[+index - 1];\n  }\n\n  getIndexForMappedField(mappedField: MappedField): number {\n    if (!mappedField || !mappedField.field) {\n      return null;\n    }\n    return this.getMappedFields(mappedField.field.isSource()).indexOf(mappedField) + 1;\n  }\n\n  /**\n   * Return an array of user mapped fields for the specified panel in this field pair instance.  No\n   * data-mapper generated padding fields will be included.\n   *\n   * @param isSource - true source panel, false target panel\n   */\n  getUserMappedFields(isSource: boolean): MappedField[] {\n    const workingFields = isSource ? this.sourceFields : this.targetFields;\n    const resultFields: MappedField[] = [new MappedField()];\n\n    for (const mappedField of workingFields) {\n      if (!mappedField.isPadField()) {\n        resultFields.push(mappedField);\n      }\n    }\n    resultFields.shift();\n    return resultFields;\n  }\n\n  getMappedFields(isSource: boolean): MappedField[] {\n    return isSource ? this.sourceFields : this.targetFields;\n  }\n\n  getLastMappedField(isSource: boolean): MappedField {\n    const fields: MappedField[] = this.getMappedFields(isSource);\n    if ((fields != null) && (fields.length > 0)) {\n      return fields[fields.length - 1];\n    }\n    return null;\n  }\n\n  getFields(isSource: boolean): Field[] {\n    const fields: Field[] = [];\n    for (const mappedField of this.getMappedFields(isSource)) {\n      if (mappedField.field != null) {\n        fields.push(mappedField.field);\n      }\n    }\n    return fields;\n  }\n\n  getFieldNames(isSource: boolean): string[] {\n    const fields: Field[] = this.getFields(isSource);\n    Field.alphabetizeFields(fields);\n    const names: string[] = [];\n    for (const field of fields) {\n      names.push(field.name);\n    }\n    return names;\n  }\n\n  getFieldPaths(isSource: boolean): string[] {\n    const fields: Field[] = this.getFields(isSource);\n    Field.alphabetizeFields(fields);\n    const paths: string[] = [];\n    for (const field of fields) {\n      paths.push(field.path);\n    }\n    return paths;\n  }\n\n  hasFieldActions(): boolean {\n    for (const mappedField of this.getAllMappedFields()) {\n      if (mappedField.actions.length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getAllFields(): Field[] {\n    return this.getFields(true).concat(this.getFields(false));\n  }\n\n  getAllMappedFields(): MappedField[] {\n    return this.getMappedFields(true).concat(this.getMappedFields(false));\n  }\n\n  isFieldMapped(field: Field): boolean {\n    return this.getMappedFieldForField(field) != null;\n  }\n\n  hasTransformation(): boolean {\n    const mappedFields: MappedField[] = this.getAllMappedFields();\n    for (const mappedField of mappedFields) {\n      if (mappedField.actions.length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Walk all target field mappings and return one of corresponding source field name\n   * if the specified field is already the target of a previous mapping, null otherwise.\n   *\n   * @param field\n   */\n  public getMappedTarget(field: Field): string {\n    const mappings: MappingModel[] = this.cfg.mappings.mappings;\n\n    if (field.isSource()) {\n      return null;\n    }\n    for (const m of mappings) {\n      if (m.targetFields.length === 0) {\n        continue;\n      }\n\n      for (const mappedOutputField of m.targetFields) {\n        if (mappedOutputField.field.docDef === field.docDef\n          && mappedOutputField.field.path === field.path) {\n          if (m.isFieldMapped(field)) {\n            return m.sourceFields[0].field.name;\n          }\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MappedFieldParsingData.html":{"url":"classes/MappedFieldParsingData.html","title":"class - MappedFieldParsingData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MappedFieldParsingData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fieldIsConstant\n                            \n                            \n                                fieldIsProperty\n                            \n                            \n                                parsedActions\n                            \n                            \n                                parsedDocID\n                            \n                            \n                                parsedDocURI\n                            \n                            \n                                parsedIndex\n                            \n                            \n                                parsedName\n                            \n                            \n                                parsedPath\n                            \n                            \n                                parsedValue\n                            \n                            \n                                parsedValueType\n                            \n                            \n                                userCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldIsConstant\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldIsProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FieldAction[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedDocID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedDocURI\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedValueType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userCreated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { Field } from './field.model';\nimport { TransitionModel } from './transition.model';\n\nimport { DataMapperUtil } from '../common/data-mapper-util';\nimport { FieldAction } from './field-action.model';\nimport { PaddingField } from './document-definition.model';\n\nexport class MappedFieldParsingData {\n  parsedName: string = null;\n  parsedPath: string = null;\n  parsedValue: string = null;\n  parsedDocID: string = null;\n  parsedDocURI: string = null;\n  parsedIndex: string = null;\n  fieldIsProperty = false;\n  fieldIsConstant = false;\n  parsedValueType: string = null;\n  parsedActions: FieldAction[] = [];\n  userCreated = false;\n}\n\nexport class MappedField {\n  parsedData: MappedFieldParsingData = new MappedFieldParsingData();\n  field: Field;\n  actions: FieldAction[] = [];\n\n  static sortMappedFieldsByPath(mappedFields: MappedField[]): MappedField[] {\n    if (mappedFields == null || mappedFields.length === 0) {\n      return [];\n    }\n    const fieldsByPath: { [key: string]: MappedField; } = {};\n    const fieldPaths: string[] = [];\n    for (const mappedField of mappedFields) {\n      if (mappedField == null || mappedField.field == null) {\n        continue;\n      }\n      const path: string = mappedField.field.path;\n      fieldsByPath[path] = mappedField;\n      fieldPaths.push(path);\n    }\n    fieldPaths.sort();\n    const result: MappedField[] = [];\n    for (const name of fieldPaths) {\n      result.push(fieldsByPath[name]);\n    }\n    return result;\n  }\n\n  isPadField(): boolean {\n    return this.field instanceof PaddingField;\n  }\n\n  isSource(): boolean {\n    return this.field.isSource();\n  }\n\n  removeAction(action: FieldAction): void {\n    DataMapperUtil.removeItemFromArray(action, this.actions);\n  }\n\n}\n\nexport class MappingModel {\n  cfg: ConfigModel;\n  uuid: string;\n\n  sourceFields: MappedField[] = [];\n  targetFields: MappedField[] = [];\n  transition: TransitionModel = new TransitionModel();\n\n  constructor() {\n    this.uuid = 'mapping.' + Math.floor((Math.random() * 1000000) + 1).toString();\n    this.cfg = ConfigModel.getConfig();\n  }\n\n  getFirstCollectionField(isSource: boolean): Field {\n    for (const f of isSource ? this.sourceFields : this.targetFields) {\n      if (f.field.isInCollection()) {\n        return f.field;\n      }\n    }\n    return null;\n  }\n\n  isLookupMode(): boolean {\n    for (const f of this.sourceFields.concat(this.targetFields)) {\n      if (f.field.enumeration) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Add the specified field to this field mapping.\n   *\n   * @param field - field to add to the mapping\n   * @param first - if true add the field to the beginning of the array, last otherwise.\n   */\n  addField(field: Field, first: boolean): MappedField {\n    const mappedField: MappedField = new MappedField();\n    mappedField.field = field;\n    if (first) {\n      this.getMappedFields(field.isSource()).unshift(mappedField);\n    } else {\n      this.getMappedFields(field.isSource()).push(mappedField);\n    }\n    return mappedField;\n  }\n\n  /**\n   * Remove the specified field from this field mapping.\n   *\n   * @param field\n   */\n  removeField(field: Field) {\n    const mappedFields = this.getMappedFields(field.isSource());\n    DataMapperUtil.removeItemFromArray(mappedFields.find(mf => mf.field === field), mappedFields);\n  }\n\n  /**\n   * Return the number of user-defined (non-padding) fields in this mapping.\n   *\n   * @param field\n   */\n  getUserFieldCount(field: Field): number {\n    const mappedFields = this.getMappedFields(field.isSource());\n    let userFieldCount = 0;\n\n    for (const mappedField of mappedFields) {\n      if (!mappedField.isPadField()) {\n        userFieldCount++;\n      }\n    }\n    return userFieldCount;\n  }\n\n  hasMappedField(isSource: boolean) {\n    return isSource ? this.sourceFields.length > 0 : this.targetFields.length > 0;\n  }\n\n  isEmpty() {\n    return this.sourceFields.length === 0 && this.targetFields.length === 0;\n  }\n\n  isFullyMapped(): boolean {\n    return this.sourceFields.length > 0 && this.targetFields.length > 0;\n  }\n\n  addMappedField(mappedField: MappedField, isSource: boolean): void {\n    this.getMappedFields(isSource).push(mappedField);\n  }\n\n  removeMappedField(mappedField: MappedField): void {\n    DataMapperUtil.removeItemFromArray(mappedField, this.getMappedFields(mappedField.field.isSource()));\n  }\n\n  getMappedFieldForField(field: Field): MappedField {\n    for (const mappedField of this.getMappedFields(field.isSource())) {\n      if (mappedField.field === field) {\n        return mappedField;\n      }\n    }\n    return null;\n  }\n\n  getMappedFieldForIndex(index: string, isSource: boolean): MappedField {\n    if (!index) {\n      return null;\n    }\n    const mappedFields = this.getMappedFields(isSource);\n    if (+index - 1 > mappedFields.length - 1) {\n      return null;\n    }\n    return mappedFields[+index - 1];\n  }\n\n  getIndexForMappedField(mappedField: MappedField): number {\n    if (!mappedField || !mappedField.field) {\n      return null;\n    }\n    return this.getMappedFields(mappedField.field.isSource()).indexOf(mappedField) + 1;\n  }\n\n  /**\n   * Return an array of user mapped fields for the specified panel in this field pair instance.  No\n   * data-mapper generated padding fields will be included.\n   *\n   * @param isSource - true source panel, false target panel\n   */\n  getUserMappedFields(isSource: boolean): MappedField[] {\n    const workingFields = isSource ? this.sourceFields : this.targetFields;\n    const resultFields: MappedField[] = [new MappedField()];\n\n    for (const mappedField of workingFields) {\n      if (!mappedField.isPadField()) {\n        resultFields.push(mappedField);\n      }\n    }\n    resultFields.shift();\n    return resultFields;\n  }\n\n  getMappedFields(isSource: boolean): MappedField[] {\n    return isSource ? this.sourceFields : this.targetFields;\n  }\n\n  getLastMappedField(isSource: boolean): MappedField {\n    const fields: MappedField[] = this.getMappedFields(isSource);\n    if ((fields != null) && (fields.length > 0)) {\n      return fields[fields.length - 1];\n    }\n    return null;\n  }\n\n  getFields(isSource: boolean): Field[] {\n    const fields: Field[] = [];\n    for (const mappedField of this.getMappedFields(isSource)) {\n      if (mappedField.field != null) {\n        fields.push(mappedField.field);\n      }\n    }\n    return fields;\n  }\n\n  getFieldNames(isSource: boolean): string[] {\n    const fields: Field[] = this.getFields(isSource);\n    Field.alphabetizeFields(fields);\n    const names: string[] = [];\n    for (const field of fields) {\n      names.push(field.name);\n    }\n    return names;\n  }\n\n  getFieldPaths(isSource: boolean): string[] {\n    const fields: Field[] = this.getFields(isSource);\n    Field.alphabetizeFields(fields);\n    const paths: string[] = [];\n    for (const field of fields) {\n      paths.push(field.path);\n    }\n    return paths;\n  }\n\n  hasFieldActions(): boolean {\n    for (const mappedField of this.getAllMappedFields()) {\n      if (mappedField.actions.length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getAllFields(): Field[] {\n    return this.getFields(true).concat(this.getFields(false));\n  }\n\n  getAllMappedFields(): MappedField[] {\n    return this.getMappedFields(true).concat(this.getMappedFields(false));\n  }\n\n  isFieldMapped(field: Field): boolean {\n    return this.getMappedFieldForField(field) != null;\n  }\n\n  hasTransformation(): boolean {\n    const mappedFields: MappedField[] = this.getAllMappedFields();\n    for (const mappedField of mappedFields) {\n      if (mappedField.actions.length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Walk all target field mappings and return one of corresponding source field name\n   * if the specified field is already the target of a previous mapping, null otherwise.\n   *\n   * @param field\n   */\n  public getMappedTarget(field: Field): string {\n    const mappings: MappingModel[] = this.cfg.mappings.mappings;\n\n    if (field.isSource()) {\n      return null;\n    }\n    for (const m of mappings) {\n      if (m.targetFields.length === 0) {\n        continue;\n      }\n\n      for (const mappedOutputField of m.targetFields) {\n        if (mappedOutputField.field.docDef === field.docDef\n          && mappedOutputField.field.path === field.path) {\n          if (m.isFieldMapped(field)) {\n            return m.sourceFields[0].field.name;\n          }\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MappingDefinition.html":{"url":"classes/MappingDefinition.html","title":"class - MappingDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MappingDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeMapping\n                            \n                            \n                                    Static\n                                MAPPING_NAME_PREFIX\n                            \n                            \n                                mappings\n                            \n                            \n                                name\n                            \n                            \n                                parsedDocs\n                            \n                            \n                                    Private\n                                tables\n                            \n                            \n                                    Private\n                                tablesByName\n                            \n                            \n                                    Private\n                                tablesBySourceTargetKey\n                            \n                            \n                                templateText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTable\n                            \n                            \n                                findMappingsForField\n                            \n                            \n                                getAllMappings\n                            \n                            \n                                getTableByName\n                            \n                            \n                                getTableBySourceTarget\n                            \n                            \n                                getTables\n                            \n                            \n                                removeMapping\n                            \n                            \n                                removeTableByName\n                            \n                            \n                                templateExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mappingDefinitionId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mappingDefinitionId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeMapping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MAPPING_NAME_PREFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'UI.'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mappings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedDocs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tables\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LookupTable[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tablesByName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tablesBySourceTargetKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templateText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:31\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTable\n                        \n                        \n                    \n                \n            \n            \n                \naddTable(table: LookupTable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                LookupTable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findMappingsForField\n                        \n                        \n                    \n                \n            \n            \n                \nfindMappingsForField(field: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MappingModel[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllMappings\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllMappings(includeActiveMapping: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    includeActiveMapping\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MappingModel[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTableByName\n                        \n                        \n                    \n                \n            \n            \n                \ngetTableByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LookupTable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTableBySourceTarget\n                        \n                        \n                    \n                \n            \n            \n                \ngetTableBySourceTarget(sourceIdentifier: string, targetIdentifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceIdentifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetIdentifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LookupTable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTables\n                        \n                        \n                    \n                \n            \n            \n                \ngetTables()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LookupTable[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMapping\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMapping(m: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    m\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeTableByName\n                        \n                        \n                    \n                \n            \n            \n                \nremoveTableByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            templateExists\n                        \n                        \n                    \n                \n            \n            \n                \ntemplateExists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MappingModel } from './mapping.model';\nimport { LookupTable } from '../models/lookup-table.model';\nimport { Field } from '../models/field.model';\nimport { DocumentDefinition } from '../models/document-definition.model';\n\nimport { DataMapperUtil } from '../common/data-mapper-util';\n\nexport class MappingDefinition {\n  static MAPPING_NAME_PREFIX = 'UI.';\n\n  name: string = null;\n  mappings: MappingModel[] = [];\n  activeMapping: MappingModel = null;\n  parsedDocs: DocumentDefinition[] = [];\n  templateText: string = null;\n\n  private tables: LookupTable[] = [];\n  private tablesBySourceTargetKey: { [key: string]: LookupTable; } = {};\n  private tablesByName: { [key: string]: LookupTable; } = {};\n\n  constructor(mappingDefinitionId: number) {\n    this.name = MappingDefinition.MAPPING_NAME_PREFIX + mappingDefinitionId;\n  }\n\n  templateExists(): boolean {\n    return ((this.templateText != null) && (this.templateText !== ''));\n  }\n\n  addTable(table: LookupTable): void {\n    this.tablesBySourceTargetKey[table.getInputOutputKey()] = table;\n    this.tablesByName[table.name] = table;\n    this.tables.push(table);\n  }\n\n  getTableByName(name: string): LookupTable {\n    return this.tablesByName[name];\n  }\n\n  getTableBySourceTarget(sourceIdentifier: string, targetIdentifier: string): LookupTable {\n    const key: string = sourceIdentifier + ':' + targetIdentifier;\n    return this.tablesBySourceTargetKey[key];\n  }\n\n  getTables(): LookupTable[] {\n    const tables: LookupTable[] = [];\n    for (const key in this.tablesByName) {\n      if (!this.tablesByName.hasOwnProperty(key)) {\n        continue;\n      }\n      const table: LookupTable = this.tablesByName[key];\n      tables.push(table);\n    }\n    return tables;\n  }\n\n  removeTableByName(name: string) {\n    if (name) {\n      const table = this.tablesByName[name];\n      const iokey = table.getInputOutputKey();\n      if (this.tablesByName[name]) {\n        delete this.tables[this.tables.indexOf(table)];\n        delete this.tablesByName[name];\n        delete this.tablesBySourceTargetKey[iokey];\n      }\n    }\n  }\n\n  getAllMappings(includeActiveMapping: boolean): MappingModel[] {\n    const mappings: MappingModel[] = [].concat(this.mappings);\n    if (includeActiveMapping) {\n      if (this.activeMapping == null) {\n        return mappings;\n      }\n      for (const mapping of mappings) {\n        if (mapping === this.activeMapping) {\n          return mappings;\n        }\n      }\n      mappings.push(this.activeMapping);\n    }\n    return mappings;\n  }\n\n  findMappingsForField(field: Field): MappingModel[] {\n    const mappingsForField: MappingModel[] = [];\n    for (const m of this.mappings) {\n      if (m.isFieldMapped(field)) {\n        mappingsForField.push(m);\n      }\n    }\n    return mappingsForField;\n  }\n\n  removeMapping(m: MappingModel): boolean {\n    return DataMapperUtil.removeItemFromArray(m, this.mappings);\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingDetailComponent.html":{"url":"components/MappingDetailComponent.html","title":"component - MappingDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mappingSelectionRequiredSubscription\n                            \n                            \n                                sourcesHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitle\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeMapping\n                            \n                            \n                                    Private\n                                selectMapping\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMapping\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMapping(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            selectMapping\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectMapping(field: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mappingSelectionRequiredSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourcesHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CollapsableHeaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('sourcesHeader')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnDestroy, ViewChild } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\nimport { MappingModel } from '../../models/mapping.model';\n\nimport { CollapsableHeaderComponent } from '../mapping-detail/collapsable-header.component';\n\nimport { ModalWindowComponent } from '../modal/modal-window.component';\nimport { MappingSelectionComponent } from '../mapping-detail/mapping-selection.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'mapping-detail',\n  templateUrl: './mapping-detail.component.html',\n})\n\nexport class MappingDetailComponent implements OnInit, OnDestroy {\n  @Input() cfg: ConfigModel;\n  @Input() modalWindow: ModalWindowComponent;\n\n  @ViewChild('sourcesHeader')\n  sourcesHeader: CollapsableHeaderComponent;\n\n  private mappingSelectionRequiredSubscription: Subscription;\n\n  ngOnInit(): void {\n    this.mappingSelectionRequiredSubscription = this.cfg.mappingService.mappingSelectionRequired$.subscribe((field: Field) => {\n      this.selectMapping(field);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.mappingSelectionRequiredSubscription.unsubscribe();\n  }\n\n  getTitle(): string {\n    return this.cfg.mappings.activeMapping.isLookupMode() ? 'Lookup Mapping' : 'Mapping Details';\n  }\n\n  removeMapping(event: MouseEvent): void {\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Remove';\n    this.modalWindow.headerText = 'Remove Mapping?';\n    this.modalWindow.message = 'Are you sure you want to remove the current mapping?';\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      const activeMapping = this.cfg.mappings.activeMapping;\n      if (activeMapping.isLookupMode) {\n        this.cfg.mappings.removeTableByName(activeMapping.transition.lookupTableName);\n      }\n      this.cfg.mappingService.removeMapping(activeMapping);\n      this.cfg.showMappingDetailTray = false;\n    };\n    this.modalWindow.show();\n  }\n\n  private selectMapping(field: Field): void {\n    const mappingsForField: MappingModel[] = this.cfg.mappings.findMappingsForField(field);\n    const self: MappingDetailComponent = this;\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Select';\n    this.modalWindow.headerText = 'Select Mapping';\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      const c: MappingSelectionComponent = mw.nestedComponent as MappingSelectionComponent;\n      c.selectedField = field;\n      c.cfg = self.cfg;\n      c.mappings = mappingsForField;\n      c.modalWindow = this.modalWindow;\n    };\n    this.modalWindow.nestedComponentType = MappingSelectionComponent;\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      this.cfg.errorService.clearValidationErrors();\n      const c: MappingSelectionComponent = mw.nestedComponent as MappingSelectionComponent;\n      const mapping: MappingModel = c.getSelectedMapping();\n      self.cfg.mappingService.selectMapping(mapping);\n    };\n    this.modalWindow.cancelButtonHandler = (mw: ModalWindowComponent) => {\n      self.cfg.mappingService.selectMapping(null);\n    };\n    this.modalWindow.show();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        {{ getTitle() }}\n        \n      \n    \n\n    \n\n      \n        \n\n          \n          \n            \n\n              \n                \n                  \n                  \n                \n              \n            \n\n            \n              \n              \n                \n                  \n                  \n                \n              \n            \n          \n\n          \n          \n            \n\n              \n                \n                  \n                  \n                \n              \n            \n\n            \n              \n              \n                \n                  \n                  \n                \n              \n            \n          \n        \n      \n\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ getTitle() }}n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingFieldActionArgumentComponent.html":{"url":"components/MappingFieldActionArgumentComponent.html","title":"component - MappingFieldActionArgumentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingFieldActionArgumentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-field-action-argument\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-field-action-argument.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkIconEnabled\n                            \n                            \n                                delimiters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acceptInput\n                            \n                            \n                                actionConfigParamSelectionChanged\n                            \n                            \n                                contentChanged\n                            \n                            \n                                getActionConfigParamValues\n                            \n                            \n                                getActionConfigParamVDefault\n                            \n                            \n                                getLabel\n                            \n                            \n                                getMappedFieldActions\n                            \n                            \n                                isUserDelimiter\n                            \n                            \n                                modeIsSupported\n                            \n                            \n                                validateActionConfigParamSelection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                actionIndex\n                            \n                            \n                                argConfig\n                            \n                            \n                                argValIndex\n                            \n                            \n                                cfg\n                            \n                            \n                                mappedField\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:39\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n                \n                    \n                        Type :         FieldAction\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        actionIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        argConfig\n                    \n                \n                \n                    \n                        Type :         FieldActionArgument\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        argValIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mappedField\n                    \n                \n                \n                    \n                        Type :         MappedField\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            acceptInput\n                        \n                        \n                    \n                \n            \n            \n                \nacceptInput(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:63\n                \n            \n\n\n            \n                \n                    The user has selected the check icon at the end of the input text widget.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            actionConfigParamSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nactionConfigParamSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:102\n                \n            \n\n\n            \n                \n                    A mapping field action parameter selection has been made either from a pull-down menu\nor from user input to a text field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            contentChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncontentChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:53\n                \n            \n\n\n            \n                \n                    The input text widget content has changed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionConfigParamValues\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionConfigParamValues(argConfig: FieldActionArgument)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:72\n                \n            \n\n\n            \n                \n                    Return in a string array the parameter values for the specified field action argument.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argConfig\n                                    \n                                                FieldActionArgument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     String[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionConfigParamVDefault\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionConfigParamVDefault(argConfig: FieldActionArgument, actionIndex: number, argValIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:137\n                \n            \n\n\n            \n                \n                    Return a string representing the default value for the field action argument pull-down.  If a mapped\nfield already exists for this component then use that to determine the displayed valued in the\npull-down; otherwise use the sequential configuration value based on the argument value index.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    argConfig\n                                    \n                                                FieldActionArgument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nargument configuration used if no mapped field exists\n\n\n                                    \n                                \n                                \n                                    actionIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nused when multiple actions are specified\n\n\n                                    \n                                \n                                \n                                    argValIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nindex into the argument values for any one specific action.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLabel(argConfigName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:151\n                \n            \n\n\n            \n                \n                    Translate an internal label to a human legible form.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argConfigName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappedFieldActions\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappedFieldActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     FieldAction[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUserDelimiter\n                        \n                        \n                    \n                \n            \n            \n                \nisUserDelimiter(delimiterModel: TransitionDelimiterModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    delimiterModel\n                                    \n                                                TransitionDelimiterModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            modeIsSupported\n                        \n                        \n                    \n                \n            \n            \n                \nmodeIsSupported(delimiterModel: TransitionDelimiterModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    delimiterModel\n                                    \n                                                TransitionDelimiterModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateActionConfigParamSelection\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateActionConfigParamSelection(acp: FieldActionArgumentValue[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:85\n                \n            \n\n\n            \n                \n                    Simply validate that the user isn't attempting a conversion to the original type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    acp\n                                    \n                                            FieldActionArgumentValue[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            checkIconEnabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delimiters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionDelimiterModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { DataMapperUtil } from '../../common/data-mapper-util';\nimport { MappedField } from '../../models/mapping.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { FieldAction, FieldActionArgument, FieldActionArgumentValue } from '../../models/field-action.model';\nimport { TransitionDelimiterModel, TransitionModel, TransitionDelimiter } from '../../models/transition.model';\nimport { ErrorScope, ErrorType, ErrorInfo, ErrorLevel } from '../../models/error.model';\n\n@Component({\n  selector: 'mapping-field-action-argument',\n  templateUrl: './mapping-field-action-argument.component.html',\n})\n\nexport class MappingFieldActionArgumentComponent {\n  @Input() action: FieldAction;\n  @Input() actionIndex: number;\n  @Input() argValIndex: number;\n  @Input() argConfig: FieldActionArgument;\n  @Input() cfg: ConfigModel;\n  @Input() mappedField: MappedField;\n\n  delimiters: TransitionDelimiterModel[];\n  private checkIconEnabled = false;\n\n  constructor() {\n    TransitionModel.initialize();\n    this.delimiters = TransitionModel.delimiterModels;\n  }\n\n  getMappedFieldActions(): FieldAction[] {\n    return this.mappedField ? this.mappedField.actions : [this.action];\n  }\n\n  /**\n   * The input text widget content has changed.\n   */\n  contentChanged(): void {\n    this.checkIconEnabled = true;\n    this.cfg.mappingService.notifyMappingUpdated();\n  }\n\n  /**\n   * The user has selected the check icon at the end of the input text widget.\n   *\n   * @param event\n   */\n  acceptInput(event: any): void {\n    this.actionConfigParamSelectionChanged(event);\n  }\n\n  /**\n   * Return in a string array the parameter values for the specified field action argument.\n   *\n   * @param argConfig\n   */\n  getActionConfigParamValues(argConfig: FieldActionArgument): String[] {\n    const acpv: String[] = [];\n    for (const argument of argConfig.values) {\n      acpv.push(argument);\n    }\n    return acpv;\n  }\n\n  /**\n   * Simply validate that the user isn't attempting a conversion to the original type.\n   *\n   * @param acp\n   */\n  validateActionConfigParamSelection(acp: FieldActionArgumentValue[]): void {\n    this.cfg.errorService.clearFieldErrors();\n    if (acp != null && acp.length === 2) {\n      if (acp[0].value === acp[1].value) {\n        this.cfg.errorService.addError(new ErrorInfo({\n          message: 'Please select differing \\'from\\' and \\'to\\' units in your conversion transformation.',\n          level: ErrorLevel.ERROR, field: this.mappedField, scope: ErrorScope.FIELD, type: ErrorType.USER}));\n      }\n    }\n  }\n\n  /**\n   * A mapping field action parameter selection has been made either from a pull-down menu\n   * or from user input to a text field.\n   *\n   * @param event\n   */\n  actionConfigParamSelectionChanged(event: any): void {\n    this.cfg.errorService.clearFieldErrors();\n    // Make sure they've specified something.\n    if (!event.target.value || event.target.value.length === 0) {\n      this.cfg.errorService.addError(new ErrorInfo({\n        message: 'You must specify a transformation argument value.',\n        level: ErrorLevel.INFO, field: this.mappedField, scope: ErrorScope.FIELD, type: ErrorType.USER}));\n      return;\n    }\n    this.mappedField.parsedData.userCreated = true;\n\n    // Identify the pull-down\n    if (event.target.selectedOptions != null) {\n      const attributes: any = event.target.selectedOptions.item(0).attributes;\n      const selectedArgValName: any = attributes.getNamedItem('value').value;\n      const argValIndex: any = attributes.getNamedItem('argValIndex').value;\n      const actionIndex: any = attributes.getNamedItem('actionIndex').value;\n      const action: FieldAction = this.mappedField ? this.mappedField.actions[actionIndex] : this.action;\n      action.argumentValues[argValIndex].value = selectedArgValName;\n      this.validateActionConfigParamSelection(action.argumentValues);\n    }\n    this.cfg.mappingService.notifyMappingUpdated();\n    this.checkIconEnabled = false;\n    // this.enableCheck();\n  }\n\n  /**\n   * Return a string representing the default value for the field action argument pull-down.  If a mapped\n   * field already exists for this component then use that to determine the displayed valued in the\n   * pull-down; otherwise use the sequential configuration value based on the argument value index.\n   *\n   * @param argConfig - argument configuration used if no mapped field exists\n   * @param actionIndex - used when multiple actions are specified\n   * @param argValIndex - index into the argument values for any one specific action.\n   */\n  getActionConfigParamVDefault(argConfig: FieldActionArgument, actionIndex: number, argValIndex: number): String {\n    const action: FieldAction = this.getMappedFieldActions()[actionIndex];\n    if (action != null && action.argumentValues.length > 0) {\n      return action.argumentValues[argValIndex].value;\n    } else {\n      return argConfig.values[argValIndex];\n    }\n  }\n\n  /**\n   * Translate an internal label to a human legible form.\n   *\n   * @param argConfigName\n   */\n  getLabel(argConfigName: string): string {\n    return DataMapperUtil.toDisplayable(argConfigName);\n  }\n\n  modeIsSupported(delimiterModel: TransitionDelimiterModel): boolean {\n    if ([TransitionDelimiter.NONE, TransitionDelimiter.USER_DEFINED].includes(delimiterModel.delimiter)) {\n      return false;\n    }\n    return true;\n  }\n\n  isUserDelimiter(delimiterModel: TransitionDelimiterModel) {\n    return (delimiterModel.delimiter === TransitionDelimiter.USER_DEFINED);\n  }\n\n}\n\n    \n\n    \n        \n  \n\n  \n     0; then dropdown; else textInput\"> \n  \n  \n    {{ getLabel(argConfig.name) }}\n    \n      {{ actionConfigParamVal }}\n      \n    \n  \n  \n    {{ getLabel(argConfig.name) }}\n    \n      \n        \n          {{ delimiter.prettyName }}\n        \n      \n    \n  \n\n  \n    {{ getLabel(argConfig.name) }}: \n    \n      \n    \n    \n      \n    \n\n    \n      \n        \n      \n      \n        \n      \n    \n    -->\n  \n\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         0; then dropdown; else textInput\">         {{ getLabel(argConfig.name) }}          {{ actionConfigParamVal }}                  {{ getLabel(argConfig.name) }}                            {{ delimiter.prettyName }}                          {{ getLabel(argConfig.name) }}:                                                                                 -->    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingFieldActionArgumentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingFieldActionComponent.html":{"url":"components/MappingFieldActionComponent.html","title":"component - MappingFieldActionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingFieldActionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-field-action\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-field-action.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actionsExistForField\n                            \n                            \n                                configSelectionChanged\n                            \n                            \n                                getActionConfigs\n                            \n                            \n                                getMappedFieldActions\n                            \n                            \n                                isIndexArg\n                            \n                            \n                                removeAction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                isSource\n                            \n                            \n                                mappedField\n                            \n                            \n                                mapping\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSource\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mappedField\n                    \n                \n                \n                    \n                        Type :         MappedField\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            actionsExistForField\n                        \n                        \n                    \n                \n            \n            \n                \nactionsExistForField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nconfigSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:66\n                \n            \n\n\n            \n                \n                    A mapping field action configuration selection has been made.  Note that action field arguments, if any,\nmay be specified by either a text field or pull-down menu.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionConfigs\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionConfigs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     FieldActionDefinition[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappedFieldActions\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappedFieldActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     FieldAction[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isIndexArg\n                        \n                        \n                    \n                \n            \n            \n                \nisIndexArg(argVal: string, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeAction\n                        \n                        \n                    \n                \n            \n            \n                \nremoveAction(action: FieldAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:56\n                \n            \n\n\n            \n                \n                    Remove the specified field action (transformation) from the current mapped field's\nactions.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : DataMapperUtil.toDisplayable\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { DataMapperUtil } from '../../common/data-mapper-util';\nimport { MappingModel, MappedField } from '../../models/mapping.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { FieldAction, FieldActionDefinition, Multiplicity } from '../../models/field-action.model';\n\n@Component({\n  selector: 'mapping-field-action',\n  templateUrl: './mapping-field-action.component.html',\n})\n\nexport class MappingFieldActionComponent {\n  @Input() cfg: ConfigModel;\n  @Input() mappedField: MappedField;\n  @Input() isSource: boolean;\n  @Input() mapping: MappingModel;\n  getLabel = DataMapperUtil.toDisplayable;\n\n  getMappedFieldActions(): FieldAction[] {\n    return this.mappedField.actions;\n  }\n\n  isIndexArg(argVal: string, index: number): boolean {\n    return (argVal === 'Index' && index === 0);\n  }\n\n  actionsExistForField(): boolean {\n    return (this.cfg.fieldActionService.getActionsAppliesToField(this.mapping, this.isSource, Multiplicity.ONE_TO_ONE).length > 0);\n  }\n\n  getActionConfigs(): FieldActionDefinition[] {\n    return this.cfg.fieldActionService.getActionsAppliesToField(this.mapping, this.isSource, Multiplicity.ONE_TO_ONE);\n  }\n\n  /**\n   * Remove the specified field action (transformation) from the current mapped field's\n   * actions.\n   * @param action\n   */\n  removeAction(action: FieldAction): void {\n    this.mappedField.removeAction(action);\n    this.cfg.mappingService.notifyMappingUpdated();\n  }\n\n  /**\n   * A mapping field action configuration selection has been made.  Note that action field arguments, if any,\n   * may be specified by either a text field or pull-down menu.\n   * @param event\n   */\n  configSelectionChanged(event: any) {\n    const attributes: any = event.target.selectedOptions.item(0).attributes;\n    const selectedActionName: any = attributes.getNamedItem('value').value;\n    const selectedActionIndex: any = attributes.getNamedItem('actionIndex').value;\n    const action: FieldAction = this.getMappedFieldActions()[selectedActionIndex];\n    if (action.name !== selectedActionName) {\n      action.argumentValues = [];  // Invalidate the previously selected field action arguments.\n      const fieldActionDefinition = this.cfg.fieldActionService.getActionDefinitionForName(selectedActionName, Multiplicity.ONE_TO_ONE);\n      fieldActionDefinition.populateFieldAction(action);\n\n      // If the field action configuration predefines argument values then populate the fields with\n      // default values.  Needed to support pull-down menus in action argument definitions.\n      if (action.argumentValues.values && action.argumentValues.length > 0\n        && fieldActionDefinition.arguments[0] && fieldActionDefinition.arguments[0].values\n        && fieldActionDefinition.arguments[0].values.length > 0) {\n        for (let i = 0; i \n    \n\n    \n        \n  \n\n    \n      \n        \n        \n          {{ getLabel(actionConfig.name) }}\n        \n        \n          \n        \n        \n      \n\n      \n        \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      {{ getLabel(actionConfig.name) }}                                                                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingFieldActionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingFieldContainerComponent.html":{"url":"components/MappingFieldContainerComponent.html","title":"component - MappingFieldContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingFieldContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-field-container\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-field-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                    Private\n                                diff\n                            \n                            \n                                    Private\n                                elem\n                            \n                            \n                                inputId\n                            \n                            \n                                    Private\n                                isDragDropTarget\n                            \n                            \n                                    Private\n                                searchFilter\n                            \n                            \n                                    Private\n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allowDrop\n                            \n                            \n                                displayFieldSearchBox\n                            \n                            \n                                displayTransitionSelection\n                            \n                            \n                                dragEnterLeave\n                            \n                            \n                                endDrag\n                            \n                            \n                                getAddButtonLabel\n                            \n                            \n                                getDisplayName\n                            \n                            \n                                getPanelIconCSSClass\n                            \n                            \n                                getSearchPlaceholder\n                            \n                            \n                                getTopFieldTypeLabel\n                            \n                            \n                                handleMouseOver\n                            \n                            \n                                isAddButtonVisible\n                            \n                            \n                                isPartialComponent\n                            \n                            \n                                itemIsDocument\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeMappedField\n                            \n                            \n                                selectionChanged\n                            \n                            \n                                startDrag\n                            \n                            \n                                updateSearchFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                isSource\n                            \n                            \n                                mapping\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:45\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSource\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allowDrop\n                        \n                        \n                    \n                \n            \n            \n                \nallowDrop(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayFieldSearchBox\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayFieldSearchBox()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayTransitionSelection\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayTransitionSelection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dragEnterLeave\n                        \n                        \n                    \n                \n            \n            \n                \ndragEnterLeave(event: any, entering: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entering\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endDrag\n                        \n                        \n                    \n                \n            \n            \n                \nendDrag(event: any, insertBeforeMappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    insertBeforeMappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAddButtonLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetAddButtonLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDisplayName\n                        \n                        \n                    \n                \n            \n            \n                \ngetDisplayName(model: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPanelIconCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetPanelIconCSSClass(model: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSearchPlaceholder\n                        \n                        \n                    \n                \n            \n            \n                \ngetSearchPlaceholder()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTopFieldTypeLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetTopFieldTypeLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseOver\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseOver(evt1: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt1\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAddButtonVisible\n                        \n                        \n                    \n                \n            \n            \n                \nisAddButtonVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPartialComponent\n                        \n                        \n                    \n                \n            \n            \n                \nisPartialComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            itemIsDocument\n                        \n                        \n                    \n                \n            \n            \n                \nitemIsDocument(model: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMappedField\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMappedField(mappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startDrag\n                        \n                        \n                    \n                \n            \n            \n                \nstartDrag(event: any, draggedMappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    draggedMappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSearchFilter\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSearchFilter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            diff\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            elem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inputId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDragDropTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { DataMapperUtil } from '../../common/data-mapper-util';\nimport { MappingModel, MappedField } from '../../models/mapping.model';\nimport { TransitionMode } from '../../models/transition.model';\nimport { Observable } from 'rxjs';\nimport { Field } from '../../models/field.model';\nimport { ModalWindowComponent } from '../modal/modal-window.component';\n\n@Component({\n  selector: 'mapping-field-container',\n  templateUrl: './mapping-field-container.component.html',\n})\n\nexport class MappingFieldContainerComponent implements OnInit {\n  @Input() cfg: ConfigModel;\n  @Input() isSource = false;\n  @Input() mapping: MappingModel;\n  @Input() modalWindow: ModalWindowComponent;\n\n  inputId: String;\n\n  private isDragDropTarget = false;\n  private elem = null;\n  private start = 0;\n  private diff = 0;\n  private searchFilter = '';\n  dataSource: Observable;\n\n  constructor() {\n    this.dataSource = Observable.create((observer: any) => {\n      observer.next(this.cfg.mappingService.executeFieldSearch(this.cfg, this.searchFilter, this.isSource));\n    });\n  }\n\n  ngOnInit() {\n    this.inputId = 'input-' + this.isSource ? 'source' : 'target';\n  }\n\n  itemIsDocument(model: any): boolean {\n    return (!model.field);\n  }\n  getDisplayName(model: any): string {\n    return model.displayName;\n  }\n\n  isPartialComponent(): boolean {\n    return true;\n  }\n\n  getPanelIconCSSClass(model: any): string {\n    return (model.field) ? '' : (this.isSource ? 'fa fa-hdd-o' : 'fa fa-download');\n  }\n\n  handleMouseOver(evt1: MouseEvent): void {\n    if (this.elem != null) {\n      evt1.stopPropagation();\n      evt1.preventDefault();\n      let end = 0;\n\n      if (evt1['pageY']) {\n        end = evt1['pageY'];\n      } else if (evt1['clientY']) {\n        end = evt1['clientY'];\n      }\n      this.diff = end - this.start;\n      this.elem.style['top'] = this.diff + 'px';\n    }\n  }\n\n  startDrag(event: any, draggedMappedField: MappedField): void {\n    event = event || window.event;\n    event.dataTransfer.setData('text', '');  // firefox bug\n    this.cfg.currentDraggedField = draggedMappedField;\n    /* this code does correctly constrain the drag movement to the vertical area of\n     * the mapping details section. It couldn't correctly identify the on-drop target\n    event = event || window.event;\n    event.stopPropagation();\n    event.preventDefault();\n    this.elem = event.currentTarget;\n\n    if (event['pageY']) {\n        this.start = event['pageY'];\n    } else if (event['clientY']) {\n        this.start = event['clientY'];\n    }\n\n    this.elem.style.position = 'relative';\n    this.elem.onmouseup = (evt: any) => {\n      // See endDrag()\n      evt.stopPropagation();\n      evt.preventDefault();\n    };\n    */\n  }\n\n  dragEnterLeave(event: any, entering: boolean): void {\n    this.isDragDropTarget = entering;\n  }\n\n  allowDrop(event: any): void {\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    }\n    this.isDragDropTarget = true;\n  }\n\n  endDrag(event: any, insertBeforeMappedField: MappedField): void {\n    this.isDragDropTarget = false;\n\n    const droppedMappedField: MappedField = this.cfg.currentDraggedField;\n    if (droppedMappedField == null) {\n      return;\n    }\n\n    if (insertBeforeMappedField != null) {\n      this.cfg.mappingService.moveMappedFieldTo(this.mapping, droppedMappedField,\n        this.mapping.getIndexForMappedField(insertBeforeMappedField));\n\n      // Update indexing in any conditional mapping expressions.\n      if (this.mapping.transition && this.mapping.transition.enableExpression) {\n        this.mapping.transition.expression.updateFieldReference(this.mapping);\n        this.cfg.mappingService.notifyMappingUpdated();\n      }\n    }\n    this.cfg.currentDraggedField = null;\n  }\n\n  displayTransitionSelection(): boolean {\n    return (this.isSource && !this.mapping.transition.enableExpression &&\n      (this.mapping.transition.isOneToManyMode() || this.mapping.transition.isManyToOneMode()\n      || this.mapping.transition.isEnumerationMode()));\n  }\n\n  displayFieldSearchBox(): boolean {\n\n    const mappedFields = this.mapping.getMappedFields(this.isSource);\n    if (mappedFields.length === 0) {\n      return true;\n    } else if (mappedFields[0].field.isInCollection()) {\n      return false;\n    }\n\n    if (this.mapping.transition.mode === TransitionMode.ONE_TO_ONE) {\n      return true;\n    }\n    if (this.isSource) {\n      if (this.mapping.transition.mode === TransitionMode.MANY_TO_ONE) {\n        return !mappedFields[0].field.isInCollection();\n      }\n    } else {\n      if (this.mapping.transition.mode === TransitionMode.ONE_TO_MANY) {\n        return !mappedFields[0].field.isInCollection();\n      }\n    }\n    return false;\n  }\n\n  updateSearchFilter(value: string) {\n    this.searchFilter = value;\n  }\n\n  getSearchPlaceholder(): string {\n    return 'Begin typing to search for more ' + (this.isSource ? 'sources' : 'targets');\n  }\n\n  selectionChanged(event: any): void {\n    if (event.item['field']) {\n      this.cfg.mappingService.fieldSelected(event.item['field'], true);\n    }\n    this.searchFilter = '';\n  }\n\n  isAddButtonVisible(): boolean {\n    if (this.isSource && this.mapping.transition.isManyToOneMode()) {\n      return true;\n    } else if (!this.isSource && this.mapping.transition.isOneToManyMode()) {\n      return true;\n    }\n    return false;\n  }\n\n  getTopFieldTypeLabel(): string {\n    return this.isSource ? 'Source' : 'Target';\n  }\n\n  getAddButtonLabel(): string {\n    return this.isSource ? 'Add Source' : 'Add Target';\n  }\n\n  removeMappedField(mappedField: MappedField): void {\n    this.mapping.removeMappedField(mappedField);\n    this.cfg.mappingService.updateMappedField(this.mapping);\n  }\n}\n\n    \n\n    \n        \n\n  \n\n    \n      {{ '  ' + getDisplayName(model) }}\n    \n\n    \n      {{ getDisplayName(model) }}\n    \n\n  \n\n  \n\n    \n      \n\n        \n\n      \n      \n    \n\n    \n      \n    \n  \n\n  \n\n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'  \\' + getDisplayName(model) }}              {{ getDisplayName(model) }}                                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingFieldContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingFieldDetailComponent.html":{"url":"components/MappingFieldDetailComponent.html","title":"component - MappingFieldDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingFieldDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-field-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-field-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                parentObjectName\n                            \n                            \n                                sourceIconCSSClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTransformation\n                            \n                            \n                                displayIndex\n                            \n                            \n                                displayParentObject\n                            \n                            \n                                getFieldPath\n                            \n                            \n                                    Private\n                                getParentObjectName\n                            \n                            \n                                    Private\n                                getSourceIconCSSClass\n                            \n                            \n                                indexSelectionChanged\n                            \n                            \n                                isTransformCapable\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeMappedField\n                            \n                            \n                                    Private\n                                updateTemplateValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                isSource\n                            \n                            \n                                mappedField\n                            \n                            \n                                mapping\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSource\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mappedField\n                    \n                \n                \n                    \n                        Type :         MappedField\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTransformation\n                        \n                        \n                    \n                \n            \n            \n                \naddTransformation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:51\n                \n            \n\n\n            \n                \n                    The add transformation icon has been selected.  Add a field action to the current\nmapped field.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayIndex\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayIndex()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayParentObject\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayParentObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldPath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getParentObjectName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getParentObjectName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getSourceIconCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceIconCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            indexSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nindexSelectionChanged(event: any, mappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:100\n                \n            \n\n\n            \n                \n                    The user has hand-edited the index value of a mapped field.  Perform the following:\n\nAdd place-holders for each index value between the updated value and its previous value.\nRe-sequence the field action indices.\nSort the mapped fields array to get then back into numerical order.\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTransformCapable\n                        \n                        \n                    \n                \n            \n            \n                \nisTransformCapable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMappedField\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMappedField(mappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateTemplateValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTemplateValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentObjectName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceIconCSSClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { MappingModel, MappedField } from '../../models/mapping.model';\nimport { FieldAction } from '../../models/field-action.model';\nimport { ErrorInfo, ErrorLevel, ErrorScope, ErrorType } from '../../models/error.model';\n\n@Component({\n  selector: 'mapping-field-detail',\n  templateUrl: './mapping-field-detail.component.html',\n})\n\nexport class MappingFieldDetailComponent implements OnInit {\n\n  @Input() cfg: ConfigModel;\n  @Input() mapping: MappingModel;\n  @Input() isSource: boolean;\n  @Input() mappedField: MappedField;\n\n  sourceIconCSSClass: string;\n  parentObjectName: string;\n\n  ngOnInit() {\n    this.updateTemplateValues();\n  }\n\n  isTransformCapable() {\n    return (!this.mappedField.isPadField() && this.mappedField.field.name.length > 0);\n  }\n\n  /**\n   * The add transformation icon has been selected.  Add a field action to the current\n   * mapped field.\n   */\n  addTransformation(): void {\n    const actionDefinition = this.cfg.fieldActionService.getActionsAppliesToField(this.mapping, this.isSource)[0];\n    if (actionDefinition == null) {\n      this.cfg.errorService.addError(new ErrorInfo({message: 'The selected field has no applicable transformation actions.',\n        level: ErrorLevel.INFO, scope: ErrorScope.MAPPING, type: ErrorType.USER}));\n      return;\n    }\n    const action: FieldAction = new FieldAction();\n    actionDefinition.populateFieldAction(action);\n    this.mappedField.actions.push(action);\n    this.cfg.mappingService.notifyMappingUpdated();\n  }\n\n  getFieldPath(): string {\n    if (this.mappedField == null || this.mappedField.field == null) {\n      return '[None]';\n    }\n    return this.mappedField.field.path;\n  }\n\n  displayParentObject(): boolean {\n    if (this.mappedField != null && this.mappedField.isPadField()) {\n      this.parentObjectName = '';\n      return true;\n    }\n    if (this.mappedField == null || this.mappedField.field == null\n      || this.mappedField.field.name === null\n      || this.mappedField.field.name.length === 0\n      || this.mappedField.field.docDef == null) {\n      return false;\n    }\n    if (this.parentObjectName == null || this.parentObjectName.length === 0) {\n      this.updateTemplateValues();\n    }\n    return true;\n  }\n\n  displayIndex(): boolean {\n    return this.mapping.getMappedFields(this.isSource).length > 1 && !this.mapping.transition.enableExpression;\n  }\n\n  /**\n   * The user has hand-edited the index value of a mapped field.  Perform the following:\n   *   - Add place-holders for each index value between the updated value and its previous value.\n   *   - Re-sequence the field action indices.\n   *   - Sort the mapped fields array to get then back into numerical order.\n   * @param event\n   * @param mappedField\n   */\n  indexSelectionChanged(event: any, mappedField: MappedField): void {\n    const insertionIndex = Number(event.target.value) || 0;\n    if (insertionIndex === 0) {\n      return;\n    }\n    const mappedFields = this.mapping.getMappedFields(mappedField.isSource());\n    const targetIndex = mappedFields.length;\n    if (insertionIndex > targetIndex) {\n\n      // Add place-holders for each index value between the previous max index and the insertion index.\n      this.cfg.mappingService.addPlaceholders(insertionIndex - mappedFields.length,\n        this.mapping, targetIndex, mappedField.field.isSource());\n    }\n    this.cfg.mappingService.moveMappedFieldTo(this.mapping, mappedField, insertionIndex);\n    this.cfg.mappingService.notifyMappingUpdated();\n  }\n\n  removeMappedField(mappedField: MappedField): void {\n    this.mapping.removeMappedField(mappedField);\n    this.cfg.mappingService.updateMappedField(this.mapping);\n  }\n\n  private updateTemplateValues(): void {\n    this.sourceIconCSSClass = this.getSourceIconCSSClass();\n    this.parentObjectName = this.getParentObjectName();\n  }\n\n  private getSourceIconCSSClass(): string {\n    return this.isSource ? 'fa fa-hdd-o' : 'fa fa-download';\n  }\n\n  private getParentObjectName() {\n    if (this.mappedField == null || this.mappedField.field == null || this.mappedField.field.docDef == null) {\n      return '';\n    }\n    return this.mappedField.field.docDef.getName(ConfigModel.getConfig().showTypes);\n  }\n}\n\n    \n\n    \n        \n\n{{ model['field'].docDef == null ?\n  'Not yet defined' : model['field'].docDef.name }}\n{{ model['field'].path }}\n\n\n\n\n\n\n  \n     {{ parentObjectName }}\n  \n  {{ getFieldPath() }}\n  ({{ mappedField.field.type }})\n  \n\n\n\n\n\n  \n\n    \n    \n    \n\n    \n    \n      {{ mappedField.field.name }}\n    \n\n    \n    \n      Index:\n\n      \n        \n          {{ mapping.getIndexForMappedField(mappedField) }}\n        \n        \n          \n        \n      \n      \n        \n      \n    \n  \n\n  \n\n  \n  \n    \n      \n        Add Transformation\n      \n    \n    \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ model[\\'field\\'].docDef == null ?  \\'Not yet defined\\' : model[\\'field\\'].docDef.name }}{{ model[\\'field\\'].path }}       {{ parentObjectName }}    {{ getFieldPath() }}  ({{ mappedField.field.type }})                              {{ mappedField.field.name }}                  Index:                        {{ mapping.getIndexForMappedField(mappedField) }}                                                                                          Add Transformation                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingFieldDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MappingIdentifierService.html":{"url":"injectables/MappingIdentifierService.html","title":"injectable - MappingIdentifierService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MappingIdentifierService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/mapping-identifier.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentMappingDefinitionId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/services/mapping-identifier.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentMappingDefinitionId\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentMappingDefinitionId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/mapping-identifier.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\n\n@Injectable()\nexport class MappingIdentifierService {\n\n  constructor(private route: ActivatedRoute) {\n  }\n\n  getCurrentMappingDefinitionId(): number {\n    const urlMappingId = this.route.snapshot.paramMap.get('id');\n    if (urlMappingId == null) {\n      return 0;\n    }\n\n    const mappingDefinitionId: number = +urlMappingId;\n    if (isNaN(mappingDefinitionId) || mappingDefinitionId == null) {\n      // Default mapping id\n      return 0;\n    }\n    return mappingDefinitionId;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingListComponent.html":{"url":"components/MappingListComponent.html","title":"component - MappingListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-list\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorSubscription\n                            \n                            \n                                searchFilter\n                            \n                            \n                                searchMode\n                            \n                            \n                                    Private\n                                searchResults\n                            \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fieldPairMatchesSearch\n                            \n                            \n                                getItemsCSSClass\n                            \n                            \n                                getMappedFields\n                            \n                            \n                                getMappingCSSClass\n                            \n                            \n                                getMappingRowsCSSClass\n                            \n                            \n                                getMappings\n                            \n                            \n                                getRowTitleCSSClass\n                            \n                            \n                                getSearchIconCSSClass\n                            \n                            \n                                isActiveMapping\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                search\n                            \n                            \n                                searchResultsVisible\n                            \n                            \n                                selectMapping\n                            \n                            \n                                    Private\n                                storeErrors\n                            \n                            \n                                toggleSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fieldPairMatchesSearch\n                        \n                        \n                    \n                \n            \n            \n                \nfieldPairMatchesSearch(mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItemsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetItemsCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappedFields\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappedFields(mapping: MappingModel, isSource: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MappedField[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappingCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappingCSSClass(mapping: MappingModel, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappingRowsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappingRowsCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappings\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MappingModel[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRowTitleCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetRowTitleCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSearchIconCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetSearchIconCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActiveMapping\n                        \n                        \n                    \n                \n            \n            \n                \nisActiveMapping(mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(searchFilter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchFilter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchResultsVisible\n                        \n                        \n                    \n                \n            \n            \n                \nsearchResultsVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectMapping\n                        \n                        \n                    \n                \n            \n            \n                \nselectMapping(mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            storeErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    storeErrors(errors: ErrorInfo[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errors\n                                    \n                                                ErrorInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSearch\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validationErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnDestroy } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\nimport { MappingModel, MappedField } from '../../models/mapping.model';\nimport { ErrorInfo, ErrorScope, ErrorType } from '../../models/error.model';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'mapping-list',\n  templateUrl: './mapping-list.component.html',\n})\n\nexport class MappingListComponent implements OnInit, OnDestroy {\n  @Input() cfg: ConfigModel;\n\n  searchMode = false;\n  searchFilter = '';\n  validationErrors = new Map();\n  private searchResults: MappingModel[] = [];\n  private errorSubscription: Subscription;\n\n  ngOnInit() {\n    this.cfg.mappingService.notifyMappingUpdated();\n    this.storeErrors(this.cfg.errorService.getErrors());\n    this.errorSubscription = this.cfg.errorService.subscribe(errors => {\n      this.storeErrors(errors);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.errorSubscription) {\n      this.errorSubscription.unsubscribe();\n    }\n  }\n\n  getItemsCSSClass(): string {\n    return 'items mappings' + (this.searchMode ? ' searchShown' : '');\n  }\n\n  searchResultsVisible(): boolean {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      return false;\n    }\n    return (this.searchResults.length === 0);\n  }\n\n  getMappingCSSClass(mapping: MappingModel, index: number): string {\n    let cssClass = 'item ';\n    cssClass += (index % 2 === 1) ? ' even' : '';\n    if (mapping === this.cfg.mappings.activeMapping) {\n      cssClass += ' active';\n    }\n    return cssClass;\n  }\n\n  selectMapping(mapping: MappingModel): void {\n    this.cfg.mappingService.selectMapping(mapping);\n  }\n\n  getRowTitleCSSClass(): string {\n    return this.searchMode ? 'rowTitles searchShown' : 'rowTitles';\n  }\n\n  getMappingRowsCSSClass(): string {\n    return this.searchMode ? 'rows searchShown' : 'rows';\n  }\n\n  getMappings(): MappingModel[] {\n    return this.searchMode ? this.searchResults : [].concat(this.cfg.mappings.getAllMappings(true));\n  }\n\n  getMappedFields(mapping: MappingModel, isSource: boolean): MappedField[] {\n    return mapping.getUserMappedFields(isSource);\n  }\n\n  toggleSearch(): void {\n    this.searchMode = !this.searchMode;\n    this.search(this.searchFilter);\n  }\n\n  getSearchIconCSSClass(): string {\n    const cssClass = 'fa fa-search searchBoxIcon link';\n    return this.searchMode ? (cssClass + ' selectedIcon') : cssClass;\n  }\n\n  fieldPairMatchesSearch(mapping: MappingModel): boolean {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      return true;\n    }\n    const filter: string = this.searchFilter.toLowerCase();\n    const transitionName: string = mapping.transition.getPrettyName();\n    if (transitionName != null && transitionName.toLowerCase().includes(filter)) {\n      return true;\n    }\n    for (const mappedField of mapping.getAllMappedFields()) {\n      const field: Field = mappedField.field;\n      if (field == null || field.path == null) {\n        continue;\n      }\n      if (field.path.toLowerCase().includes(filter)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isActiveMapping(mapping: MappingModel): boolean {\n    return this.cfg.mappings.activeMapping === mapping;\n  }\n\n  private search(searchFilter: string): void {\n    this.searchFilter = searchFilter;\n\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      this.searchResults = [].concat(this.cfg.mappings.getAllMappings(true));\n      return;\n    }\n\n    this.searchResults = [];\n    for (const mapping of this.cfg.mappings.getAllMappings(true)) {\n      if (this.fieldPairMatchesSearch(mapping)) {\n        this.searchResults.push(mapping);\n        break;\n      }\n    }\n  }\n\n  private storeErrors(errors: ErrorInfo[]) {\n    this.validationErrors = new Map();\n    errors.forEach(e => {\n      if (e.scope !== ErrorScope.MAPPING || e.type !== ErrorType.VALIDATION || !e.mapping) {\n        return;\n      }\n      if (!this.validationErrors.has(e.mapping)) {\n        this.validationErrors.set(e.mapping, []);\n      }\n      this.validationErrors.get(e.mapping).push(e);\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          Mappings\n        \n        \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          \n            Sources\n          \n            Targets\n          \n            Type\n          \n        \n        \n      \n    \n    \n      \n        \n          \n            \n              \n              &nbsp;\n              \n            \n            \n              \n              &nbsp;\n              \n            \n            \n              {{ mapping.transition.getPrettyName() }}\n              \n            \n            \n              \n            \n            \n          \n        \n      \n      \n        No search results.\n        \n      \n    \n    {{ cfg.mappings.mappings.length }} mappings\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Mappings                                                                                                                Sources                      Targets                      Type                                                                                                                                                                                                                                {{ mapping.transition.getPrettyName() }}                                                                                                                  No search results.                      {{ cfg.mappings.mappings.length }} mappings      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingListFieldComponent.html":{"url":"components/MappingListFieldComponent.html","title":"component - MappingListFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingListFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-list-field\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-list-field.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayParentObject\n                            \n                            \n                                getFieldPath\n                            \n                            \n                                getParentObjectName\n                            \n                            \n                                getSourceIconCSSClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                isActive\n                            \n                            \n                                isSource\n                            \n                            \n                                mappedField\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isActive\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSource\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mappedField\n                    \n                \n                \n                    \n                        Type :         MappedField\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayParentObject\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayParentObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldPath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParentObjectName\n                        \n                        \n                    \n                \n            \n            \n                \ngetParentObjectName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSourceIconCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetSourceIconCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { MappedField } from '../../models/mapping.model';\n\n@Component({\n  selector: 'mapping-list-field',\n  templateUrl: './mapping-list-field.component.html',\n})\n\nexport class MappingListFieldComponent {\n  @Input() mappedField: MappedField;\n  @Input() isSource: boolean;\n  @Input() isActive: boolean;\n  @Input() cfg: ConfigModel;\n\n  getSourceIconCSSClass(): string {\n    return this.isSource ? 'fa fa-hdd-o' : 'fa fa-download';\n  }\n\n  getFieldPath(): string {\n    if (this.mappedField == null || this.mappedField.field == null) {\n      return '[None]';\n    }\n    return this.mappedField.field.getFieldLabel(ConfigModel.getConfig().showTypes, true);\n  }\n\n  displayParentObject(): boolean {\n    if (this.mappedField == null || this.mappedField.field == null\n      || this.mappedField.field.docDef == null) {\n      return false;\n    }\n    return true;\n  }\n\n  getParentObjectName() {\n    if (this.mappedField == null || this.mappedField.field == null || this.mappedField.field.docDef == null) {\n      return '';\n    }\n    return this.mappedField.field.docDef.getName(ConfigModel.getConfig().showTypes);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ getParentObjectName() }}\n    \n    {{ getFieldPath() }}\n    \n  \n\n\n\n  \n    \n      \n        \n          {{ getFieldPath() }}\n           0\">\n        \n      \n    \n  \n\n  \n    \n      \n        \n        \n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ getParentObjectName() }}        {{ getFieldPath() }}                                    {{ getFieldPath() }}           0\">                                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingListFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingSelectionComponent.html":{"url":"components/MappingSelectionComponent.html","title":"component - MappingSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-selection\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                mappings\n                            \n                            \n                                modalWindow\n                            \n                            \n                                sectionComponents\n                            \n                            \n                                selectedField\n                            \n                            \n                                    Private\n                                selectedMappingComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMapping\n                            \n                            \n                                getFormattedOutputPath\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                getSelectedMapping\n                            \n                            \n                                    Private\n                                getSelectedMappingComponent\n                            \n                            \n                                isDataValid\n                            \n                            \n                                selectionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addMapping\n                        \n                        \n                    \n                \n            \n            \n                \naddMapping()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFormattedOutputPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetFormattedOutputPath(path: string, nameOnly: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nameOnly\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSelectedMapping\n                        \n                        \n                    \n                \n            \n            \n                \ngetSelectedMapping()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MappingModel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getSelectedMappingComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSelectedMappingComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MappingSelectionSectionComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged(c: MappingSelectionSectionComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                MappingSelectionSectionComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mappings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalWindow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalWindowComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sectionComponents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('mappingSection')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedMappingComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingSelectionSectionComponent\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChildren, QueryList, ElementRef } from '@angular/core';\n\nimport { MappingModel } from '../../models/mapping.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\n\nimport { ModalWindowComponent, ModalWindowValidator } from '../modal/modal-window.component';\nimport { MappingSelectionSectionComponent } from './mapping-selection-section.component';\n\n@Component({\n  selector: 'mapping-selection',\n  templateUrl: './mapping-selection.component.html',\n})\n\nexport class MappingSelectionComponent implements ModalWindowValidator {\n  modalWindow: ModalWindowComponent;\n  mappings: MappingModel[];\n  selectedField: Field = null;\n  cfg: ConfigModel;\n\n  @ViewChildren('mappingSection') sectionComponents: QueryList;\n\n  private selectedMappingComponent: MappingSelectionSectionComponent = null;\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n  selectionChanged(c: MappingSelectionSectionComponent) {\n    const self: MappingSelectionComponent = c.parentComponent as MappingSelectionComponent;\n    const oldSelectedItem: MappingSelectionSectionComponent = self.getSelectedMappingComponent();\n    oldSelectedItem.selected = false;\n    c.selected = true;\n    self.selectedMappingComponent = c;\n  }\n\n  getFormattedOutputPath(path: string, nameOnly: boolean) {\n    path = path.replace('.', '/');\n    const index: number = path.lastIndexOf('/');\n    const fieldName: string = (index === -1) ? path : path.substr(path.lastIndexOf('/') + 1);\n    path = (index === -1) ? '' : path.substr(0, path.lastIndexOf('/') + 1);\n    return nameOnly ? fieldName : path;\n  }\n\n  addMapping() {\n    this.cfg.mappingService.addNewMapping(this.selectedField, false);\n    this.modalWindow.close();\n  }\n\n  getSelectedMapping(): MappingModel {\n    return this.getSelectedMappingComponent().mapping;\n  }\n\n  private getSelectedMappingComponent(): MappingSelectionSectionComponent {\n    if (this.selectedMappingComponent == null) {\n      for (const c of this.sectionComponents.toArray()) {\n        if (c.selected) {\n          this.selectedMappingComponent = c;\n          break;\n        }\n      }\n    }\n    return this.selectedMappingComponent;\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ selectedField.isSource() ? 'Source' : 'Target' }}\n    \n      {{ getFormattedOutputPath(selectedField.path, false) }}\n      {{ getFormattedOutputPath(selectedField.path, true) }}\n      \n    \n    \n    \n      Add New Mapping\n    \n  \n  \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ selectedField.isSource() ? \\'Source\\' : \\'Target\\' }}          {{ getFormattedOutputPath(selectedField.path, false) }}      {{ getFormattedOutputPath(selectedField.path, true) }}                        Add New Mapping                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingSelectionSectionComponent.html":{"url":"components/MappingSelectionSectionComponent.html","title":"component - MappingSelectionSectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingSelectionSectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-selection-section\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-selection-section.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClass\n                            \n                            \n                                getFormattedOutputPath\n                            \n                            \n                                getSourceTargetLabelText\n                            \n                            \n                                handleMouseClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOddRow\n                            \n                            \n                                mapping\n                            \n                            \n                                outputNumber\n                            \n                            \n                                parentComponent\n                            \n                            \n                                selected\n                            \n                            \n                                selectedCallback\n                            \n                            \n                                selectedFieldIsSource\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isOddRow\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        outputNumber\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentComponent\n                    \n                \n                \n                    \n                        Type :         Component\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedCallback\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedFieldIsSource\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFormattedOutputPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetFormattedOutputPath(path: string, nameOnly: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nameOnly\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSourceTargetLabelText\n                        \n                        \n                    \n                \n            \n            \n                \ngetSourceTargetLabelText(isSource: boolean, mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseClick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { MappingModel } from '../../models/mapping.model';\n\n@Component({\n  selector: 'mapping-selection-section',\n  templateUrl: './mapping-selection-section.component.html',\n})\n\nexport class MappingSelectionSectionComponent {\n  @Input() outputNumber: number;\n  @Input() mapping: MappingModel;\n  @Input() selectedCallback: Function;\n  @Input() selected = false;\n  @Input() selectedFieldIsSource = false;\n  @Input() parentComponent: Component;\n  @Input() isOddRow = false;\n\n  getClass(): string {\n    let cssClass = 'MappingSelectionSection';\n    if (this.selected) {\n      cssClass += ' SelectedMappingSelectionSection';\n    }\n    if (this.isOddRow) {\n      cssClass += ' odd';\n    }\n    return cssClass;\n  }\n\n  getSourceTargetLabelText(isSource: boolean, mapping: MappingModel): string {\n    if (isSource) {\n      return (mapping.sourceFields.length > 0) ? 'Sources' : 'Source';\n    }\n    return (mapping.targetFields.length > 0) ? 'Targets' : 'Target';\n  }\n\n  getFormattedOutputPath(path: string, nameOnly: boolean) {\n    if (path == null) {\n      return '';\n    }\n    path = path.replace('.', '/');\n    const index: number = path.lastIndexOf('/');\n    const fieldName: string = (index === -1) ? path : path.substr(path.lastIndexOf('/') + 1);\n    path = (index === -1) ? '' : path.substr(0, path.lastIndexOf('/') + 1);\n    return nameOnly ? fieldName : path;\n  }\n\n  handleMouseClick(event: MouseEvent) {\n    this.selectedCallback(this);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ outputNumber + 1 }}\n  \n  \n    \n      \n        {{ getSourceTargetLabelText(true, mapping) }}\n        \n          \n            \n              \n              {{ getFormattedOutputPath(sourceField.field.path, false) }}\n            \n            {{ getFormattedOutputPath(sourceField.field.path, true) }}\n            \n          \n        \n      \n      \n        {{ getSourceTargetLabelText(false, mapping) }}\n        \n          \n            \n              \n              {{ getFormattedOutputPath(targetField.field.path, false) }}\n            \n            {{ getFormattedOutputPath(targetField.field.path, true) }}\n            \n          \n        \n      \n    \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ outputNumber + 1 }}                      {{ getSourceTargetLabelText(true, mapping) }}                                                          {{ getFormattedOutputPath(sourceField.field.path, false) }}                        {{ getFormattedOutputPath(sourceField.field.path, true) }}                                                  {{ getSourceTargetLabelText(false, mapping) }}                                                          {{ getFormattedOutputPath(targetField.field.path, false) }}                        {{ getFormattedOutputPath(targetField.field.path, true) }}                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingSelectionSectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MappingUtil.html":{"url":"classes/MappingUtil.html","title":"class - MappingUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MappingUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts\n        \n\n            \n                Description\n            \n            \n                Static routines for handling mappings.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                getDocById\n                            \n                            \n                                    Private\n                                    Static\n                                isMappingStale\n                            \n                            \n                                    Static\n                                removeStaleMappings\n                            \n                            \n                                    Static\n                                updateDocumentNamespacesFromMappings\n                            \n                            \n                                    Static\n                                updateMappedFieldsFromDocuments\n                            \n                            \n                                    Static\n                                updateMappingsFromDocuments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getDocById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDocById(documentId: string, docs: DocumentDefinition[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts:231\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    documentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docs\n                                    \n                                                DocumentDefinition[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DocumentDefinition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            isMappingStale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMappingStale(mapping: MappingModel, sourceFieldPaths: string[], targetSourcePaths: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sourceFieldPaths\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetSourcePaths\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            removeStaleMappings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeStaleMappings(cfg: ConfigModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts:167\n                \n            \n\n\n            \n                \n                    Check all mappings in the current context and remove if it refers to un-existing fields.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ConfigModel\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateDocumentNamespacesFromMappings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDocumentNamespacesFromMappings(cfg: ConfigModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateMappedFieldsFromDocuments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMappedFieldsFromDocuments(mapping: MappingModel, cfg: ConfigModel, docMap: any, isSource: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docMap\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateMappingsFromDocuments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMappingsFromDocuments(cfg: ConfigModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PaddingField, DocumentDefinition } from '../models/document-definition.model';\nimport { MappingModel, MappedField } from '../models/mapping.model';\nimport { ConfigModel } from '../models/config.model';\nimport { Field } from '../models/field.model';\nimport { Multiplicity } from '../models/field-action.model';\nimport { ErrorType, ErrorScope, ErrorInfo, ErrorLevel } from '../models/error.model';\n\n/**\n * Static routines for handling mappings.\n */\nexport class MappingUtil {\n\n  static updateMappingsFromDocuments(cfg: ConfigModel): void {\n    const sourceDocMap = cfg.getDocUriMap(cfg, true);\n    const targetDocMap = cfg.getDocUriMap(cfg, false);\n\n    for (const mapping of cfg.mappings.mappings) {\n      MappingUtil.updateMappedFieldsFromDocuments(mapping, cfg, sourceDocMap, true);\n      MappingUtil.updateMappedFieldsFromDocuments(mapping, cfg, targetDocMap, false);\n    }\n    for (const doc of cfg.getAllDocs()) {\n      if (doc.id == null) {\n        doc.id = 'DOC.' + doc.name + '.' + Math.floor((Math.random() * 1000000) + 1).toString();\n      }\n    }\n  }\n\n  static updateMappedFieldsFromDocuments(mapping: MappingModel, cfg: ConfigModel, docMap: any, isSource: boolean): void {\n    let mappedFields: MappedField[] = mapping.getMappedFields(isSource);\n    let mappedFieldIndex = -1;\n\n    for (const mappedField of mappedFields) {\n      let doc: DocumentDefinition = null;\n      mappedFieldIndex += 1;\n\n      if (mappedField.parsedData.fieldIsProperty) {\n        doc = cfg.propertyDoc;\n      } else if (mappedField.parsedData.fieldIsConstant) {\n        doc = cfg.constantDoc;\n      } else {\n        if (docMap === null) {\n          docMap = cfg.getDocUriMap(cfg, isSource);\n        }\n        doc = docMap[mappedField.parsedData.parsedDocURI] as DocumentDefinition;\n        if (doc == null) {\n          if (mappedField.parsedData.parsedName != null) {\n            cfg.errorService.addError(new ErrorInfo({\n              message: `Could not find document for mapped field \\'${mappedField.parsedData.parsedName}\\' \\\nat URI ${mappedField.parsedData.parsedDocURI}`,\n              level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL}));\n          }\n          continue;\n        }\n\n        if (mappedField.parsedData.parsedDocID == null) {\n          cfg.errorService.addError(new ErrorInfo({message: `Could not find doc ID for mapped field ${mappedField.parsedData.parsedName}`,\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL}));\n          continue;\n        }\n        doc.id = mappedField.parsedData.parsedDocID;\n      }\n      mappedField.field = null;\n      if (!mappedField.parsedData.userCreated) {\n        mappedField.field = doc.getField(mappedField.parsedData.parsedPath);\n      }\n      if (mappedField.field == null) {\n        if (mappedField.parsedData.fieldIsConstant || mappedField.parsedData.fieldIsProperty) {\n          const constantField: Field = new Field();\n          constantField.value = mappedField.parsedData.parsedValue;\n          constantField.type = mappedField.parsedData.parsedValueType;\n          constantField.displayName = constantField.value;\n          constantField.name = constantField.value;\n          constantField.path = constantField.value;\n          constantField.userCreated = true;\n          mappedField.field = constantField;\n          doc.addField(constantField);\n        } else if (mappedField.parsedData.userCreated || mappedField.parsedData.parsedPath) {\n          const path: string = mappedField.parsedData.parsedPath;\n\n          mappedField.field = new Field();\n          mappedField.field.serviceObject.jsonType = 'io.atlasmap.xml.v2.XmlField';\n          mappedField.field.path = path;\n          mappedField.field.type = mappedField.parsedData.parsedValueType;\n          mappedField.field.userCreated = true;\n\n          const lastSeparator: number = path.lastIndexOf('/');\n\n          const parentPath: string = (lastSeparator > 0) ? path.substring(0, lastSeparator) : null;\n          let fieldName: string = (lastSeparator === -1) ? path : path.substring(lastSeparator + 1);\n          let namespaceAlias: string = null;\n          if (fieldName.indexOf(':') !== -1) {\n            namespaceAlias = fieldName.split(':')[0];\n            fieldName = fieldName.split(':')[1];\n          }\n\n          mappedField.field.name = fieldName;\n          mappedField.field.displayName = fieldName;\n          mappedField.field.isAttribute = (fieldName.indexOf('@') !== -1);\n          mappedField.field.namespaceAlias = namespaceAlias;\n\n          if (parentPath != null) {\n            mappedField.field.parentField = doc.getField(parentPath);\n          }\n\n          doc.addField(mappedField.field);\n        } else {\n          cfg.errorService.addError(new ErrorInfo({\n            message: `Could not find field from document for mapped field \\'${mappedField.parsedData.parsedName}\\'`,\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL,\n            object: { 'mappedField': mappedField, 'doc': doc }}));\n          return;\n        }\n      }\n\n      // Process field actions.\n      mappedField.actions = [];\n      if (mappedField.parsedData.parsedActions.length > 0) {\n\n        for (const action of mappedField.parsedData.parsedActions) {\n          let actionDefinition = null;\n          if (action.name === 'CustomAction') {\n            actionDefinition = cfg.fieldActionService.getActionDefinitionForName(action.argumentValues[0].value, Multiplicity.ONE_TO_ONE);\n          } else {\n            actionDefinition = cfg.fieldActionService.getActionDefinitionForName(action.name, Multiplicity.ONE_TO_ONE);\n          }\n          if (actionDefinition == null) {\n            cfg.errorService.addError(new ErrorInfo({message: `Could not find field action definition for action \\'${action.name}\\'`,\n              level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL}));\n            continue;\n          }\n          actionDefinition.populateFieldAction(action);\n          mappedField.actions.push(action);\n        }\n      }\n\n      const zeroBasedIndex = +mappedField.parsedData.parsedIndex;\n      mappedFields = mapping.getMappedFields(isSource);\n      if (zeroBasedIndex \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalErrorDetailComponent.html":{"url":"components/ModalErrorDetailComponent.html","title":"component - ModalErrorDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalErrorDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/modal/modal-error-detail.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal-error-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./modal-error-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getErrors\n                            \n                            \n                                getInfos\n                            \n                            \n                                getWarnings\n                            \n                            \n                                handleAlertClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errors\n                            \n                            \n                                errorService\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errors\n                    \n                \n                \n                    \n                        Type :         ErrorInfo[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-detail.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorService\n                    \n                \n                \n                    \n                        Type :         ErrorHandlerService\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-detail.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-detail.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInfos\n                        \n                        \n                    \n                \n            \n            \n                \ngetInfos()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-detail.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWarnings\n                        \n                        \n                    \n                \n            \n            \n                \ngetWarnings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-detail.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleAlertClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleAlertClick(error: ErrorInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-detail.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                ErrorInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ErrorInfo, ErrorLevel } from '../../models/error.model';\nimport { ErrorHandlerService } from '../../services/error-handler.service';\n\n@Component({\n  selector: 'modal-error-detail',\n  templateUrl: './modal-error-detail.component.html',\n})\nexport class ModalErrorDetailComponent {\n  @Input() errors: ErrorInfo[];\n  @Input() errorService: ErrorHandlerService;\n\n  getErrors(): ErrorInfo[] {\n    return this.errors.filter(e => e.level === ErrorLevel.ERROR);\n  }\n\n  getWarnings(): ErrorInfo[] {\n    return this.errors.filter(e => e.level === ErrorLevel.WARN);\n  }\n\n  getInfos(): ErrorInfo[] {\n    return this.errors.filter(e => e.level === ErrorLevel.INFO);\n  }\n\n  handleAlertClick(error: ErrorInfo) {\n    if (error && error.identifier) {\n      this.errorService.removeError(error.identifier, error.scope);\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n    \n      \n    \n    {{ i.message }}\n  \n\n  \n    \n      \n    \n    \n    {{ e.message }}\n  \n\n  \n    \n      \n    \n    \n    {{ w.message }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ i.message }}                          {{ e.message }}                          {{ w.message }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalErrorDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalErrorWindowComponent.html":{"url":"components/ModalErrorWindowComponent.html","title":"component - ModalErrorWindowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalErrorWindowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal-error-window\n            \n\n\n\n\n            \n                templateUrl\n                ./modal-error-window.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                cfg\n                            \n                            \n                                confirmButtonDisabled\n                            \n                            \n                                    Public\n                                detector\n                            \n                            \n                                errors\n                            \n                            \n                                fade\n                            \n                            \n                                headerText\n                            \n                            \n                                message\n                            \n                            \n                                myTarget\n                            \n                            \n                                nestedComponent\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                dismissAll\n                            \n                            \n                                getErrors\n                            \n                            \n                                getWarnings\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reset\n                            \n                            \n                                setErrors\n                            \n                            \n                                show\n                            \n                            \n                                somethingToShow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(detector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        detector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dismissAll\n                        \n                        \n                    \n                \n            \n            \n                \ndismissAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWarnings\n                        \n                        \n                    \n                \n            \n            \n                \ngetWarnings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setErrors\n                        \n                        \n                    \n                \n            \n            \n                \nsetErrors(errors: ErrorInfo[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errors\n                                    \n                                                ErrorInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            somethingToShow\n                        \n                        \n                    \n                \n            \n            \n                \nsomethingToShow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Dismiss All'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmButtonDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            detector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorInfo[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fade\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headerText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Errors and Warnings - Current Active Mapping'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('dyn_target', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nestedComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalErrorWindowValidator\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component, ViewChildren, QueryList, OnInit,\n  ViewContainerRef, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../../models/config.model';\nimport { ErrorInfo, ErrorLevel } from '../../models/error.model';\n\nexport interface ModalErrorWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'modal-error-window',\n  templateUrl: './modal-error-window.component.html',\n})\n\nexport class ModalErrorWindowComponent implements OnInit {\n  cfg: ConfigModel = null;\n  message: string = null;\n  nestedComponent: ModalErrorWindowValidator;\n  confirmButtonDisabled = false;\n  headerText = 'Errors and Warnings - Current Active Mapping';\n  buttonText = 'Dismiss All';\n  visible = false;\n  fade = false;\n  errors: ErrorInfo[];\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  constructor(public detector: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.cfg = ConfigModel.getConfig();\n  }\n\n  setErrors(errors: ErrorInfo[]) {\n    this.errors = errors;\n    if (!this.errors || this.errors.length === 0) {\n      this.close();\n    }\n  }\n\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.visible = false;\n    }, 300);\n  }\n\n  somethingToShow(): boolean {\n    return (this.errors && this.errors.length > 0);\n  }\n\n  show(): void {\n    this.message = '';\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.message = 'Hello!';\n  }\n\n  getErrors(): ErrorInfo[] {\n    return this.errors.filter(e => e.level === ErrorLevel.ERROR);\n  }\n\n  getWarnings(): ErrorInfo[] {\n    return this.errors.filter(e => e.level === ErrorLevel.WARN);\n  }\n\n  dismissAll(): void {\n    this.cfg.errorService.clearAllErrors();\n    this.close();\n  }\n}\n\n    \n\n    \n        \n   -->\n  \n    \n      \n        \n          \n            \n              \n            \n          \n          {{ headerText }}\n          \n             {{ getWarnings().length }}\n             | \n             {{ getErrors().length }}\n          \n        \n        \n        \n        \n          \n            \n          \n          \n        \n        \n          \n            {{ buttonText }} \n            Cancel -->\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->                                                                                        {{ headerText }}                       {{ getWarnings().length }}             |              {{ getErrors().length }}                                                                                                                          {{ buttonText }}             Cancel -->                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalErrorWindowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalErrorWindowValidator.html":{"url":"interfaces/ModalErrorWindowValidator.html","title":"interface - ModalErrorWindowValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModalErrorWindowValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getInitialFocusElement\n                                \n                                \n                                    isDataValid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Component, ViewChildren, QueryList, OnInit,\n  ViewContainerRef, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../../models/config.model';\nimport { ErrorInfo, ErrorLevel } from '../../models/error.model';\n\nexport interface ModalErrorWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'modal-error-window',\n  templateUrl: './modal-error-window.component.html',\n})\n\nexport class ModalErrorWindowComponent implements OnInit {\n  cfg: ConfigModel = null;\n  message: string = null;\n  nestedComponent: ModalErrorWindowValidator;\n  confirmButtonDisabled = false;\n  headerText = 'Errors and Warnings - Current Active Mapping';\n  buttonText = 'Dismiss All';\n  visible = false;\n  fade = false;\n  errors: ErrorInfo[];\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  constructor(public detector: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.cfg = ConfigModel.getConfig();\n  }\n\n  setErrors(errors: ErrorInfo[]) {\n    this.errors = errors;\n    if (!this.errors || this.errors.length === 0) {\n      this.close();\n    }\n  }\n\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.visible = false;\n    }, 300);\n  }\n\n  somethingToShow(): boolean {\n    return (this.errors && this.errors.length > 0);\n  }\n\n  show(): void {\n    this.message = '';\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.message = 'Hello!';\n  }\n\n  getErrors(): ErrorInfo[] {\n    return this.errors.filter(e => e.level === ErrorLevel.ERROR);\n  }\n\n  getWarnings(): ErrorInfo[] {\n    return this.errors.filter(e => e.level === ErrorLevel.WARN);\n  }\n\n  dismissAll(): void {\n    this.cfg.errorService.clearAllErrors();\n    this.close();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalWindowComponent.html":{"url":"components/ModalWindowComponent.html","title":"component - ModalWindowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalWindowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal-window\n            \n\n\n\n\n            \n                templateUrl\n                ./modal-window.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                componentLoaded\n                            \n                            \n                                confirmButtonDisabled\n                            \n                            \n                                confirmButtonText\n                            \n                            \n                                    Public\n                                detector\n                            \n                            \n                                errors\n                            \n                            \n                                fade\n                            \n                            \n                                message\n                            \n                            \n                                    Private\n                                modalErrorSubject\n                            \n                            \n                                    Private\n                                modalErrorSubscription\n                            \n                            \n                                myTarget\n                            \n                            \n                                    Private\n                                myTargetChangesSubscription\n                            \n                            \n                                nestedComponent\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buttonClicked\n                            \n                            \n                                close\n                            \n                            \n                                closeClicked\n                            \n                            \n                                loadComponent\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                reset\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelButtonHandler\n                            \n                            \n                                cfg\n                            \n                            \n                                headerText\n                            \n                            \n                                modalErrorWindow\n                            \n                            \n                                nestedComponentInitializedCallback\n                            \n                            \n                                nestedComponentType\n                            \n                            \n                                okButtonHandler\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, detector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:77\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cancelButtonHandler\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        headerText\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalErrorWindow\n                    \n                \n                \n                    \n                        Type :         ModalErrorWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nestedComponentInitializedCallback\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nestedComponentType\n                    \n                \n                \n                    \n                        Type :     Type\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        okButtonHandler\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:59\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buttonClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buttonClicked(okClicked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    okClicked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeClicked\n                        \n                        \n                    \n                \n            \n            \n                \ncloseClicked(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadComponent\n                        \n                        \n                    \n                \n            \n            \n                \nloadComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            componentLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmButtonDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmButtonText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'OK'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            detector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorInfo[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fade\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            modalErrorSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            modalErrorSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('dyn_target', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            myTargetChangesSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nestedComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalWindowValidator\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:68\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component, Input, ViewChildren, QueryList, OnDestroy,\n  ViewContainerRef, Type, ComponentFactoryResolver, AfterViewInit, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../../models/config.model';\nimport { Subscription, Subject } from 'rxjs';\nimport { ModalErrorWindowComponent } from './modal-error-window.component';\nimport { ErrorInfo } from '../../models/error.model';\n\n// source: http://www.w3schools.com/howto/howto_css_modals.asp\n\nexport interface ModalWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'empty-modal-body',\n  template: '',\n})\n\nexport class EmptyModalBodyComponent implements ModalWindowValidator {\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n}\n\n@Component({\n  selector: 'modal-window',\n  templateUrl: './modal-window.component.html',\n})\n\nexport class ModalWindowComponent implements AfterViewInit, OnDestroy {\n  @Input() headerText = '';\n  @Input() nestedComponentType: Type;\n  @Input() nestedComponentInitializedCallback: Function;\n  @Input() okButtonHandler: Function;\n  @Input() cancelButtonHandler: Function;\n  @Input() cfg: ConfigModel;\n  @Input() modalErrorWindow: ModalErrorWindowComponent;\n\n  message: string = null;\n  nestedComponent: ModalWindowValidator;\n  confirmButtonDisabled = false;\n  confirmButtonText = 'OK';\n  visible = false;\n  fade = false;\n  errors: ErrorInfo[] = [];\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  private componentLoaded = false;\n  private myTargetChangesSubscription: Subscription;\n  private modalErrorSubject: Subject;\n  private modalErrorSubscription: Subscription;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, public detector: ChangeDetectorRef) { }\n\n  ngAfterViewInit() {\n    if (this.myTargetChangesSubscription) {\n      this.myTargetChangesSubscription.unsubscribe();\n    }\n\n    // from: http://stackoverflow.com/questions/40811809/add-component-dynamically-inside-an-ngif\n    this.myTargetChangesSubscription = this.myTarget.changes.subscribe(changes => {\n      setTimeout(() => {\n        if (!this.componentLoaded && this.visible && this.myTarget && (this.myTarget.toArray().length)) {\n          this.loadComponent();\n        }\n        setTimeout(() => {\n          this.detector.detectChanges();\n        }, 10);\n      }, 10);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.myTargetChangesSubscription) {\n      this.myTargetChangesSubscription.unsubscribe();\n    }\n    if (this.modalErrorSubscription) {\n      this.modalErrorSubscription.unsubscribe();\n    }\n    if (this.modalErrorSubject) {\n      this.modalErrorSubject.complete();\n    }\n  }\n\n  loadComponent(): void {\n    const viewContainerRef: ViewContainerRef = this.myTarget.toArray()[0];\n    viewContainerRef.clear();\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.nestedComponentType);\n    this.nestedComponent = viewContainerRef.createComponent(componentFactory).instance as ModalWindowValidator;\n    if (this.nestedComponentInitializedCallback != null) {\n      this.nestedComponentInitializedCallback(this);\n    }\n    const initialFocusElement = this.nestedComponent.getInitialFocusElement();\n    if (initialFocusElement) {\n      initialFocusElement.nativeElement.focus();\n    }\n    if (this.modalErrorSubject && !this.modalErrorSubject.closed) {\n      this.modalErrorSubject.complete();\n    }\n    this.modalErrorSubject = this.cfg.errorService.createFormErrorChannel();\n    this.modalErrorSubscription = this.modalErrorSubject.subscribe((errors: ErrorInfo[]) => {\n      this.errors = errors;\n    });\n  }\n\n  closeClicked(event: MouseEvent): void { this.buttonClicked(false); }\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.modalErrorSubject.complete();\n      this.errors = [];\n      this.visible = false;\n    }, 300);\n  }\n  show(): void {\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.nestedComponentInitializedCallback = null;\n    this.confirmButtonDisabled = false;\n    this.confirmButtonText = 'OK';\n    this.message = '';\n    this.headerText = '';\n    this.componentLoaded = false;\n    this.nestedComponentType = EmptyModalBodyComponent;\n    this.okButtonHandler = null;\n    this.cancelButtonHandler = null;\n  }\n\n  private buttonClicked(okClicked: boolean): void {\n    if (okClicked) {\n      if (this.nestedComponent != null) {\n        this.cfg.errorService.clearFormErrors();\n        if (!(this.nestedComponent.isDataValid())) {\n          return;\n        }\n      }\n      if (this.okButtonHandler) {\n        this.okButtonHandler(this);\n      }\n    } else { // cancel clicked\n      if (this.cancelButtonHandler) {\n        this.cancelButtonHandler(this);\n      }\n    }\n    this.close();\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          \n            \n              \n            \n          \n          {{ headerText }}\n        \n        \n          \n        \n        \n          {{ message }}\n          \n        \n        \n          \n            {{ confirmButtonText }} \n            Cancel\n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                          {{ headerText }}                                                    {{ message }}                                                {{ confirmButtonText }}             Cancel                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalWindowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalWindowValidator.html":{"url":"interfaces/ModalWindowValidator.html","title":"interface - ModalWindowValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModalWindowValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getInitialFocusElement\n                                \n                                \n                                    isDataValid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Component, Input, ViewChildren, QueryList, OnDestroy,\n  ViewContainerRef, Type, ComponentFactoryResolver, AfterViewInit, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../../models/config.model';\nimport { Subscription, Subject } from 'rxjs';\nimport { ModalErrorWindowComponent } from './modal-error-window.component';\nimport { ErrorInfo } from '../../models/error.model';\n\n// source: http://www.w3schools.com/howto/howto_css_modals.asp\n\nexport interface ModalWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'empty-modal-body',\n  template: '',\n})\n\nexport class EmptyModalBodyComponent implements ModalWindowValidator {\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n}\n\n@Component({\n  selector: 'modal-window',\n  templateUrl: './modal-window.component.html',\n})\n\nexport class ModalWindowComponent implements AfterViewInit, OnDestroy {\n  @Input() headerText = '';\n  @Input() nestedComponentType: Type;\n  @Input() nestedComponentInitializedCallback: Function;\n  @Input() okButtonHandler: Function;\n  @Input() cancelButtonHandler: Function;\n  @Input() cfg: ConfigModel;\n  @Input() modalErrorWindow: ModalErrorWindowComponent;\n\n  message: string = null;\n  nestedComponent: ModalWindowValidator;\n  confirmButtonDisabled = false;\n  confirmButtonText = 'OK';\n  visible = false;\n  fade = false;\n  errors: ErrorInfo[] = [];\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  private componentLoaded = false;\n  private myTargetChangesSubscription: Subscription;\n  private modalErrorSubject: Subject;\n  private modalErrorSubscription: Subscription;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, public detector: ChangeDetectorRef) { }\n\n  ngAfterViewInit() {\n    if (this.myTargetChangesSubscription) {\n      this.myTargetChangesSubscription.unsubscribe();\n    }\n\n    // from: http://stackoverflow.com/questions/40811809/add-component-dynamically-inside-an-ngif\n    this.myTargetChangesSubscription = this.myTarget.changes.subscribe(changes => {\n      setTimeout(() => {\n        if (!this.componentLoaded && this.visible && this.myTarget && (this.myTarget.toArray().length)) {\n          this.loadComponent();\n        }\n        setTimeout(() => {\n          this.detector.detectChanges();\n        }, 10);\n      }, 10);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.myTargetChangesSubscription) {\n      this.myTargetChangesSubscription.unsubscribe();\n    }\n    if (this.modalErrorSubscription) {\n      this.modalErrorSubscription.unsubscribe();\n    }\n    if (this.modalErrorSubject) {\n      this.modalErrorSubject.complete();\n    }\n  }\n\n  loadComponent(): void {\n    const viewContainerRef: ViewContainerRef = this.myTarget.toArray()[0];\n    viewContainerRef.clear();\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.nestedComponentType);\n    this.nestedComponent = viewContainerRef.createComponent(componentFactory).instance as ModalWindowValidator;\n    if (this.nestedComponentInitializedCallback != null) {\n      this.nestedComponentInitializedCallback(this);\n    }\n    const initialFocusElement = this.nestedComponent.getInitialFocusElement();\n    if (initialFocusElement) {\n      initialFocusElement.nativeElement.focus();\n    }\n    if (this.modalErrorSubject && !this.modalErrorSubject.closed) {\n      this.modalErrorSubject.complete();\n    }\n    this.modalErrorSubject = this.cfg.errorService.createFormErrorChannel();\n    this.modalErrorSubscription = this.modalErrorSubject.subscribe((errors: ErrorInfo[]) => {\n      this.errors = errors;\n    });\n  }\n\n  closeClicked(event: MouseEvent): void { this.buttonClicked(false); }\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.modalErrorSubject.complete();\n      this.errors = [];\n      this.visible = false;\n    }, 300);\n  }\n  show(): void {\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.nestedComponentInitializedCallback = null;\n    this.confirmButtonDisabled = false;\n    this.confirmButtonText = 'OK';\n    this.message = '';\n    this.headerText = '';\n    this.componentLoaded = false;\n    this.nestedComponentType = EmptyModalBodyComponent;\n    this.okButtonHandler = null;\n    this.cancelButtonHandler = null;\n  }\n\n  private buttonClicked(okClicked: boolean): void {\n    if (okClicked) {\n      if (this.nestedComponent != null) {\n        this.cfg.errorService.clearFormErrors();\n        if (!(this.nestedComponent.isDataValid())) {\n          return;\n        }\n      }\n      if (this.okButtonHandler) {\n        this.okButtonHandler(this);\n      }\n    } else { // cancel clicked\n      if (this.cancelButtonHandler) {\n        this.cancelButtonHandler(this);\n      }\n    }\n    this.close();\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NamespaceEditComponent.html":{"url":"components/NamespaceEditComponent.html","title":"component - NamespaceEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NamespaceEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                namespace-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./namespace-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                namespace\n                            \n                            \n                                targetEnabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                targetToggled\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(namespace: NamespaceModel, namespaces: NamespaceModel[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    namespaces\n                                    \n                                                NamespaceModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            targetToggled\n                        \n                        \n                    \n                \n            \n            \n                \ntargetToggled()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('namespace')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel\n\n                        \n                    \n                    \n                        \n                            Default value : new NamespaceModel()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetEnabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { NamespaceModel } from '../../models/document-definition.model';\nimport { ModalWindowValidator } from '../modal/modal-window.component';\n\n@Component({\n  selector: 'namespace-edit',\n  templateUrl: './namespace-edit.component.html',\n})\n\nexport class NamespaceEditComponent implements ModalWindowValidator {\n  namespace: NamespaceModel = new NamespaceModel();\n  targetEnabled = true;\n  @ViewChild('namespace') private focusEl: ElementRef;\n\n  initialize(namespace: NamespaceModel, namespaces: NamespaceModel[]): void {\n    this.namespace = (namespace == null) ? new NamespaceModel() : namespace.copy();\n    if (!namespace.isTarget) {\n      for (const ns of namespaces) {\n        if (ns.isTarget) {\n          this.targetEnabled = false;\n          break;\n        }\n      }\n    }\n  }\n\n  targetToggled(): void {\n    this.namespace.isTarget = !this.namespace.isTarget;\n    this.namespace.alias = this.namespace.isTarget ? 'tns' : '';\n  }\n\n  isDataValid(): boolean {\n    const configModel: ConfigModel = ConfigModel.getConfig();\n    let dataIsValid: boolean = configModel.errorService.isRequiredFieldValid(this.namespace.alias, 'Alias');\n    dataIsValid = configModel.errorService.isRequiredFieldValid(this.namespace.uri, 'URI') && dataIsValid;\n    return dataIsValid;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n}\n\n    \n\n    \n        \n  \n    Alias\n    \n  \n  \n    URI\n    \n  \n  \n    Location URI\n    \n  \n  \n    Type\n    \n    Target Namespace\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Alias            URI            Location URI            Type        Target Namespace      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'NamespaceEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NamespaceListComponent.html":{"url":"components/NamespaceListComponent.html","title":"component - NamespaceListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NamespaceListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                namespace-list\n            \n\n\n\n\n            \n                templateUrl\n                ./namespace-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                searchFilter\n                            \n                            \n                                searchMode\n                            \n                            \n                                    Private\n                                searchResults\n                            \n                            \n                                    Private\n                                selectedNamespace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEditNamespace\n                            \n                            \n                                getItemsCSSClass\n                            \n                            \n                                getNamespaceCSSClass\n                            \n                            \n                                getNamespaces\n                            \n                            \n                                getRowsCSSClass\n                            \n                            \n                                getRowTitleCSSClass\n                            \n                            \n                                getSearchIconCSSClass\n                            \n                            \n                                namespaceMatchesSearch\n                            \n                            \n                                removeNamespace\n                            \n                            \n                                    Private\n                                search\n                            \n                            \n                                searchResultsVisible\n                            \n                            \n                                selectNamespace\n                            \n                            \n                                toggleSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addEditNamespace\n                        \n                        \n                    \n                \n            \n            \n                \naddEditNamespace(ns: NamespaceModel, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ns\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItemsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetItemsCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNamespaceCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetNamespaceCSSClass(namespace: NamespaceModel, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNamespaces\n                        \n                        \n                    \n                \n            \n            \n                \ngetNamespaces()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         NamespaceModel[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRowsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetRowsCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRowTitleCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetRowTitleCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSearchIconCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetSearchIconCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            namespaceMatchesSearch\n                        \n                        \n                    \n                \n            \n            \n                \nnamespaceMatchesSearch(ns: NamespaceModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ns\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeNamespace\n                        \n                        \n                    \n                \n            \n            \n                \nremoveNamespace(ns: NamespaceModel, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ns\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(searchFilter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchFilter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchResultsVisible\n                        \n                        \n                    \n                \n            \n            \n                \nsearchResultsVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNamespace\n                        \n                        \n                    \n                \n            \n            \n                \nselectNamespace(ns: NamespaceModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ns\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSearch\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { NamespaceModel } from '../../models/document-definition.model';\nimport { NamespaceEditComponent } from '../app/namespace-edit.component';\nimport { ModalWindowComponent } from '../modal/modal-window.component';\nimport { DataMapperUtil } from '../../common/data-mapper-util';\n\n@Component({\n  selector: 'namespace-list',\n  templateUrl: './namespace-list.component.html',\n})\n\nexport class NamespaceListComponent {\n  @Input() cfg: ConfigModel;\n  @Input() modalWindow: ModalWindowComponent;\n\n  searchMode = false;\n  private searchFilter = '';\n  private selectedNamespace: NamespaceModel = null;\n  private searchResults: NamespaceModel[] = [];\n\n  getNamespaceCSSClass(namespace: NamespaceModel, index: number): string {\n    let cssClass = 'item itemRow ';\n    cssClass += (index % 2 === 1) ? ' even' : '';\n    if (namespace === this.selectedNamespace) {\n      cssClass += ' active';\n    }\n    return cssClass;\n  }\n\n  searchResultsVisible(): boolean {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      return false;\n    }\n    return (this.searchResults.length === 0);\n  }\n\n  selectNamespace(ns: NamespaceModel): void {\n    this.selectedNamespace = (this.selectedNamespace === ns) ? null : ns;\n  }\n\n  getItemsCSSClass(): string {\n    return 'items namespaces' + (this.searchMode ? ' searchShown' : '');\n  }\n\n  getRowTitleCSSClass(): string {\n    return this.searchMode ? 'rowTitles searchShown' : 'rowTitles';\n  }\n\n  getRowsCSSClass(): string {\n    return this.searchMode ? 'rows searchShown' : 'rows';\n  }\n\n  getNamespaces(): NamespaceModel[] {\n    return this.searchMode ? this.searchResults : this.cfg.getFirstXmlDoc(false).namespaces;\n  }\n\n  addEditNamespace(ns: NamespaceModel, event: any): void {\n    event.stopPropagation();\n    const isEditMode = (ns != null);\n    if (!isEditMode) {\n      ns = new NamespaceModel();\n      ns.createdByUser = true;\n    }\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Save';\n    this.modalWindow.headerText = (ns == null) ? 'Add Namespace' : 'Edit Namespace';\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      const namespaceComponent: NamespaceEditComponent = mw.nestedComponent as NamespaceEditComponent;\n      namespaceComponent.initialize(ns, this.cfg.getFirstXmlDoc(false).namespaces);\n    };\n    this.modalWindow.nestedComponentType = NamespaceEditComponent;\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      const namespaceComponent: NamespaceEditComponent = mw.nestedComponent as NamespaceEditComponent;\n      const newNamespace: NamespaceModel = namespaceComponent.namespace;\n      if (isEditMode) {\n        ns.copyFrom(newNamespace);\n      } else {\n        this.cfg.getFirstXmlDoc(false).namespaces.push(newNamespace);\n      }\n      this.search(this.searchFilter);\n      this.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  toggleSearch(): void {\n    this.searchMode = !this.searchMode;\n    this.search(this.searchFilter);\n  }\n\n  getSearchIconCSSClass(): string {\n    const cssClass = 'fa fa-search searchBoxIcon link';\n    return this.searchMode ? (cssClass + ' selectedIcon') : cssClass;\n  }\n\n  namespaceMatchesSearch(ns: NamespaceModel): boolean {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      return true;\n    }\n    const filter: string = this.searchFilter.toLowerCase();\n    if (ns.isTarget && ('tns'.includes(filter) || 'target'.includes(filter))) {\n      return true;\n    }\n    if (ns.alias != null && ns.alias.toLowerCase().includes(filter)) {\n      return true;\n    }\n    if (ns.uri != null && ns.uri.toLowerCase().includes(filter)) {\n      return true;\n    }\n    if (ns.locationUri != null && ns.locationUri.toLowerCase().includes(filter)) {\n      return true;\n    }\n    return false;\n  }\n\n  removeNamespace(ns: NamespaceModel, event: any): void {\n    event.stopPropagation();\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Remove';\n    this.modalWindow.headerText = 'Remove Namespace?';\n    this.modalWindow.message = 'Are you sure you want to remove \\'' + ns.alias + '\\' ?';\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      DataMapperUtil.removeItemFromArray(ns, this.cfg.getFirstXmlDoc(false).namespaces);\n      this.selectedNamespace = null;\n      this.search(this.searchFilter);\n    };\n    this.modalWindow.show();\n  }\n\n  private search(searchFilter: string): void {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      this.searchResults = [].concat(this.cfg.getFirstXmlDoc(false).namespaces);\n      return;\n    }\n\n    this.searchFilter = searchFilter;\n    this.searchResults = [];\n    for (const ns of this.cfg.getFirstXmlDoc(false).namespaces) {\n      if (this.namespaceMatchesSearch(ns)) {\n        this.searchResults.push(ns);\n      } else if (this.selectedNamespace != null) {\n        this.selectNamespace = null;\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          Namespaces for {{ cfg.getFirstXmlDoc(false).name }}\n        \n        \n        \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          Alias\n          Uri\n          Location URI\n          \n        \n        \n      \n    \n    \n      \n        \n          {{ namespace.isTarget ? 'Target (tns)' : namespace.alias }}\n          {{ namespace.uri }}\n          {{ namespace.locationUri }}\n          \n            \n            \n          \n          \n        \n      \n      \n        No search results.\n        \n      \n    \n    {{ getNamespaces().length }} namespaces\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Namespaces for {{ cfg.getFirstXmlDoc(false).name }}                                                                                                            Alias          Uri          Location URI                                                                {{ namespace.isTarget ? \\'Target (tns)\\' : namespace.alias }}          {{ namespace.uri }}          {{ namespace.locationUri }}                                                                                  No search results.                      {{ getNamespaces().length }} namespaces      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'NamespaceListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NamespaceModel.html":{"url":"classes/NamespaceModel.html","title":"class - NamespaceModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NamespaceModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alias\n                            \n                            \n                                createdByUser\n                            \n                            \n                                isTarget\n                            \n                            \n                                locationUri\n                            \n                            \n                                    Private\n                                    Static\n                                unqualifiedNamespace\n                            \n                            \n                                uri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                copyFrom\n                            \n                            \n                                getPrettyLabel\n                            \n                            \n                                    Static\n                                getUnqualifiedNamespace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdByUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locationUri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            unqualifiedNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:27\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         NamespaceModel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copyFrom\n                        \n                        \n                    \n                \n            \n            \n                \ncopyFrom(that: NamespaceModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    that\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPrettyLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetPrettyLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getUnqualifiedNamespace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnqualifiedNamespace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         NamespaceModel\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Field } from './field.model';\nimport { DocumentType, InspectionType } from '../common/config.types';\nimport { MappingDefinition } from '../models/mapping-definition.model';\nimport { DataMapperUtil } from '../common/data-mapper-util';\nimport { DocumentInitializationModel } from '../models/config.model';\n\nexport class NamespaceModel {\n  private static unqualifiedNamespace: NamespaceModel = null;\n\n  alias: string = null;\n  uri: string = null;\n  locationUri: string = null;\n  createdByUser = false;\n  isTarget = false;\n\n  static getUnqualifiedNamespace(): NamespaceModel {\n    if (NamespaceModel.unqualifiedNamespace == null) {\n      const ns: NamespaceModel = new NamespaceModel();\n      ns.alias = 'Unqualified';\n      NamespaceModel.unqualifiedNamespace = ns;\n    }\n    return NamespaceModel.unqualifiedNamespace;\n  }\n\n  getPrettyLabel(): string {\n    if (this === NamespaceModel.getUnqualifiedNamespace()) {\n      return this.alias;\n    }\n    return (this.isTarget ? 'Target' : this.alias)\n      + ' [' + (this.uri == null ? 'NO URI' : this.uri) + ']';\n  }\n\n  copy(): NamespaceModel {\n    const copy: NamespaceModel = new NamespaceModel();\n    Object.assign(copy, this);\n    return copy;\n  }\n\n  copyFrom(that: NamespaceModel): void {\n    Object.assign(this, that);\n  }\n}\n\nexport class PaddingField extends Field {\n  constructor(private _isSource: boolean) {\n    super();\n    this.name = '';\n    this.classIdentifier = '';\n    this.type = '';\n    this.displayName = '';\n    this.path = '';\n  }\n\n  isSource(): boolean {\n    return this._isSource;\n  }\n\n}\n\nexport class DocumentDefinition {\n  private static padField: Field = null;\n\n  LEFT_BRACKET = '\\x5b';\n  RIGHT_BRACKET = '\\x5d';\n\n  initModel: DocumentInitializationModel;\n  id: string;\n  _type: DocumentType;\n  name: string;\n  description: string;\n  uri: string;\n  inspectionType: InspectionType;\n  inspectionSource: string;\n  inspectionResult: string;\n  isSource: boolean;\n  isPropertyOrConstant: boolean;\n  selectedRoot: string;\n\n  classPath: string;\n  initialized = false;\n  errorOccurred = false;\n  pathSeparator = '/';\n  fields: Field[] = [];\n  allFields: Field[] = [];\n  terminalFields: Field[] = [];\n  complexFieldsByClassIdentifier: { [key: string]: Field; } = {};\n  enumFieldsByClassIdentifier: { [key: string]: Field; } = {};\n  fieldsByPath: { [key: string]: Field; } = {};\n  fieldPaths: string[] = [];\n  showFields = true;\n  visibleInCurrentDocumentSearch = true;\n  namespaces: NamespaceModel[] = [];\n  characterEncoding: string = null;\n  locale: string = null;\n\n  set type(type: DocumentType) {\n    this._type = type;\n    this.isPropertyOrConstant = type === DocumentType.CONSTANT || type === DocumentType.PROPERTY;\n  }\n\n  get type(): DocumentType {\n    return this._type;\n  }\n\n  getComplexField(classIdentifier: string): Field {\n    return this.complexFieldsByClassIdentifier[classIdentifier];\n  }\n\n  getEnumField(classIdentifier: string): Field {\n    return this.enumFieldsByClassIdentifier[classIdentifier];\n  }\n\n  getAllFields(): Field[] {\n    return [].concat(this.allFields);\n  }\n\n  /**\n   * Return true if the specified field name already exists in the specified document definition,\n   * false otherwise.\n   *\n   * @param targetField\n   * @param targetFieldDocDefType\n   */\n  fieldExists(targetField: Field, targetFieldDocDefType: DocumentType): boolean {\n\n    for (const field of this.getAllFields()) {\n      if (field.name === targetField.name && field.docDef.type === targetFieldDocDefType) {\n          return true;\n      }\n    }\n    return false;\n  }\n\n  isFieldsExist(fields: Field[]): boolean {\n    if (fields == null || fields.length === 0) {\n      return true;\n    }\n    const foundFields: Field[] = this.getFields(Field.getFieldPaths(fields));\n    return (foundFields != null) && (fields.length === foundFields.length);\n  }\n\n  getFields(fieldPaths: string[]): Field[] {\n    const fields: Field[] = [];\n    for (const fieldPath of fieldPaths) {\n      const field: Field = this.getField(fieldPath);\n      if (field != null) {\n        fields.push(field);\n      }\n    }\n    return fields;\n  }\n\n  getName(showTypes: boolean): string {\n    let name = this.name;\n    if (showTypes && !this.isPropertyOrConstant) {\n      const type = this.type;\n      if (type) {\n        name += ' (' + type + ')';\n      }\n    }\n    return name;\n  }\n\n  getNamespaceForAlias(alias: string): NamespaceModel {\n    for (const ns of this.namespaces) {\n      if (alias === ns.alias) {\n        return ns;\n      }\n    }\n    return null;\n  }\n\n  getField(fieldPath: string): Field {\n    if (!fieldPath) {\n      return null;\n    }\n    let field: Field = this.fieldsByPath[fieldPath];\n    // if we can't find the field we're looking for, find parent fields and populate their children\n    const pathSeparator: string = this.pathSeparator;\n    let originalPath: string = fieldPath;\n    // strip beginning path separator from path\n    if (originalPath != null && originalPath.indexOf(pathSeparator) === 0) {\n      originalPath = originalPath.substring(1);\n    }\n    if (field == null && (originalPath.indexOf(pathSeparator) !== -1)) {\n      let currentParentPath = '';\n      while (originalPath.indexOf(pathSeparator) !== -1) {\n        const currentPathSection: string = originalPath.substr(0, originalPath.indexOf(pathSeparator));\n        currentParentPath += pathSeparator + currentPathSection;\n        const parentField: Field = this.fieldsByPath[currentParentPath];\n        if (parentField == null) {\n          if (originalPath.indexOf(pathSeparator) !== -1) {\n            originalPath = originalPath.substr(originalPath.indexOf(pathSeparator) + 1);\n            continue;\n          } else {\n            break;\n          }\n          // https://github.com/atlasmap/atlasmap/issues/1128\n          // throw new Error('Could not populate parent field with path \\''\n          //  + currentParentPath + '\\' (for: ' + fieldPath + ')');\n        }\n        this.populateChildren(parentField);\n        if (originalPath.indexOf(pathSeparator) !== -1) {\n          originalPath = originalPath.substr(originalPath.indexOf(pathSeparator) + 1);\n        }\n      }\n      field = this.fieldsByPath[fieldPath];\n    }\n    return field;\n  }\n\n  getTerminalFields(): Field[] {\n    return [].concat(this.terminalFields);\n  }\n\n  initializeFromFields(): void {\n    if (this.type === DocumentType.JAVA) {\n      this.prepareComplexFields();\n    }\n\n    Field.alphabetizeFields(this.fields);\n\n    for (const field of this.fields) {\n      this.populateFieldParentPaths(field, null, 0);\n      this.populateFieldData(field);\n    }\n\n    this.fieldPaths.sort();\n    this.initialized = true;\n  }\n\n  updateField(field: Field, oldPath: string): void {\n    Field.alphabetizeFields(this.fields);\n    if (!field.parentField || this.isPropertyOrConstant) {\n      this.populateFieldParentPaths(field, null, 0);\n    } else {\n      const pathSeparator: string = this.pathSeparator;\n      this.populateFieldParentPaths(field, field.parentField.path + pathSeparator,\n        field.parentField.fieldDepth + 1);\n    }\n    if (oldPath != null && this.fieldsByPath[oldPath] != null) {\n      delete (this.fieldsByPath[oldPath]);\n    }\n    DataMapperUtil.removeItemFromArray(field.path, this.fieldPaths);\n    this.populateFieldData(field);\n    this.fieldPaths.sort();\n  }\n\n  addField(field: Field): void {\n    if (!field.parentField || this.isPropertyOrConstant) {\n      this.fields.push(field);\n      Field.alphabetizeFields(this.fields);\n      this.populateFieldParentPaths(field, null, 0);\n    } else {\n      this.populateChildren(field.parentField);\n      field.parentField.children.push(field);\n      Field.alphabetizeFields(field.parentField.children);\n      const pathSeparator: string = this.pathSeparator;\n      this.populateFieldParentPaths(field, field.parentField.path + pathSeparator,\n        field.parentField.fieldDepth + 1);\n    }\n    this.populateFieldData(field);\n    this.fieldPaths.sort();\n  }\n\n  /**\n   * Return true if the passed field is terminal or children are detected, false otherwise.\n   * @param field - target field\n   */\n  populateChildren(field: Field): boolean {\n\n    // populate complex fields\n    if (field.isTerminal() || (field.children.length > 0)) {\n      return true;\n    }\n\n    let cachedField = this.getComplexField(field.classIdentifier);\n    if (cachedField == null) {\n      return false;\n    }\n\n    // copy cached field children\n    cachedField = cachedField.copy();\n    const pathSeparator: string = this.pathSeparator;\n    for (let childField of cachedField.children) {\n      childField = childField.copy();\n      childField.parentField = field;\n      this.populateFieldParentPaths(childField, field.path + pathSeparator, field.fieldDepth + 1);\n      this.populateFieldData(childField);\n      field.children.push(childField);\n    }\n\n    if (field.children.length > 0) {\n      this.fieldPaths.sort();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Clear all fields in this document.\n   */\n  clearFields(): void {\n    this.initialized = false;\n    this.fields = [];\n    this.allFields = [];\n    this.terminalFields = [];\n    this.fieldPaths = [];\n    this.namespaces = [];\n    this.fieldsByPath = {};\n    this.complexFieldsByClassIdentifier = {};\n    this.enumFieldsByClassIdentifier = {};\n  }\n\n  /**\n   * Remove the specified field from this document definition.\n   *\n   * @param field\n   */\n  removeField(field: Field): void {\n    if (field == null) {\n      return;\n    }\n    DataMapperUtil.removeItemFromArray(field, this.fields);\n    DataMapperUtil.removeItemFromArray(field, this.allFields);\n    DataMapperUtil.removeItemFromArray(field, this.terminalFields);\n    DataMapperUtil.removeItemFromArray(field.path, this.fieldPaths);\n    delete (this.fieldsByPath[field.path]);\n    if (field.parentField != null) {\n      DataMapperUtil.removeItemFromArray(field, field.parentField.children);\n    }\n  }\n\n  updateFromMappings(mappingDefinition: MappingDefinition): void {\n\n    if (mappingDefinition === null) {\n      return;\n    }\n\n    for (const field of this.allFields) {\n      field.partOfMapping = false;\n      field.hasUnmappedChildren = false;\n      field.partOfTransformation = false;\n    }\n\n    // FIXME: some of this work is happening N times for N source/target docs, should only happen once.\n    for (const mapping of mappingDefinition.getAllMappings(true)) {\n      const mappingIsActive: boolean = (mapping === mappingDefinition.activeMapping);\n\n      for (const field of mapping.getAllFields()) {\n        let parentField = field;\n        const partOfTransformation = mapping.getMappedFieldForField(field).actions.length > 0;\n        while (parentField != null) {\n          parentField.partOfMapping = true;\n          parentField.partOfTransformation = parentField.partOfTransformation || partOfTransformation;\n          parentField = parentField.parentField;\n        }\n      }\n    }\n    for (const field of this.allFields) {\n      field.hasUnmappedChildren = Field.fieldHasUnmappedChild(field);\n    }\n  }\n\n  private populateFieldParentPaths(field: Field, parentPath: string, depth: number): void {\n    if (parentPath == null) {\n      parentPath = this.pathSeparator;\n    }\n    field.path = parentPath + field.getNameWithNamespace();\n    if (field.isCollection) {\n      field.path += field.isArray ? (this.LEFT_BRACKET + this.RIGHT_BRACKET) : '<>';\n    }\n    if (field.isAttribute) {\n      field.path = parentPath += '@' + field.name;\n    }\n    if (field.serviceObject) {\n      field.serviceObject.path = field.path;\n    }\n    field.fieldDepth = depth;\n    const pathSeparator: string = this.pathSeparator;\n    for (const childField of field.children) {\n      childField.parentField = field;\n      this.populateFieldParentPaths(childField, field.path + pathSeparator, depth + 1);\n    }\n  }\n\n  private populateFieldData(field: Field): void {\n    field.docDef = this;\n    this.fieldPaths.push(field.path);\n    this.allFields.push(field);\n    this.fieldsByPath[field.path] = field;\n    if (field.enumeration) {\n      this.enumFieldsByClassIdentifier[field.classIdentifier] = field;\n    }\n    if (field.isTerminal()) {\n      this.terminalFields.push(field);\n    } else {\n      for (const childField of field.children) {\n        this.populateFieldData(childField);\n      }\n    }\n  }\n\n  private prepareComplexFields(): void {\n    const fields: Field[] = this.fields;\n\n    // build complex field cache\n    this.discoverComplexFields(fields);\n\n    for (const key in this.complexFieldsByClassIdentifier) {\n      if (!this.complexFieldsByClassIdentifier.hasOwnProperty(key)) {\n        continue;\n      }\n      const cachedField: Field = this.complexFieldsByClassIdentifier[key];\n      // remove children more than one level deep in cached fields\n      for (const childField of cachedField.children) {\n        childField.children = [];\n      }\n      // alphebatize complex field's childrein\n      Field.alphabetizeFields(cachedField.children);\n    }\n  }\n\n  private discoverComplexFields(fields: Field[]): void {\n    for (const field of fields) {\n      if (field.type !== 'COMPLEX') {\n        continue;\n      }\n      if (field.serviceObject.status === 'SUPPORTED') {\n        this.complexFieldsByClassIdentifier[field.classIdentifier] = field.copy();\n      }\n      if (field.children) {\n        this.discoverComplexFields(field.children);\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PropertyFieldEditComponent.html":{"url":"components/PropertyFieldEditComponent.html","title":"component - PropertyFieldEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PropertyFieldEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                property-field-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./property-field-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                docDef\n                            \n                            \n                                field\n                            \n                            \n                                fieldMode\n                            \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                isClosing\n                            \n                            \n                                modalWindowComponent\n                            \n                            \n                                valueType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getField\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                nameExistsOnCreation\n                            \n                            \n                                valueTypeSelectionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getField\n                        \n                        \n                    \n                \n            \n            \n                \ngetField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Field\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(field: Field, docDef: DocumentDefinition, mwc: ModalWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docDef\n                                    \n                                                DocumentDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mwc\n                                    \n                                                ModalWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            nameExistsOnCreation\n                        \n                        \n                    \n                \n            \n            \n                \nnameExistsOnCreation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:77\n                \n            \n\n\n            \n                \n                    Return true and disable the save button if the candidate name already exists on creation, return false\nand enable the save button otherwise.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nvalueTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                    \n                        \n                            Default value : new Field()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('name')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isClosing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalWindowComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalWindowComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { DocumentType, FieldMode } from '../../common/config.types';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { DocumentDefinition } from '../../models/document-definition.model';\nimport { Field } from '../../models/field.model';\nimport { ModalWindowComponent, ModalWindowValidator } from '../modal/modal-window.component';\n\n@Component({\n  selector: 'property-field-edit',\n  templateUrl: './property-field-edit.component.html',\n})\n\nexport class PropertyFieldEditComponent implements ModalWindowValidator {\n  field: Field = new Field();\n  fieldMode: FieldMode;\n  valueType: any = 'STRING';\n  docDef: DocumentDefinition;\n  modalWindowComponent: ModalWindowComponent;\n  isClosing: boolean;\n  @ViewChild('name') private focusEl: ElementRef;\n\n  initialize(field: Field, docDef: DocumentDefinition, mwc: ModalWindowComponent): void {\n    if (field != null) {\n      this.valueType = field.type;\n      this.fieldMode = FieldMode.EDIT;\n    } else { this.fieldMode = FieldMode.CREATE; }\n\n    this.field = field == null ? new Field() : field.copy();\n    this.docDef = docDef;\n    this.modalWindowComponent = mwc;\n    this.isClosing = false;\n  }\n\n  valueTypeSelectionChanged(event: any): void {\n    this.valueType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  getField(): Field {\n    this.field.displayName = this.field.name;\n    this.field.path = this.field.name;\n    this.field.type = this.valueType;\n    this.field.userCreated = true;\n    this.field.docDef = this.docDef;\n    return this.field;\n  }\n\n  isDataValid(): boolean {\n    return ConfigModel.getConfig().errorService.isRequiredFieldValid(this.field.name, 'Name');\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n  /**\n   * Return true and disable the save button if the candidate name already exists on creation, return false\n   * and enable the save button otherwise.\n   */\n  nameExistsOnCreation(): boolean {\n    if (this.isClosing) {\n      return false;\n    }\n    if (this.fieldMode === FieldMode.CREATE && this.docDef != null &&\n        this.docDef.fieldExists(this.getField(), DocumentType.PROPERTY)) {\n      this.modalWindowComponent.confirmButtonDisabled = true;\n      return true;\n    }\n    this.modalWindowComponent.confirmButtonDisabled = false;\n    return false;\n  }\n}\n\n    \n\n    \n        \n  \n    Name:\n    \n    \n      Property name already exists, please select a unique name.\n    \n  \n  \n    Value:\n    \n     0)\" class=\"text-info\">\n      A property value must be specified.\n    \n  \n  \n    Value Type:\n    \n      ANY\n      Big Integer\n      Boolean\n      Byte\n      ByteArray\n      Char\n      Complex\n      Decimal\n      Double\n      Float\n      Integer\n      Long\n      Short\n      String\n      Time\n      Date\n      DateTime\n      DateTZ\n      TimeTZ\n      DateTimeTZ\n      Unsigned Byte\n      Unsigned Integer\n      Unsigned Long\n      Unsigned Short\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Name:              Property name already exists, please select a unique name.            Value:         0)\" class=\"text-info\">      A property value must be specified.            Value Type:          ANY      Big Integer      Boolean      Byte      ByteArray      Char      Complex      Decimal      Double      Float      Integer      Long      Short      String      Time      Date      DateTime      DateTZ      TimeTZ      DateTimeTZ      Unsigned Byte      Unsigned Integer      Unsigned Long      Unsigned Short      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'PropertyFieldEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TemplateEditComponent.html":{"url":"components/TemplateEditComponent.html","title":"component - TemplateEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TemplateEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/app/template-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                template-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./template-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                templateText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitialFocusElement\n                            \n                            \n                                isDataValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/template-edit.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/template-edit.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('template')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/template-edit.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templateText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/template-edit.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { ModalWindowValidator } from '../modal/modal-window.component';\n\n@Component({\n  selector: 'template-edit',\n  templateUrl: './template-edit.component.html',\n})\n\nexport class TemplateEditComponent implements ModalWindowValidator {\n  templateText: string = null;\n  @ViewChild('template') private focusEl: ElementRef;\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'TemplateEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TextNode.html":{"url":"classes/TextNode.html","title":"class - TextNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TextNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ExpressionNode\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                PREFIX\n                            \n                            \n                                    Public\n                                str\n                            \n                            \n                                    Protected\n                                    Static\n                                sequence\n                            \n                            \n                                    Protected\n                                uuid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toHTML\n                            \n                            \n                                toText\n                            \n                            \n                                getUuid\n                            \n                            \n                                    Abstract\n                                toHTML\n                            \n                            \n                                    Abstract\n                                toText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(str: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        str\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            PREFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'expression-text-'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            str\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            sequence\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                            \n                                \n                                    Inherited from         ExpressionNode\n\n                                \n                            \n                        \n                            \n                                    Defined in         ExpressionNode:27\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            uuid\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         ExpressionNode\n\n                                \n                            \n                        \n                            \n                                    Defined in         ExpressionNode:28\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \ntoHTML()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \ntoText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUuid\n                        \n                        \n                    \n                \n            \n            \n                \ngetUuid()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toHTML()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toText()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { MappedField, MappingModel } from './mapping.model';\nimport { Subject } from 'rxjs';\nimport { ErrorScope, ErrorType, ErrorInfo, ErrorLevel } from './error.model';\n\nexport class ExpressionUpdatedEvent {\n  constructor(public node?: ExpressionNode, public offset?: number) {}\n}\n\nexport abstract class ExpressionNode {\n  protected static sequence = 0;\n  protected uuid;\n\n  constructor(prefix: string) {\n    this.uuid = prefix + ExpressionNode.sequence++;\n  }\n\n  getUuid() {\n    return this.uuid;\n  }\n\n  abstract toText(): string;\n  abstract toHTML(): string;\n}\n\nexport class TextNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-text-';\n\n  constructor(public str: string) {\n    super(TextNode.PREFIX);\n  }\n\n  toText(): string {\n    return this.str;\n  }\n\n  toHTML(): string {\n    return `${this.str.replace(/ /g, '&nbsp;')}`;\n  }\n\n}\n\nexport class FieldNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-field-';\n\n  constructor(private mapping: MappingModel, public field?: MappedField, private index?: number) {\n    super(FieldNode.PREFIX);\n    if (!field) {\n      this.field = mapping.getMappedFieldForIndex((index + 1).toString(), true);\n    }\n  }\n\n  toText(): string {\n    return '${' + (this.mapping.getIndexForMappedField(this.field) - 1) + '}';\n  }\n\n  toHTML(): string {\n    if (this.field && this.field.field) {\n      return `${this.field.field.name}`;\n    } else {\n      return `N/A`;\n    }\n  }\n\n}\n\nexport class ExpressionModel {\n  expressionUpdatedSource = new Subject();\n  expressionUpdated$ = this.expressionUpdatedSource.asObservable();\n\n  private _nodes: ExpressionNode[] = [];\n  private textCache = '';\n  private htmlCache = '';\n\n  constructor(private mapping: MappingModel, private cfg: ConfigModel) {}\n\n  generateInitialExpression() {\n    this.mapping.getUserMappedFields(true).forEach(f => this.appendFieldNode(f));\n  }\n\n  get nodes(): ReadonlyArray {\n    return this._nodes;\n  }\n\n  getLastNodeIndex() {\n    return this._nodes.length - 1;\n  }\n\n  getLastNode() {\n    return this._nodes[this.getLastNodeIndex()];\n  }\n\n  getNode(nodeId?: string): any {\n    if (!nodeId) {\n      return this.getLastNode();\n    }\n    return this._nodes.find(n => n.getUuid() === nodeId);\n  }\n\n  setConfigModel(cfg: ConfigModel) {\n    this.cfg = cfg;\n  }\n\n  /**\n   * Clear all text from the specified TextNode offset range or from the '@' to the end\n   * of the text node if no node ID is specified.\n   *\n   * Return the new UUID position indicator string or null.\n   *\n   * @param nodeId\n   * @param startOffset\n   * @param endOffset\n   */\n  clearText(nodeId?: string, startOffset?: number, endOffset?: number): TextNode {\n    let targetNode: TextNode;\n    let targetNodeIndex = 0;\n    if (!nodeId) {\n      const lastNode = this.getLastNode();\n      if (!(lastNode instanceof TextNode)) {\n        return null;\n      }\n      const keyPos = lastNode.str.indexOf('@');\n      if (keyPos !== -1) {\n        targetNodeIndex = this._nodes.indexOf(lastNode);\n        targetNode = lastNode;\n        targetNode.str = targetNode.str.substring(0, keyPos);\n      }\n    } else {\n      const node = this._nodes.find(n => n.getUuid() === nodeId);\n      if (!(node instanceof TextNode) || !endOffset) {\n        return null;\n      }\n      targetNode = node;\n      targetNodeIndex = this._nodes.indexOf(targetNode);\n      const cleanStr = targetNode.str.replace(targetNode.str.substring(startOffset, endOffset), '');\n      targetNode.str = cleanStr;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n    return targetNode;\n  }\n\n  /**\n   * Insert text into expression at specified position. If nodeId is not specified,\n   * it will be added to the end of expression. It parses the string\n   * and insert a set of TextNode & FieldNode if it contains field reference like ${0},\n   * otherwise just one TextNode.\n   * This emits ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   * @param str string to insert\n   * @param nodeId target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertText(str: string, nodeId?: string, offset?: number) {\n    this.insertNodes(this.createNodesFromText(str), nodeId, offset);\n  }\n\n  /**\n   * Insert an array of ExpressionNodes at the specified position. If insertPosition is\n   * not specified the nodes will be appended to the end of the expression.\n   * This emits an ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   *\n   * @param newNodes an array of ExpressionNode to add\n   * @param insertPosition target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertNodes(newNodes: ExpressionNode[], insertPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!insertPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        this._nodes.push(...newNodes);\n      } else if (last instanceof TextNode && newNodes[0] instanceof TextNode) {\n        const lastTextNode = last as TextNode;\n        (last as TextNode).str += (newNodes[0] as TextNode).str;\n        newNodes.splice(0, 1, last);\n        this._nodes.splice(this.getLastNodeIndex(), 1, ...newNodes);\n      } else if (last instanceof FieldNode && newNodes[0] instanceof FieldNode) {\n        this._nodes.splice(this.getLastNodeIndex(), 0, new TextNode(' + '), ...newNodes);\n      } else {\n        this._nodes.push(...newNodes);\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    const updatedEvent = new ExpressionUpdatedEvent();\n    const targetNode = this._nodes.find(n => n.getUuid() === insertPosition);\n    const targetNodeIndex = this._nodes.indexOf(targetNode);\n\n    if (targetNode instanceof TextNode) {\n      if (offset === undefined || offset === null || offset  0) {\n        if (newNodes[0] instanceof TextNode) {\n          targetNode.str = pre + (newNodes[0] as TextNode).str;\n          newNodes.splice(0, 1, targetNode);\n        } else {\n          targetNode.str = pre;\n          newNodes.splice(0, 0, targetNode);\n        }\n      }\n      if (post.length > 0) {\n        const lastNewNodeIndex = newNodes.length - 1;\n        if (newNodes[lastNewNodeIndex] instanceof TextNode) {\n          let mergedTextNode: TextNode;\n          if (pre.length > 0) {\n            mergedTextNode = newNodes[lastNewNodeIndex] as TextNode;\n            mergedTextNode.str += post;\n          } else {\n            mergedTextNode = targetNode;\n            mergedTextNode.str = (newNodes[lastNewNodeIndex]as TextNode).str + post;\n          }\n          newNodes.splice(lastNewNodeIndex, 1, mergedTextNode);\n        } else {\n          if (pre.length > 0) {\n            newNodes.push(new TextNode(post));\n          } else {\n            targetNode.str = post;\n            newNodes.push(targetNode);\n          }\n        }\n      }\n      this._nodes.splice(targetNodeIndex, 1, ...newNodes);\n      const lastAddedIndex = targetNodeIndex + newNodes.length - 1;\n      if (this._nodes[lastAddedIndex] instanceof FieldNode\n          && this.nodes[lastAddedIndex + 1] instanceof FieldNode) {\n        // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n        const space = new TextNode(' + ');\n        this._nodes.splice(lastAddedIndex + 1, 0, space);\n        updatedEvent.node = space;\n        updatedEvent.offset = 1;\n      } else if (this._nodes[lastAddedIndex] instanceof FieldNode) {\n        updatedEvent.node = this._nodes[lastAddedIndex + 1];\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = this._nodes[lastAddedIndex];\n        updatedEvent.offset = (this._nodes[lastAddedIndex] as TextNode).str.length - post.length;\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next(updatedEvent);\n      return;\n    }\n\n    // targetNode is a FieldNode - insert the text before it if offset is 0, otherwise after it\n    if (offset !== 0 && newNodes[0] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      newNodes.splice(0, 0, new TextNode(' + '));\n    }\n    const nextNodeIndex = offset === 0 ? targetNodeIndex : targetNodeIndex + 1;\n    const nextNode = this._nodes[nextNodeIndex];\n    if (nextNode instanceof TextNode && newNodes[newNodes.length - 1] instanceof TextNode) {\n      updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      nextNode.str = (newNodes[newNodes.length - 1] as TextNode).str + (nextNode as TextNode).str;\n      newNodes.pop();\n      this._nodes.splice(nextNodeIndex, 1, ...newNodes);\n      updatedEvent.node = nextNode;\n    } else if (nextNode instanceof FieldNode && newNodes[newNodes.length - 1] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      const space = new TextNode(' + ');\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes, space);\n      updatedEvent.node = space;\n      updatedEvent.offset = 1;\n    } else {\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes);\n      if (nextNode instanceof TextNode) {\n        updatedEvent.node = nextNode;\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = newNodes[newNodes.length - 1];\n        updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  removeToken(lastFieldRefRemoved: (removed: MappedField) => void, tokenPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!tokenPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        return;\n      }\n      if (last instanceof FieldNode) {\n        const removed = this._nodes.pop() as FieldNode;\n        if (!this._nodes.find(n => n instanceof FieldNode && n.field === removed.field)) {\n          lastFieldRefRemoved(removed.field);\n        }\n      } else if (last instanceof TextNode) {\n        if (last.str.length > 0) {\n          last.str = last.str.substring(0, last.str.length - 1);\n        } else {\n          this._nodes.pop();\n        }\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    let updatedEvent = new ExpressionUpdatedEvent();\n    let targetNode = this._nodes.find(n => n.getUuid() === tokenPosition);\n    let targetNodeIndex = this._nodes.indexOf(targetNode);\n    if (!targetNode || offset === -1) {\n      if (targetNodeIndex  n instanceof FieldNode && n.field === targetFieldNode.field)) {\n        lastFieldRefRemoved(targetFieldNode.field);\n      }\n      if (this._nodes.length > targetNodeIndex) {\n        if (this._nodes[targetNodeIndex - 1] instanceof TextNode\n            && this._nodes[targetNodeIndex] instanceof TextNode) {\n          const newOffset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n          (this._nodes[targetNodeIndex - 1] as TextNode).str\n              += (this._nodes[targetNodeIndex] as TextNode).str;\n          this._nodes.splice(targetNodeIndex, 1);\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = newOffset;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof FieldNode\n            && this._nodes[targetNodeIndex] instanceof FieldNode) {\n          const glue = new TextNode(' + ');\n          this._nodes.splice(targetNodeIndex, 0, glue);\n          updatedEvent.node = glue;\n          updatedEvent.offset = 3;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n        } else if (this._nodes[targetNodeIndex] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex];\n          updatedEvent.offset = 0;\n        }\n      } else {\n        // end of line\n        updatedEvent = undefined;\n      }\n    } else {\n      const targetString = (targetNode as TextNode).str;\n      (targetNode as TextNode).str = offset === 0 ? targetString.substr(1)\n        : targetString.substring(0, offset) + targetString.substring(offset + 1);\n      if ((targetNode as TextNode).str.length === 0) {\n        this.cfg.errorService.addError(new ErrorInfo({message: 'At least one space is required between field references.',\n          level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.USER, mapping: this.mapping}));\n        return;\n      }\n      updatedEvent.node = targetNode;\n      updatedEvent.offset = offset;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  /**\n   * Replace the content of the last text node with a substring terminating at the\n   * specified index.\n   *\n   * @param index\n   */\n  clearToEnd(index: number): void {\n    const last = this.getLastNode();\n    if (!(last instanceof TextNode)) {\n      return;\n    }\n    last.str = last.str.substring(0, index);\n  }\n\n  /**\n   * Reflect mapped source fields to the field references in the expression.\n   * Selected source fields are inserted into or appended to the expression,\n   * and unselected source fields are removed from expression.\n   *\n   * @param mapping Corresponding MappingModel object\n   */\n  updateFieldReference(mapping: MappingModel, insertPosition?: string, offset?: number) {\n    const mappedFields = mapping.getUserMappedFields(true);\n    const toAdd: MappedField[] = [];\n    const toRemove: MappedField[] = [];\n    let fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n\n    // Remove the field from the expression if unmapped.\n    for (const node of fieldNodes) {\n      if (mappedFields.includes(node.field)) {\n        continue;\n      }\n      const index = this._nodes.indexOf(node);\n      this._nodes.splice(index, 1);\n      if (this._nodes.length > index && this._nodes[index - 1] instanceof TextNode\n          && this._nodes[index] instanceof TextNode) {\n        (this._nodes[index - 1] as TextNode).str += (this._nodes[index] as TextNode).str;\n        this._nodes.splice(index, 1);\n      }\n    }\n\n    // Add the specified field into the expression - append if no insert position is specified.\n    fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n    for (const mfield of mappedFields) {\n      if (!fieldNodes.find(n => n.field === mfield)) {\n        if (insertPosition) {\n          this.insertNodes([new FieldNode(this.mapping, mfield)], insertPosition, offset);\n        } else {\n          this.appendFieldNode(mfield);\n        }\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  clear() {\n    this._nodes = [];\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  toText() {\n    return this.textCache;\n  }\n\n  toHTML() {\n    return this.htmlCache;\n  }\n\n  private updateCache() {\n    let answer = '';\n    this._nodes.forEach(node => answer += node.toText());\n    this.textCache = answer;\n    answer = '';\n    this._nodes.forEach(node => answer += node.toHTML());\n    this.htmlCache = answer;\n  }\n\n  private createNodesFromText(text: string): ExpressionNode[] {\n    const answer = [];\n    let position = -1;\n    let fn = null;\n\n    while ((position = text.search(/\\$\\{[0-9]+\\}/)) !== -1 ) {\n      if (position !== 0) {\n        answer.push(new TextNode(text.substring(0, position)));\n      }\n      const index = parseInt(text.substring(position + 2, text.indexOf('}')), 10);\n      fn = new FieldNode(this.mapping, null, index);\n      if (fn.field === null) {\n        this.cfg.errorService.addError(new ErrorInfo({message: `Unable to map expression index \"${index}\" to field node.`,\n          level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.INTERNAL, mapping: this.mapping}));\n      } else {\n        answer.push(fn);\n      }\n      text = text.substring(text.indexOf('}') + 1);\n    }\n    if (text.length > 0) {\n      answer.push(new TextNode(text));\n    }\n    return answer;\n  }\n\n  private appendFieldNode(mfield: MappedField) {\n    const lastNode = this._nodes.pop();\n    if (lastNode instanceof FieldNode) {\n        this._nodes.push(lastNode, new TextNode(' + '));\n    } else if (lastNode instanceof TextNode) {\n      if (lastNode.str.length === 0) {\n        this._nodes.push(new TextNode(' + '));\n      } else {\n        this._nodes.push(lastNode);\n      }\n    }\n    this._nodes.push(new FieldNode(this.mapping, mfield));\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ToErrorIconClassPipe.html":{"url":"pipes/ToErrorIconClassPipe.html","title":"pipe - ToErrorIconClassPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ToErrorIconClassPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/common/to-error-icon-class.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        toErrorIconClass\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: ErrorInfo[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/to-error-icon-class.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ErrorInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { ErrorInfo, ErrorLevel } from '../models/error.model';\n\n@Pipe({ name: 'toErrorIconClass' })\nexport class ToErrorIconClassPipe implements PipeTransform {\n\n  transform(value: ErrorInfo[]): string {\n    if (value.some(e => e.level === ErrorLevel.ERROR)) {\n      return 'pficon pficon-error-circle-o';\n    } else if (value.some(e => e.level === ErrorLevel.WARN)) {\n      return 'pficon pficon-warning-triangle-o';\n    } else if (value.some(e => e.level === ErrorLevel.INFO)) {\n      return 'pficon pficon-info';\n    } else {\n      return '';\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                toolbar\n            \n\n\n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expressionComponent\n                            \n                            \n                                    Private\n                                fileData\n                            \n                            \n                                    Private\n                                mappingsFileName\n                            \n                            \n                                    Private\n                                reader\n                            \n                            \n                                targetSupportsTemplate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearMappings\n                            \n                            \n                                conditionalMappingExpressionEnabled\n                            \n                            \n                                    Private\n                                editTemplate\n                            \n                            \n                                getCSSClass\n                            \n                            \n                                getEditorSettingsCSSClass\n                            \n                            \n                                getFileSuffix\n                            \n                            \n                                handleExportClick\n                            \n                            \n                                handleExportMapping\n                            \n                            \n                                handleExportMappingCancel\n                            \n                            \n                                handleMappingsInstanceName\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                processImportedFile\n                            \n                            \n                                    Async\n                                processMappingsCatalog\n                            \n                            \n                                    Async\n                                readFile\n                            \n                            \n                                    Private\n                                resetAll\n                            \n                            \n                                toolbarButtonClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:33\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clearMappings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearMappings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:195\n                \n            \n\n\n            \n                \n                    Establish a modal window popup and if confirmed clear all mappings.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            conditionalMappingExpressionEnabled\n                        \n                        \n                    \n                \n            \n            \n                \nconditionalMappingExpressionEnabled()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:310\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            editTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editTemplate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetCSSClass(action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEditorSettingsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetEditorSettingsCSSClass(open: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    open\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFileSuffix\n                        \n                        \n                    \n                \n            \n            \n                \ngetFileSuffix()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleExportClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleExportClick(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:262\n                \n            \n\n\n            \n                \n                    The user has clicked in the export file text wudget.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleExportMapping\n                        \n                        \n                    \n                \n            \n            \n                \nhandleExportMapping(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:295\n                \n            \n\n\n            \n                \n                    The user has requested their current mappings be exported.  Use the mapping management\nservice to establish the file content and to push it down to the server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleExportMappingCancel\n                        \n                        \n                    \n                \n            \n            \n                \nhandleExportMappingCancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:306\n                \n            \n\n\n            \n                \n                    Cancel button - Export > Current Mapping\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMappingsInstanceName\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMappingsInstanceName(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:277\n                \n            \n\n\n            \n                \n                    The user has specified an AtlasMap mappings catalog file name into which the current live mappings and\nsupport documents will be exported.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            processImportedFile\n                        \n                        \n                    \n                \n            \n            \n                \nprocessImportedFile(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:64\n                \n            \n\n\n            \n                \n                    The user has imported a file (mapping catalog or Java archive).  Process accordingly.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            processMappingsCatalog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processMappingsCatalog(selectedFile: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:100\n                \n            \n\n\n            \n                \n                    A user has selected a compressed mappings catalog (ZIP) file to be imported into the canvas.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectedFile\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            readFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(fileContent: Blob)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:48\n                \n            \n\n\n            \n                \n                    Perform an asynchronous read of a local file, returning a byte array for the file content.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileContent\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:211\n                \n            \n\n\n            \n                \n                    Establish a modal window popup and if confirmed remove all documents and imported JARs from\nthe server and reinitialize the DM.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toolbarButtonClicked\n                        \n                        \n                    \n                \n            \n            \n                \ntoolbarButtonClicked(action: string, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expressionComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ExpressionComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('expressionComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fileData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mappingsFileName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            reader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FileReader\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetSupportsTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, ViewChild } from '@angular/core';\n\nimport { InspectionType } from '../../common/config.types';\nimport { ConfigModel } from '../../models/config.model';\nimport { ModalWindowComponent } from '../modal//modal-window.component';\nimport { TemplateEditComponent } from '../app/template-edit.component';\nimport { ExpressionComponent } from './expression.component';\nimport { TransitionMode } from '../../models/transition.model';\nimport { ErrorScope, ErrorType, ErrorInfo, ErrorLevel } from '../../models/error.model';\n\n@Component({\n  selector: 'toolbar',\n  templateUrl: './toolbar.component.html',\n})\n\nexport class ToolbarComponent implements OnInit {\n  @Input() cfg: ConfigModel;\n  @Input() modalWindow: ModalWindowComponent;\n\n  @ViewChild('expressionComponent') expressionComponent: ExpressionComponent;\n\n  targetSupportsTemplate = false;\n\n  private fileData: any;\n  private mappingsFileName: string;\n  private reader: FileReader;\n\n  /**\n   * Perform an asynchronous read of a local file, returning a byte array for the file content.\n   *\n   * @param fileContent\n   */\n  async readFile(fileContent: Blob): Promise {\n    return new Promise((resolve, reject) => {\n      this.reader.onload = (event: any) => {\n        const arrayBuffer: any = this.reader.result;\n        const bytes = new Uint8Array(arrayBuffer);\n        resolve(bytes);\n      };\n      this.reader.readAsArrayBuffer(fileContent);\n    });\n  }\n\n  /**\n   * The user has imported a file (mapping catalog or Java archive).  Process accordingly.\n   *\n   * @param event\n   */\n  processImportedFile(event) {\n    const userFile = event.target.files[0];\n    const userFileComps = userFile.name.split('.');\n    const userFileSuffix: string = userFileComps[userFileComps.length - 1].toUpperCase();\n\n    if (userFileSuffix === 'ADM') {\n        this.cfg.errorService.resetAll();\n\n        // Clear out current user documents from the runtime service before processing the imported ADM.\n        this.cfg.fileService.resetMappings().toPromise().then( async() => {\n          this.cfg.fileService.resetLibs().toPromise().then( async() => {\n            await this.processMappingsCatalog(userFile);\n          });\n        }).catch((error: any) => {\n          if (error.status === 0) {\n            this.cfg.errorService.addError(new ErrorInfo({\n              message: 'Fatal network error: Could not connect to AtlasMap design runtime service.',\n              level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n          } else {\n            this.cfg.errorService.addError(new ErrorInfo({\n              message: 'Could not reset document definitions before import.',\n              level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n          }\n        });\n    } else if (userFileSuffix === 'JAR') {\n      this.cfg.documentService.processDocument(event.target.files[0], InspectionType.JAVA_CLASS, false);\n    }\n\n    event.srcElement.value = null;\n  }\n\n  /**\n   * A user has selected a compressed mappings catalog (ZIP) file to be imported into the canvas.\n   *\n   * @param selectedFile\n   */\n  async processMappingsCatalog(selectedFile: any) {\n    this.cfg.initializationService.updateLoadingStatus('Importing AtlasMap Catalog');\n    await this.cfg.fileService.importADMCatalog(selectedFile);\n  }\n\n  getFileSuffix() {\n    return '.adm,.jar';\n  }\n\n  getCSSClass(action: string) {\n    if (this.cfg.mappings !== null) {\n      if ('showDetails' === action) {\n        return 'fa fa-exchange link' + (this.cfg.mappings.activeMapping ? ' selected' : '');\n      } else if ('editTemplate' === action) {\n          return 'fa fa-file-text-o link' + (this.cfg.mappings.templateExists() ? ' selected' : '');\n      }\n    }\n    if ('showLines' === action) {\n      return 'fa fa-share-alt link' + (this.cfg.showLinesAlways ? ' selected' : '');\n    } else if ('showMappingTable' === action) {\n      return 'fa fa-table link' + (this.cfg.showMappingTable ? ' selected' : '');\n    } else if ('showNamespaceTable' === action) {\n      return 'fa fa-code link' + (this.cfg.showNamespaceTable ? ' selected' : '');\n    } else if ('importMappings' === action) {\n      return 'pficon pficon-import link';\n    } else if ('exportMappings' === action) {\n      return 'pficon pficon-export link';\n    } else if ('enableExpression' === action) {\n      return (this.cfg.mappings && this.cfg.mappings.activeMapping\n          && this.cfg.mappings.activeMapping.transition\n          && this.cfg.mappings.activeMapping.transition.enableExpression ? ' selected' : '');\n    }\n  }\n\n  getEditorSettingsCSSClass(open: boolean) {\n    return 'fa fa-cog link ' + (open ? ' selected' : '');\n  }\n\n  toolbarButtonClicked(action: string, event: any): void {\n    event.preventDefault();\n    if ('showDetails' === action) {\n      if (this.cfg.showMappingDetailTray) {\n        this.cfg.showMappingDetailTray = false;\n      } else {\n        this.cfg.showMappingDetailTray = true;\n      }\n    } else if ('editTemplate' === action) {\n      this.editTemplate();\n    } else if ('showLines' === action) {\n      this.cfg.showLinesAlways = !this.cfg.showLinesAlways;\n    } else if ('showTypes' === action) {\n      this.cfg.showTypes = !this.cfg.showTypes;\n    } else if ('showMappedFields' === action) {\n      this.cfg.showMappedFields = !this.cfg.showMappedFields;\n    } else if ('showUnmappedFields' === action) {\n      this.cfg.showUnmappedFields = !this.cfg.showUnmappedFields;\n    } else if ('addMapping' === action) {\n      this.cfg.mappingService.addNewMapping(null, false);\n    } else if ('showMappingTable' === action) {\n      this.cfg.showMappingTable = !this.cfg.showMappingTable;\n      if (this.cfg.showMappingTable) {\n        this.cfg.showNamespaceTable = false;\n      }\n    } else if ('showNamespaceTable' === action) {\n      this.cfg.showNamespaceTable = !this.cfg.showNamespaceTable;\n      if (this.cfg.showNamespaceTable) {\n        this.cfg.showMappingTable = false;\n      }\n    } else if ('showMappingPreview' === action) {\n      this.cfg.showMappingPreview = !this.cfg.showMappingPreview;\n    } else if ('clearMappings' === action) {\n        this.clearMappings();\n    } else if ('resetAll' === action) {\n      this.resetAll();\n    } else if ('enableExpression') {\n      this.cfg.mappingService.toggleExpressionMode();\n    }\n    // Use the initialization service to trigger the observable updateFromConfig method\n    // in the parent data-mapper-app class.  This avoids materializing the lineMachine object\n    // post-check.\n    this.cfg.initializationService.systemInitializedSource.next();\n  }\n\n  ngOnInit() {\n    this.mappingsFileName = '';\n    this.fileData = null;\n    this.reader = new FileReader();\n    // Disable template until runtime supports it - https://github.com/atlasmap/atlasmap/issues/329\n    // const targetDoc: DocumentDefinition = this.cfg.targetDocs[0];\n    // this.targetSupportsTemplate = targetDoc && (targetDoc.type == DocumentType.XML || targetDoc.type == DocumentType.JSON);\n  }\n\n  /**\n   * Establish a modal window popup and if confirmed clear all mappings.\n   */\n  private clearMappings(): void {\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Clear All Mappings';\n    this.modalWindow.headerText = 'Clear All Mappings?';\n    this.modalWindow.message = 'Are you sure you want to clear all mappings?';\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      this.cfg.errorService.resetAll();\n      this.cfg.mappingService.removeAllMappings();\n    };\n    this.modalWindow.show();\n  }\n\n  /**\n   * Establish a modal window popup and if confirmed remove all documents and imported JARs from\n   * the server and reinitialize the DM.\n   */\n  private resetAll(): void {\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Reset';\n    this.modalWindow.headerText = 'Reset All Mappings and Imports?';\n    this.modalWindow.message = 'Are you sure you want to reset all mappings and clear all imported documents?';\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      this.cfg.errorService.resetAll();\n      this.cfg.fileService.resetMappings().toPromise().then( async() => {\n        this.cfg.mappings = null;\n        this.cfg.fileService.resetLibs().toPromise().then( async() => {\n          await this.cfg.initializationService.initialize();\n        });\n        this.cfg.clearDocs();\n        await this.cfg.initializationService.initialize();\n      }).catch((error: any) => {\n        if (error.status === 0) {\n          this.cfg.errorService.addError(new ErrorInfo({\n            message: 'Fatal network error: Could not connect to AtlasMap design runtime service.',\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n        } else {\n          this.cfg.errorService.addError(new ErrorInfo({message: 'Could not reset mapping definitions.',\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n        }\n      });\n    };\n    this.modalWindow.show();\n  }\n\n  private editTemplate(): void {\n    const self: ToolbarComponent = this;\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Save';\n    this.modalWindow.headerText = this.cfg.mappings.templateExists() ? 'Edit Template' : 'Add Template';\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      const templateComponent: TemplateEditComponent = mw.nestedComponent as TemplateEditComponent;\n      templateComponent.templateText = this.cfg.mappings.templateText;\n    };\n    this.modalWindow.nestedComponentType = TemplateEditComponent;\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      const templateComponent: TemplateEditComponent = mw.nestedComponent as TemplateEditComponent;\n      this.cfg.mappings.templateText = templateComponent.templateText;\n      self.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  /**\n   * The user has clicked in the export file text wudget.\n   *\n   * @param event\n   */\n  handleExportClick(event) {\n    if (event.preventDefault) {\n        event.preventDefault();\n    }\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * The user has specified an AtlasMap mappings catalog file name into which the current live mappings and\n   * support documents will be exported.\n   *\n   * @param event\n   */\n  handleMappingsInstanceName(event) {\n      let filename = event.target.value;\n      if (filename !== null && filename.length > 0) {\n\n        // Tack on a .adm suffix if one wasn't already specified.\n        if (filename.split('.').pop() !== 'adm') {\n          filename = filename.concat('.adm');\n        }\n        this.mappingsFileName = filename;\n      }\n    }\n\n  /**\n   * The user has requested their current mappings be exported.  Use the mapping management\n   * service to establish the file content and to push it down to the server.\n   *\n   * @param event\n   */\n  handleExportMapping(event) {\n    let fileName = this.mappingsFileName;\n    if (this.mappingsFileName.length === 0) {\n        fileName = 'atlasmap-mapping-' + this.cfg.mappingDefinitionId + '.adm';\n    }\n    this.cfg.fileService.exportMappingsCatalog(fileName);\n  }\n\n  /**\n   * Cancel button - Export > Current Mapping\n   */\n  handleExportMappingCancel(): void {\n    this.mappingsFileName = '';\n  }\n\n  conditionalMappingExpressionEnabled(): boolean {\n    return (this.cfg.mappings && this.cfg.mappings.activeMapping &&\n      this.cfg.mappings.activeMapping.transition &&\n      this.cfg.mappings.activeMapping.transition.enableExpression);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      f(x)\n      \n    \n\n    \n      \n    \n\n    |\n\n    \n      \n        \n      \n    \n\n    \n      \n      \n        \n           this was commented after introducing routes. -->\n          \n            Export mappings\n              \n                OK\n                Cancel\n            \n          \n        \n      \n    \n\n    |\n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n      \n\n      \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Types\n            \n          \n          \n        \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Lines\n            \n          \n          \n        \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Mapped Fields\n            \n          \n          \n        \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Unmapped Fields\n            \n          \n          \n        \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Mapping Preview\n            \n          \n          \n        \n        \n        \n          \n            \n              \n                Reset All\n              \n            \n          \n        \n        \n          \n          \n            \n              \n                Clear All Mappings\n              \n            \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            f(x)                            |                                                               this was commented after introducing routes. -->                      Export mappings                              OK                Cancel                                            |                                                                                                                                                            Show Types                                                                                                                                                                Show Lines                                                                                                                                                                Show Mapped Fields                                                                                                                                                                Show Unmapped Fields                                                                                                                                                                Show Mapping Preview                                                                                                            Reset All                                                                                                                  Clear All Mappings                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransitionDelimiterModel.html":{"url":"classes/TransitionDelimiterModel.html","title":"class - TransitionDelimiterModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransitionDelimiterModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actualDelimiter\n                            \n                            \n                                delimiter\n                            \n                            \n                                prettyName\n                            \n                            \n                                serializedValue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(delimiter: TransitionDelimiter, serializedValue: string, prettyName: string, actualDelimiter)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        delimiter\n                                                  \n                                                        \n                                                                        TransitionDelimiter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serializedValue\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prettyName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actualDelimiter\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actualDelimiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delimiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionDelimiter\n\n                        \n                    \n                    \n                        \n                            Default value : TransitionDelimiter.SPACE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prettyName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serializedValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ExpressionModel } from './expression.model';\nimport { FieldAction } from './field-action.model';\n\nexport enum TransitionMode {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  ENUM = 'ENUM',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  FOR_EACH = 'FOR_EACH'\n}\n\nexport enum TransitionDelimiter {\n  NONE, AMPERSAND, AT_SIGN, BACKSLASH, COLON, COMMA, DASH, EQUAL, HASH,\n  MULTI_SPACE, PERIOD, PIPE, SEMICOLON, SLASH, SPACE, UNDERSCORE, USER_DEFINED\n}\n\nexport class TransitionDelimiterModel {\n  delimiter: TransitionDelimiter = TransitionDelimiter.SPACE;\n  serializedValue: string = null;\n  prettyName: string = null;\n  actualDelimiter = '';\n\n  constructor(\n    delimiter: TransitionDelimiter, serializedValue: string, prettyName: string, actualDelimiter) {\n    this.delimiter = delimiter;\n    this.serializedValue = serializedValue;\n    this.prettyName = prettyName;\n    this.actualDelimiter = actualDelimiter;\n  }\n}\n\nexport class TransitionModel {\n  static delimiterModels: TransitionDelimiterModel[] = [];\n\n  mode: TransitionMode = TransitionMode.ONE_TO_ONE;\n  delimiter: TransitionDelimiter = TransitionDelimiter.SPACE;\n  userDelimiter = '';\n  lookupTableName: string = null;\n  expression: ExpressionModel;\n  enableExpression = false;\n  transitionFieldAction: FieldAction;\n\n  constructor() {\n    TransitionModel.initialize();\n  }\n\n  static initialize() {\n    if (TransitionModel.delimiterModels.length === 0) {\n      const models: TransitionDelimiterModel[] = [];\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.NONE, null, '[None]', ''));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.AMPERSAND, 'Ampersand', 'Ampersand [&]', '\\&'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.AT_SIGN, 'AtSign', 'At Sign [@]', '\\@'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.BACKSLASH, 'Backslash', 'Backslash [\\\\]', '\\\\'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.COLON, 'Colon', 'Colon [:]', '\\:'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.COMMA, 'Comma', 'Comma [,]', '\\,'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.DASH, 'Dash', 'Dash [-]', '\\-'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.EQUAL, 'Equal', 'Equal [=]', '\\='));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.HASH, 'Hash', 'Hash [#]', '\\#'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.MULTI_SPACE, 'MultiSpace', 'Multi Spaces', '  '));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.PERIOD, 'Period', 'Period [.]', '\\.'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.PIPE, 'Pipe', 'Pipe [|]', '\\|'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SEMICOLON, 'Semicolon', 'Semicolon [;]', '\\;'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SLASH, 'Slash', 'Slash [/]', '\\/'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SPACE, 'Space', 'Space [ ]', ' '));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.UNDERSCORE, 'Underscore', 'Underscore [_]', '\\_'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.USER_DEFINED, 'User defined', 'User defined', ''));\n      TransitionModel.delimiterModels = models;\n    }\n  }\n\n  /**\n   * Translate a mapping mode number into a string.\n   * @param mode\n   */\n  static getMappingModeName(mode: TransitionMode): string {\n    let actionName: string;\n\n    switch (mode) {\n      case TransitionMode.ONE_TO_ONE: {\n        actionName = 'One to One';\n        break;\n      }\n      case TransitionMode.MANY_TO_ONE: {\n        actionName = 'Many to One';\n        break;\n      }\n      case TransitionMode.ONE_TO_MANY: {\n        actionName = 'One to Many';\n        break;\n      }\n      case TransitionMode.ENUM: {\n        actionName = 'ENUM';\n        break;\n      }\n      case TransitionMode.FOR_EACH: {\n        actionName = 'For Each';\n        break;\n      }\n      default: {\n         actionName = '';\n         break;\n      }\n    }\n    return actionName;\n  }\n\n  getPrettyName() {\n    let transitionFieldActionName = '';\n    if (this.transitionFieldAction) {\n      transitionFieldActionName = ' (' + this.transitionFieldAction.name + ')';\n    }\n    if (this.mode === TransitionMode.ONE_TO_MANY) {\n      return TransitionModel.getMappingModeName(this.mode) + transitionFieldActionName;\n    } else if (this.mode === TransitionMode.MANY_TO_ONE) {\n      return TransitionModel.getMappingModeName(this.mode) + transitionFieldActionName;\n    } else if (this.mode === TransitionMode.ENUM) {\n      return 'Enum (table: ' + this.lookupTableName + ')';\n    }\n    return TransitionModel.getMappingModeName(this.mode);\n  }\n\n  isOneToManyMode(): boolean {\n    return this.mode === TransitionMode.ONE_TO_MANY;\n  }\n\n  isOneToOneMode(): boolean {\n    return this.mode === TransitionMode.ONE_TO_ONE;\n  }\n\n  isManyToOneMode(): boolean {\n    return this.mode === TransitionMode.MANY_TO_ONE;\n  }\n\n  isForEachMode(): boolean {\n    return this.mode === TransitionMode.FOR_EACH;\n  }\n\n  isEnumerationMode(): boolean {\n    return this.mode === TransitionMode.ENUM;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransitionModel.html":{"url":"classes/TransitionModel.html","title":"class - TransitionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransitionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                delimiter\n                            \n                            \n                                    Static\n                                delimiterModels\n                            \n                            \n                                enableExpression\n                            \n                            \n                                expression\n                            \n                            \n                                lookupTableName\n                            \n                            \n                                mode\n                            \n                            \n                                transitionFieldAction\n                            \n                            \n                                userDelimiter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getMappingModeName\n                            \n                            \n                                getPrettyName\n                            \n                            \n                                    Static\n                                initialize\n                            \n                            \n                                isEnumerationMode\n                            \n                            \n                                isForEachMode\n                            \n                            \n                                isManyToOneMode\n                            \n                            \n                                isOneToManyMode\n                            \n                            \n                                isOneToOneMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:56\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delimiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionDelimiter\n\n                        \n                    \n                    \n                        \n                            Default value : TransitionDelimiter.SPACE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            delimiterModels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionDelimiterModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableExpression\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expression\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ExpressionModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lookupTableName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionMode\n\n                        \n                    \n                    \n                        \n                            Default value : TransitionMode.ONE_TO_ONE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transitionFieldAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldAction\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userDelimiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:52\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getMappingModeName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMappingModeName(mode: TransitionMode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:90\n                \n            \n\n\n            \n                \n                    Translate a mapping mode number into a string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mode\n                                    \n                                                TransitionMode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPrettyName\n                        \n                        \n                    \n                \n            \n            \n                \ngetPrettyName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnumerationMode\n                        \n                        \n                    \n                \n            \n            \n                \nisEnumerationMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isForEachMode\n                        \n                        \n                    \n                \n            \n            \n                \nisForEachMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isManyToOneMode\n                        \n                        \n                    \n                \n            \n            \n                \nisManyToOneMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isOneToManyMode\n                        \n                        \n                    \n                \n            \n            \n                \nisOneToManyMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isOneToOneMode\n                        \n                        \n                    \n                \n            \n            \n                \nisOneToOneMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExpressionModel } from './expression.model';\nimport { FieldAction } from './field-action.model';\n\nexport enum TransitionMode {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  ENUM = 'ENUM',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  FOR_EACH = 'FOR_EACH'\n}\n\nexport enum TransitionDelimiter {\n  NONE, AMPERSAND, AT_SIGN, BACKSLASH, COLON, COMMA, DASH, EQUAL, HASH,\n  MULTI_SPACE, PERIOD, PIPE, SEMICOLON, SLASH, SPACE, UNDERSCORE, USER_DEFINED\n}\n\nexport class TransitionDelimiterModel {\n  delimiter: TransitionDelimiter = TransitionDelimiter.SPACE;\n  serializedValue: string = null;\n  prettyName: string = null;\n  actualDelimiter = '';\n\n  constructor(\n    delimiter: TransitionDelimiter, serializedValue: string, prettyName: string, actualDelimiter) {\n    this.delimiter = delimiter;\n    this.serializedValue = serializedValue;\n    this.prettyName = prettyName;\n    this.actualDelimiter = actualDelimiter;\n  }\n}\n\nexport class TransitionModel {\n  static delimiterModels: TransitionDelimiterModel[] = [];\n\n  mode: TransitionMode = TransitionMode.ONE_TO_ONE;\n  delimiter: TransitionDelimiter = TransitionDelimiter.SPACE;\n  userDelimiter = '';\n  lookupTableName: string = null;\n  expression: ExpressionModel;\n  enableExpression = false;\n  transitionFieldAction: FieldAction;\n\n  constructor() {\n    TransitionModel.initialize();\n  }\n\n  static initialize() {\n    if (TransitionModel.delimiterModels.length === 0) {\n      const models: TransitionDelimiterModel[] = [];\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.NONE, null, '[None]', ''));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.AMPERSAND, 'Ampersand', 'Ampersand [&]', '\\&'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.AT_SIGN, 'AtSign', 'At Sign [@]', '\\@'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.BACKSLASH, 'Backslash', 'Backslash [\\\\]', '\\\\'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.COLON, 'Colon', 'Colon [:]', '\\:'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.COMMA, 'Comma', 'Comma [,]', '\\,'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.DASH, 'Dash', 'Dash [-]', '\\-'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.EQUAL, 'Equal', 'Equal [=]', '\\='));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.HASH, 'Hash', 'Hash [#]', '\\#'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.MULTI_SPACE, 'MultiSpace', 'Multi Spaces', '  '));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.PERIOD, 'Period', 'Period [.]', '\\.'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.PIPE, 'Pipe', 'Pipe [|]', '\\|'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SEMICOLON, 'Semicolon', 'Semicolon [;]', '\\;'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SLASH, 'Slash', 'Slash [/]', '\\/'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SPACE, 'Space', 'Space [ ]', ' '));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.UNDERSCORE, 'Underscore', 'Underscore [_]', '\\_'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.USER_DEFINED, 'User defined', 'User defined', ''));\n      TransitionModel.delimiterModels = models;\n    }\n  }\n\n  /**\n   * Translate a mapping mode number into a string.\n   * @param mode\n   */\n  static getMappingModeName(mode: TransitionMode): string {\n    let actionName: string;\n\n    switch (mode) {\n      case TransitionMode.ONE_TO_ONE: {\n        actionName = 'One to One';\n        break;\n      }\n      case TransitionMode.MANY_TO_ONE: {\n        actionName = 'Many to One';\n        break;\n      }\n      case TransitionMode.ONE_TO_MANY: {\n        actionName = 'One to Many';\n        break;\n      }\n      case TransitionMode.ENUM: {\n        actionName = 'ENUM';\n        break;\n      }\n      case TransitionMode.FOR_EACH: {\n        actionName = 'For Each';\n        break;\n      }\n      default: {\n         actionName = '';\n         break;\n      }\n    }\n    return actionName;\n  }\n\n  getPrettyName() {\n    let transitionFieldActionName = '';\n    if (this.transitionFieldAction) {\n      transitionFieldActionName = ' (' + this.transitionFieldAction.name + ')';\n    }\n    if (this.mode === TransitionMode.ONE_TO_MANY) {\n      return TransitionModel.getMappingModeName(this.mode) + transitionFieldActionName;\n    } else if (this.mode === TransitionMode.MANY_TO_ONE) {\n      return TransitionModel.getMappingModeName(this.mode) + transitionFieldActionName;\n    } else if (this.mode === TransitionMode.ENUM) {\n      return 'Enum (table: ' + this.lookupTableName + ')';\n    }\n    return TransitionModel.getMappingModeName(this.mode);\n  }\n\n  isOneToManyMode(): boolean {\n    return this.mode === TransitionMode.ONE_TO_MANY;\n  }\n\n  isOneToOneMode(): boolean {\n    return this.mode === TransitionMode.ONE_TO_ONE;\n  }\n\n  isManyToOneMode(): boolean {\n    return this.mode === TransitionMode.MANY_TO_ONE;\n  }\n\n  isForEachMode(): boolean {\n    return this.mode === TransitionMode.FOR_EACH;\n  }\n\n  isEnumerationMode(): boolean {\n    return this.mode === TransitionMode.ENUM;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransitionSelectionComponent.html":{"url":"components/TransitionSelectionComponent.html","title":"component - TransitionSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TransitionSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                transition-selection\n            \n\n\n\n\n            \n                templateUrl\n                ./transition-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configSelectionChanged\n                            \n                            \n                                getMappedValueCount\n                            \n                            \n                                getMultiplicityActionConfigs\n                            \n                            \n                                isIndexArg\n                            \n                            \n                                modeIsEnum\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showLookupTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                cfg\n                            \n                            \n                                mapping\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n                \n                    \n                        Type :         FieldAction\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nconfigSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:156\n                \n            \n\n\n            \n                \n                    A mapping field action configuration selection has been made.  Note that action field arguments, if any,\nmay be specified by either a text field or pull-down menu.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappedValueCount\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappedValueCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMultiplicityActionConfigs\n                        \n                        \n                    \n                \n            \n            \n                \ngetMultiplicityActionConfigs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     FieldActionDefinition[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isIndexArg\n                        \n                        \n                    \n                \n            \n            \n                \nisIndexArg(argVal: string, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            modeIsEnum\n                        \n                        \n                    \n                \n            \n            \n                \nmodeIsEnum()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showLookupTable\n                        \n                        \n                    \n                \n            \n            \n                \nshowLookupTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : DataMapperUtil.toDisplayable\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nimport { TransitionDelimiter, TransitionMode } from '../../models/transition.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { MappingModel } from '../../models/mapping.model';\nimport { ModalWindowComponent } from '../modal/modal-window.component';\nimport { LookupTableComponent } from './lookup-table.component';\nimport { FieldAction, FieldActionDefinition, Multiplicity } from '../../models/field-action.model';\nimport { DataMapperUtil } from '../../common/data-mapper-util';\nimport { LookupTable } from '../../models/lookup-table.model';\nimport { ErrorScope, ErrorType, ErrorInfo, ErrorLevel } from '../../models/error.model';\n\n@Component({\n  selector: 'transition-selection',\n  templateUrl: './transition-selection.component.html'\n})\n\nexport class TransitionSelectionComponent implements OnInit {\n  @Input() cfg: ConfigModel;\n  @Input() modalWindow: ModalWindowComponent;\n  @Input() mapping: MappingModel;\n  @Input() action: FieldAction;\n\n  getLabel = DataMapperUtil.toDisplayable;\n\n  ngOnInit(): void {\n    const that = this;\n\n    // $(document).ready( function() {\n    jQuery(function() {\n      // Invoke the combobox so it supersedes the stock select.\n      // $('select#separator').combobox({clearIfNoMatch: false});\n\n      $('select#separator').on('change', function() {\n\n        // Check the combobox select.\n        const optionSelected = $(this).find('option:selected');\n        const selectedValue: any = optionSelected.val();\n\n        if (selectedValue) {\n          that.mapping.transition.delimiter = parseInt(selectedValue, 10);\n          that.cfg.mappingService.notifyMappingUpdated();\n          return;\n        }\n        const inputValue: any = $(this).val();\n\n        if (inputValue) {\n          that.mapping.transition.delimiter = TransitionDelimiter.USER_DEFINED;\n          that.mapping.transition.userDelimiter = inputValue;\n          that.cfg.mappingService.notifyMappingUpdated();\n          return;\n        }\n      });\n\n      // Replace the user input when focus is lost.\n      $('.combobox').on('blur', function() {\n\n        if (that.mapping.transition.delimiter === TransitionDelimiter.USER_DEFINED) {\n          $(this).find('option:selected').val(that.mapping.transition.userDelimiter);\n          $(this).val(that.mapping.transition.userDelimiter).trigger('input');\n        }\n      });\n\n      // Check the combobox input text field.\n      /* NOTE: re-enable this function for non-standard delimiters with combobox\n      $('.combobox').on('input', function() {\n\n        const inputValue: any = $(this).val();\n\n        if (inputValue) {\n          if (inputValue.length > 1) {\n            that.cfg.errorService.error('The separator delimiter must be one character in length.', null);\n            return;\n          }\n          that.fieldPair.transition.delimiter = TransitionDelimiter.USER_DEFINED;\n          that.fieldPair.transition.userDelimiter = inputValue;\n          that.cfg.mappingService.updateMappedField(that.fieldPair, false, false);\n        }\n      });\n      */\n    });\n\n  }\n\n  modeIsEnum(): boolean {\n    return this.mapping.transition.isEnumerationMode();\n  }\n\ngetMappedValueCount(): number {\n    const tableName: string = this.mapping.transition.lookupTableName;\n    if (tableName == null) {\n      return 0;\n    }\n    const table: LookupTable = this.cfg.mappings.getTableByName(tableName);\n    if (!table || !table.entries) {\n      return 0;\n    }\n    return table.entries.length;\n  }\n\n  showLookupTable(): void {\n    const mapping: MappingModel = this.cfg.mappings.activeMapping;\n\n    if (!mapping.isFullyMapped()) {\n      this.cfg.errorService.addError(new ErrorInfo({message: 'Please select source and target fields before mapping values.',\n        level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.USER, mapping: mapping}));\n      return;\n    }\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Finish';\n    this.modalWindow.headerText = 'Map Enumeration Values';\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      const c: LookupTableComponent = mw.nestedComponent as LookupTableComponent;\n      c.initialize(this.cfg, this.mapping);\n    };\n    this.modalWindow.nestedComponentType = LookupTableComponent;\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      const c: LookupTableComponent = mw.nestedComponent as LookupTableComponent;\n      c.saveTable();\n      this.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  getMultiplicityActionConfigs(): FieldActionDefinition[] {\n    if (this.mapping.transition.mode === TransitionMode.ONE_TO_MANY) {\n      return this.cfg.fieldActionService.getActionsAppliesToField(this.mapping, true, Multiplicity.ONE_TO_MANY);\n    } else if (this.mapping.transition.mode === TransitionMode.MANY_TO_ONE) {\n      return this.cfg.fieldActionService.getActionsAppliesToField(this.mapping, true, Multiplicity.MANY_TO_ONE);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * A mapping field action configuration selection has been made.  Note that action field arguments, if any,\n   * may be specified by either a text field or pull-down menu.\n   * @param event\n   */\n  configSelectionChanged(event: any) {\n    const attributes: any = event.target.selectedOptions.item(0).attributes;\n    const selectedActionName: any = attributes.getNamedItem('value').value;\n    const action: FieldAction = this.action;\n    if (action.name !== selectedActionName) {\n      action.argumentValues = [];  // Invalidate the previously selected field action arguments.\n      const multiplicity = this.mapping.transition.mode === TransitionMode.ONE_TO_MANY\n       ? Multiplicity.ONE_TO_MANY : Multiplicity.MANY_TO_ONE;\n      const fieldActionDefinition = this.cfg.fieldActionService.getActionDefinitionForName(selectedActionName, multiplicity);\n      fieldActionDefinition.populateFieldAction(action);\n\n      // If the field action configuration predefines argument values then populate the fields with\n      // default values.  Needed to support pull-down menus in action argument definitions.\n      if (action.argumentValues.values && action.argumentValues.length > 0\n        && fieldActionDefinition.arguments[0] && fieldActionDefinition.arguments[0].values\n        && fieldActionDefinition.arguments[0].values.length > 0) {\n        for (let i = 0; i \n    \n\n    \n        \n\n  \n    {{ getMappedValueCount() }} values mapped\n    \n  \n\n  \n    \n      \n        {{ getLabel(actionConfig.name) }}\n        \n        \n    \n\n    \n      \n\n        \n        \n\n      \n    \n\n\n        \n          \n            {{ mapping.transition.userDelimiter }}\n            {{ delimiter.prettyName }}\n          \n        \n      \n-->\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ getMappedValueCount() }} values mapped                          {{ getLabel(actionConfig.name) }}                                                                                      {{ mapping.transition.userDelimiter }}            {{ delimiter.prettyName }}                        -->  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'TransitionSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            routerModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/atlasmap-navbar.component.ts\n            \n            component\n            AtlasmapNavbarComponent\n            \n                41 %\n                (14/34)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts\n            \n            class\n            DataMapperUtil\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/common/focus.directive.ts\n            \n            directive\n            FocusDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/common/to-error-icon-class.pipe.ts\n            \n            pipe\n            ToErrorIconClassPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts\n            \n            component\n            ConstantFieldEditComponent\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts\n            \n            component\n            DataMapperAppComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts\n            \n            component\n            DataMapperErrorComponent\n            \n                28 %\n                (6/21)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts\n            \n            component\n            FieldEditComponent\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts\n            \n            component\n            LineMachineComponent\n            \n                6 %\n                (2/30)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts\n            \n            class\n            LineModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts\n            \n            component\n            NamespaceEditComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts\n            \n            component\n            PropertyFieldEditComponent\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/template-edit.component.ts\n            \n            component\n            TemplateEditComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts\n            \n            component\n            DataMapperAppExampleHostComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts\n            \n            component\n            ClassNameComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/document/document-definition.component.ts\n            \n            component\n            DocumentDefinitionComponent\n            \n                23 %\n                (11/47)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts\n            \n            component\n            DocumentFieldDetailComponent\n            \n                3 %\n                (1/27)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/collapsable-header.component.ts\n            \n            component\n            CollapsableHeaderComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts\n            \n            component\n            LookupTableComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts\n            \n            class\n            LookupTableData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts\n            \n            component\n            MappingDetailComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts\n            \n            component\n            MappingFieldActionArgumentComponent\n            \n                35 %\n                (7/20)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts\n            \n            component\n            MappingFieldActionComponent\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts\n            \n            component\n            MappingFieldContainerComponent\n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts\n            \n            component\n            MappingFieldDetailComponent\n            \n                11 %\n                (2/18)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts\n            \n            component\n            MappingSelectionSectionComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts\n            \n            component\n            MappingSelectionComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts\n            \n            component\n            TransitionSelectionComponent\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts\n            \n            component\n            MappingListFieldComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts\n            \n            component\n            MappingListComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts\n            \n            component\n            NamespaceListComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal/modal-error-detail.component.ts\n            \n            component\n            ModalErrorDetailComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts\n            \n            component\n            ModalErrorWindowComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts\n            \n            interface\n            ModalErrorWindowValidator\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts\n            \n            component\n            EmptyModalBodyComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts\n            \n            component\n            ModalWindowComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts\n            \n            interface\n            ModalWindowValidator\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/toolbar/expression.component.ts\n            \n            component\n            ExpressionComponent\n            \n                14 %\n                (7/47)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                37 %\n                (9/24)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            alertModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            bsDropdownModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            httpClientXsrfModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            loggerModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            tooltipModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            typeaheadModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/config.model.ts\n            \n            class\n            ConfigModel\n            \n                4 %\n                (2/49)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/config.model.ts\n            \n            class\n            DataMapperInitializationModel\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/config.model.ts\n            \n            class\n            DocumentInitializationModel\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts\n            \n            class\n            DocumentDefinition\n            \n                7 %\n                (4/53)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts\n            \n            class\n            NamespaceModel\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts\n            \n            class\n            PaddingField\n            \n                2 %\n                (1/50)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/error.model.ts\n            \n            class\n            ErrorInfo\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/examples.ts\n            \n            class\n            Examples\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            ExpressionModel\n            \n                20 %\n                (5/24)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            ExpressionNode\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            ExpressionUpdatedEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            FieldNode\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            TextNode\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n            \n            class\n            FieldAction\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n            \n            class\n            FieldActionArgument\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n            \n            class\n            FieldActionArgumentValue\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n            \n            class\n            FieldActionDefinition\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field.model.ts\n            \n            class\n            EnumValue\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field.model.ts\n            \n            class\n            Field\n            \n                2 %\n                (1/49)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts\n            \n            class\n            LookupTable\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts\n            \n            class\n            LookupTableEntry\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts\n            \n            class\n            MappingDefinition\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n            \n            class\n            MappedField\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n            \n            class\n            MappedFieldParsingData\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n            \n            class\n            MappingModel\n            \n                15 %\n                (5/32)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n            \n            class\n            TransitionDelimiterModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n            \n            class\n            TransitionModel\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts\n            \n            injectable\n            ApiHttpXsrfTokenExtractor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts\n            \n            interceptor\n            ApiXsrfInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/document-management.service.ts\n            \n            injectable\n            DocumentManagementService\n            \n                23 %\n                (7/30)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts\n            \n            injectable\n            ErrorHandlerService\n            \n                70 %\n                (14/20)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/field-action.service.ts\n            \n            injectable\n            FieldActionService\n            \n                36 %\n                (7/19)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/file-management.service.ts\n            \n            injectable\n            FileManagementService\n            \n                55 %\n                (10/18)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/initialization.service.ts\n            \n            injectable\n            InitializationService\n            \n                22 %\n                (5/22)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/mapping-identifier.service.ts\n            \n            injectable\n            MappingIdentifierService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/mapping-management.service.ts\n            \n            injectable\n            MappingManagementService\n            \n                32 %\n                (14/43)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/utils/lookup-table-util.ts\n            \n            class\n            LookupTableUtil\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/utils/mapping-serializer.ts\n            \n            class\n            MappingSerializer\n            \n                14 %\n                (4/27)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts\n            \n            class\n            MappingUtil\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/environments/environment.dev.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.trace.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @angular/animations : ^7.2.15\n        \n            bootstrap : ^4.1.2\n        \n            chart.js : ^2.5.0\n        \n            classlist.js : ^1.1.20150312\n        \n            core-js : ^2.5.5\n        \n            font-awesome : ^4.7.0\n        \n            jquery : ^3.3.0\n        \n            jquery-match-height : ^0.7.2\n        \n            mkdirp : ^0.5.1\n        \n            moment : ^2.20.1\n        \n            ncp : ^2.0.0\n        \n            ngx-bootstrap : ^5.2.0\n        \n            opn-cli : ^3.1.0\n        \n            patternfly-bootstrap-combobox : ^1.1.6\n        \n            patternfly-ng : ^4.0.0\n        \n            rxjs : ^6.2.2\n        \n            zone.js : ^0.8.26\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CollectionType   (src/.../config.types.ts)\n                        \n                        \n                            DocumentType   (src/.../config.types.ts)\n                        \n                        \n                            ErrorLevel   (src/.../error.model.ts)\n                        \n                        \n                            ErrorScope   (src/.../error.model.ts)\n                        \n                        \n                            ErrorType   (src/.../error.model.ts)\n                        \n                        \n                            FieldMode   (src/.../config.types.ts)\n                        \n                        \n                            InspectionType   (src/.../config.types.ts)\n                        \n                        \n                            Multiplicity   (src/.../field-action.model.ts)\n                        \n                        \n                            TransitionDelimiter   (src/.../transition.model.ts)\n                        \n                        \n                            TransitionMode   (src/.../transition.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/lib/atlasmap-data-mapper/common/config.types.ts\n    \n        \n            \n                \n                    \n                        \n                        CollectionType\n                    \n                \n                        \n                            \n                                 ARRAY\n                            \n                        \n                        \n                            \n                                Value : ARRAY\n                            \n                        \n                        \n                            \n                                 LIST\n                            \n                        \n                        \n                            \n                                Value : LIST\n                            \n                        \n                        \n                            \n                                 MAP\n                            \n                        \n                        \n                            \n                                Value : MAP\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : NONE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        DocumentType\n                    \n                \n                        \n                            \n                                 JAVA\n                            \n                        \n                        \n                            \n                                Value : JAVA\n                            \n                        \n                        \n                            \n                                 JAVA_ARCHIVE\n                            \n                        \n                        \n                            \n                                Value : JAR\n                            \n                        \n                        \n                            \n                                 XML\n                            \n                        \n                        \n                            \n                                Value : XML\n                            \n                        \n                        \n                            \n                                 XSD\n                            \n                        \n                        \n                            \n                                Value : XSD\n                            \n                        \n                        \n                            \n                                 JSON\n                            \n                        \n                        \n                            \n                                Value : JSON\n                            \n                        \n                        \n                            \n                                 CORE\n                            \n                        \n                        \n                            \n                                Value : Core\n                            \n                        \n                        \n                            \n                                 CSV\n                            \n                        \n                        \n                            \n                                Value : CSV\n                            \n                        \n                        \n                            \n                                 CONSTANT\n                            \n                        \n                        \n                            \n                                Value : Constants\n                            \n                        \n                        \n                            \n                                 PROPERTY\n                            \n                        \n                        \n                            \n                                Value : Property\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FieldMode\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                 EDIT\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        InspectionType\n                    \n                \n                        \n                            \n                                 JAVA_CLASS\n                            \n                        \n                        \n                            \n                                Value : JAVA_CLASS\n                            \n                        \n                        \n                            \n                                 SCHEMA\n                            \n                        \n                        \n                            \n                                Value : SCHEMA\n                            \n                        \n                        \n                            \n                                 INSTANCE\n                            \n                        \n                        \n                            \n                                Value : INSTANCE\n                            \n                        \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : UNKNOWN\n                            \n                        \n            \n        \n\n    src/app/lib/atlasmap-data-mapper/models/error.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ErrorLevel\n                    \n                \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                Value : DEBUG\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : INFO\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                Value : WARN\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : ERROR\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ErrorScope\n                    \n                \n                        \n                            \n                                 APPLICATION\n                            \n                        \n                        \n                            \n                                Value : APPLICATION\n                            \n                        \n                        \n                            \n                                 MAPPING\n                            \n                        \n                        \n                            \n                                Value : MAPPING\n                            \n                        \n                        \n                            \n                                 FIELD\n                            \n                        \n                        \n                            \n                                Value : FIELD\n                            \n                        \n                        \n                            \n                                 FORM\n                            \n                        \n                        \n                            \n                                Value : FORM\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ErrorType\n                    \n                \n                        \n                            \n                                 INTERNAL\n                            \n                        \n                        \n                            \n                                Value : INTERNAL\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 VALIDATION\n                            \n                        \n                        \n                            \n                                Value : VALIDATION\n                            \n                        \n                        \n                            \n                                 PREVIEW\n                            \n                        \n                        \n                            \n                                Value : PREVIEW\n                            \n                        \n                        \n                            \n                                 FORM\n                            \n                        \n                        \n                            \n                                Value : FORM\n                            \n                        \n            \n        \n\n    src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Multiplicity\n                    \n                \n                        \n                            \n                                 ONE_TO_ONE\n                            \n                        \n                        \n                            \n                                Value : ONE_TO_ONE\n                            \n                        \n                        \n                            \n                                 ONE_TO_MANY\n                            \n                        \n                        \n                            \n                                Value : ONE_TO_MANY\n                            \n                        \n                        \n                            \n                                 MANY_TO_ONE\n                            \n                        \n                        \n                            \n                                Value : MANY_TO_ONE\n                            \n                        \n                        \n                            \n                                 ZERO_TO_ONE\n                            \n                        \n                        \n                            \n                                Value : ZERO_TO_ONE\n                            \n                        \n            \n        \n\n    src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TransitionDelimiter\n                    \n                \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                 AMPERSAND\n                            \n                        \n                        \n                            \n                                 AT_SIGN\n                            \n                        \n                        \n                            \n                                 BACKSLASH\n                            \n                        \n                        \n                            \n                                 COLON\n                            \n                        \n                        \n                            \n                                 COMMA\n                            \n                        \n                        \n                            \n                                 DASH\n                            \n                        \n                        \n                            \n                                 EQUAL\n                            \n                        \n                        \n                            \n                                 HASH\n                            \n                        \n                        \n                            \n                                 MULTI_SPACE\n                            \n                        \n                        \n                            \n                                 PERIOD\n                            \n                        \n                        \n                            \n                                 PIPE\n                            \n                        \n                        \n                            \n                                 SEMICOLON\n                            \n                        \n                        \n                            \n                                 SLASH\n                            \n                        \n                        \n                            \n                                 SPACE\n                            \n                        \n                        \n                            \n                                 UNDERSCORE\n                            \n                        \n                        \n                            \n                                 USER_DEFINED\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TransitionMode\n                    \n                \n                        \n                            \n                                 ONE_TO_ONE\n                            \n                        \n                        \n                            \n                                Value : ONE_TO_ONE\n                            \n                        \n                        \n                            \n                                 ONE_TO_MANY\n                            \n                        \n                        \n                            \n                                Value : ONE_TO_MANY\n                            \n                        \n                        \n                            \n                                 ENUM\n                            \n                        \n                        \n                            \n                                Value : ENUM\n                            \n                        \n                        \n                            \n                                 MANY_TO_ONE\n                            \n                        \n                        \n                            \n                                Value : MANY_TO_ONE\n                            \n                        \n                        \n                            \n                                 FOR_EACH\n                            \n                        \n                        \n                            \n                                Value : FOR_EACH\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAtlasMap Data Mapper UI\n\n\n\n\n\n\nGoogle Group\nThe AtlasMap is a data mapping solution with interactive web based user interface, that simplifies configuring integrations between Java, XML, and JSON data sources. You can design your data mapping on the AtlasMap Data Mapper UI canvas, and then run that data mapping via runtime engine. AtlasMap Data Mapper UI is primarily designed to work within the Syndesis UI.\nAtlasMap Documentation\nAll developer related documentation can be found at AtlasMap Documentation\nThe shortest path to run standalone AtlasMap\n\nCheckout AtlasMap repo from GitHub\n$ git clone https://github.com/atlasmap/atlasmap ${ATLASMAP}\nBuild AtlasMap runtime\n$ cd ${ATLASMAP}\n$ ./mvnw clean installor you can skip tests to get the build little bit faster\n$ ./mvnw clean install -DskipTests\nRun AtlasMap standalone\n$ cd ${ATLASMAP}/standalone\n$ ../mvnw -Pitests spring-boot:run\n\nThen AtlasMap UI is available at http://127.0.0.1:8585/ by default.\nLive update for UI development\nWhile standalone AtlasMap is running by following above, you can also run an another AtlasMap UI instance at different port by yarn start. This enables live update for UI code so you can see the outcome of your UI code change without build&restart manually.\n\nInstall Yarn\n\nInstall Data Mapper UI's dependencies\n$ cd ${ATLASMAP}/ui\n$ yarn install\nStart Data Mapper UI\n$ yarn start\n\nThe yarn start command will attempt to automatically open your browser window, but if it doesn't, open it directly with this URL: http://localhost:3000.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n            Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataMapperModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExampleAppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataMapperModule\n\n\n\ncluster_DataMapperModule_declarations\n\n\n\ncluster_DataMapperModule_imports\n\n\n\ncluster_DataMapperModule_exports\n\n\n\ncluster_DataMapperModule_providers\n\n\n\ncluster_ExampleAppModule\n\n\n\ncluster_ExampleAppModule_declarations\n\n\n\ncluster_ExampleAppModule_bootstrap\n\n\n\n\nClassNameComponent\n\nClassNameComponent\n\n\n\nDataMapperModule\n\nDataMapperModule\n\nDataMapperModule -->\n\nClassNameComponent->DataMapperModule\n\n\n\n\n\nCollapsableHeaderComponent\n\nCollapsableHeaderComponent\n\nDataMapperModule -->\n\nCollapsableHeaderComponent->DataMapperModule\n\n\n\n\n\nConstantFieldEditComponent\n\nConstantFieldEditComponent\n\nDataMapperModule -->\n\nConstantFieldEditComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppComponent\n\nDataMapperAppComponent\n\nDataMapperModule -->\n\nDataMapperAppComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppExampleHostComponent\n\nDataMapperAppExampleHostComponent\n\nDataMapperModule -->\n\nDataMapperAppExampleHostComponent->DataMapperModule\n\n\n\n\n\nDataMapperErrorComponent\n\nDataMapperErrorComponent\n\nDataMapperModule -->\n\nDataMapperErrorComponent->DataMapperModule\n\n\n\n\n\nDocumentDefinitionComponent\n\nDocumentDefinitionComponent\n\nDataMapperModule -->\n\nDocumentDefinitionComponent->DataMapperModule\n\n\n\n\n\nDocumentFieldDetailComponent\n\nDocumentFieldDetailComponent\n\nDataMapperModule -->\n\nDocumentFieldDetailComponent->DataMapperModule\n\n\n\n\n\nEmptyModalBodyComponent\n\nEmptyModalBodyComponent\n\nDataMapperModule -->\n\nEmptyModalBodyComponent->DataMapperModule\n\n\n\n\n\nExpressionComponent\n\nExpressionComponent\n\nDataMapperModule -->\n\nExpressionComponent->DataMapperModule\n\n\n\n\n\nFieldEditComponent\n\nFieldEditComponent\n\nDataMapperModule -->\n\nFieldEditComponent->DataMapperModule\n\n\n\n\n\nFocusDirective\n\nFocusDirective\n\nDataMapperModule -->\n\nFocusDirective->DataMapperModule\n\n\n\n\n\nLineMachineComponent\n\nLineMachineComponent\n\nDataMapperModule -->\n\nLineMachineComponent->DataMapperModule\n\n\n\n\n\nLookupTableComponent\n\nLookupTableComponent\n\nDataMapperModule -->\n\nLookupTableComponent->DataMapperModule\n\n\n\n\n\nMappingDetailComponent\n\nMappingDetailComponent\n\nDataMapperModule -->\n\nMappingDetailComponent->DataMapperModule\n\n\n\n\n\nMappingFieldActionArgumentComponent\n\nMappingFieldActionArgumentComponent\n\nDataMapperModule -->\n\nMappingFieldActionArgumentComponent->DataMapperModule\n\n\n\n\n\nMappingFieldActionComponent\n\nMappingFieldActionComponent\n\nDataMapperModule -->\n\nMappingFieldActionComponent->DataMapperModule\n\n\n\n\n\nMappingFieldContainerComponent\n\nMappingFieldContainerComponent\n\nDataMapperModule -->\n\nMappingFieldContainerComponent->DataMapperModule\n\n\n\n\n\nMappingFieldDetailComponent\n\nMappingFieldDetailComponent\n\nDataMapperModule -->\n\nMappingFieldDetailComponent->DataMapperModule\n\n\n\n\n\nMappingListComponent\n\nMappingListComponent\n\nDataMapperModule -->\n\nMappingListComponent->DataMapperModule\n\n\n\n\n\nMappingListFieldComponent\n\nMappingListFieldComponent\n\nDataMapperModule -->\n\nMappingListFieldComponent->DataMapperModule\n\n\n\n\n\nMappingSelectionComponent\n\nMappingSelectionComponent\n\nDataMapperModule -->\n\nMappingSelectionComponent->DataMapperModule\n\n\n\n\n\nMappingSelectionSectionComponent\n\nMappingSelectionSectionComponent\n\nDataMapperModule -->\n\nMappingSelectionSectionComponent->DataMapperModule\n\n\n\n\n\nModalErrorDetailComponent\n\nModalErrorDetailComponent\n\nDataMapperModule -->\n\nModalErrorDetailComponent->DataMapperModule\n\n\n\n\n\nModalErrorWindowComponent\n\nModalErrorWindowComponent\n\nDataMapperModule -->\n\nModalErrorWindowComponent->DataMapperModule\n\n\n\n\n\nModalWindowComponent\n\nModalWindowComponent\n\nDataMapperModule -->\n\nModalWindowComponent->DataMapperModule\n\n\n\n\n\nNamespaceEditComponent\n\nNamespaceEditComponent\n\nDataMapperModule -->\n\nNamespaceEditComponent->DataMapperModule\n\n\n\n\n\nNamespaceListComponent\n\nNamespaceListComponent\n\nDataMapperModule -->\n\nNamespaceListComponent->DataMapperModule\n\n\n\n\n\nPropertyFieldEditComponent\n\nPropertyFieldEditComponent\n\nDataMapperModule -->\n\nPropertyFieldEditComponent->DataMapperModule\n\n\n\n\n\nTemplateEditComponent\n\nTemplateEditComponent\n\nDataMapperModule -->\n\nTemplateEditComponent->DataMapperModule\n\n\n\n\n\nToErrorIconClassPipe\n\nToErrorIconClassPipe\n\nDataMapperModule -->\n\nToErrorIconClassPipe->DataMapperModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nDataMapperModule -->\n\nToolbarComponent->DataMapperModule\n\n\n\n\n\nTransitionSelectionComponent\n\nTransitionSelectionComponent\n\nDataMapperModule -->\n\nTransitionSelectionComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppComponent \n\nDataMapperAppComponent \n\nDataMapperAppComponent  -->\n\nDataMapperModule->DataMapperAppComponent \n\n\n\n\n\nDataMapperAppExampleHostComponent \n\nDataMapperAppExampleHostComponent \n\nDataMapperAppExampleHostComponent  -->\n\nDataMapperModule->DataMapperAppExampleHostComponent \n\n\n\nDataMapperAppExampleHostComponent  -->\n\nDataMapperModule->DataMapperAppExampleHostComponent \n\n\n\n\n\nModalErrorWindowComponent \n\nModalErrorWindowComponent \n\nModalErrorWindowComponent  -->\n\nDataMapperModule->ModalErrorWindowComponent \n\n\n\n\n\nModalWindowComponent \n\nModalWindowComponent \n\nModalWindowComponent  -->\n\nDataMapperModule->ModalWindowComponent \n\n\n\n\n\nExampleAppModule\n\nExampleAppModule\n\nExampleAppModule -->\n\nDataMapperModule->ExampleAppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nDataMapperModule -->\n\nAppRoutingModule->DataMapperModule\n\n\n\n\n\nDocumentManagementService\n\nDocumentManagementService\n\nDataMapperModule -->\n\nDocumentManagementService->DataMapperModule\n\n\n\n\n\nErrorHandlerService\n\nErrorHandlerService\n\nDataMapperModule -->\n\nErrorHandlerService->DataMapperModule\n\n\n\n\n\nFieldActionService\n\nFieldActionService\n\nDataMapperModule -->\n\nFieldActionService->DataMapperModule\n\n\n\n\n\nFileManagementService\n\nFileManagementService\n\nDataMapperModule -->\n\nFileManagementService->DataMapperModule\n\n\n\n\n\nInitializationService\n\nInitializationService\n\nDataMapperModule -->\n\nInitializationService->DataMapperModule\n\n\n\n\n\nMappingManagementService\n\nMappingManagementService\n\nDataMapperModule -->\n\nMappingManagementService->DataMapperModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nExampleAppModule -->\n\nAppComponent->ExampleAppModule\n\n\n\n\n\nAtlasmapNavbarComponent\n\nAtlasmapNavbarComponent\n\nExampleAppModule -->\n\nAtlasmapNavbarComponent->ExampleAppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nExampleAppModule->AppComponent \n\n\n\n\n\nAtlasmapNavbarComponent \n\nAtlasmapNavbarComponent \n\nAtlasmapNavbarComponent  -->\n\nExampleAppModule->AtlasmapNavbarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    33 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    33 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            alertModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            bsDropdownModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.trace.ts)\n                        \n                        \n                            environment   (src/.../environment.dev.ts)\n                        \n                        \n                            httpClientXsrfModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            loggerModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            routerModuleForRoot   (src/.../app-routing.module.ts)\n                        \n                        \n                            tooltipModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            typeaheadModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            alertModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : AlertModule.forRoot()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bsDropdownModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : BsDropdownModule.forRoot()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpClientXsrfModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : HttpClientXsrfModule.withOptions(environment.xsrf)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loggerModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : LoggerModule.forRoot(environment.ngxLoggerConfig)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tooltipModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : TooltipModule.forRoot()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeaheadModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : TypeaheadModule.forRoot()\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  ngxLoggerConfig: {\n    level: NgxLoggerLevel.OFF,\n    disableConsoleLogging: true\n  },\n  xsrf: {\n    headerName: 'ATLASMAP-XSRF-TOKEN',\n    cookieName: 'ATLASMAP-XSRF-COOKIE',\n    defaultTokenValue: 'awesome',\n  },\n  backendUrls: {\n    atlasServiceUrl: 'http://localhost:8585/v2/atlas/',\n    javaInspectionServiceUrl: 'http://localhost:8585/v2/atlas/java/',\n    xmlInspectionServiceUrl: 'http://localhost:8585/v2/atlas/xml/',\n    jsonInspectionServiceUrl: 'http://localhost:8585/v2/atlas/json/',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  ngxLoggerConfig: {\n    level: NgxLoggerLevel.INFO,\n    disableConsoleLogging: true\n  },\n  xsrf: {\n    headerName: 'ATLASMAP-XSRF-TOKEN',\n    cookieName: 'ATLASMAP-XSRF-COOKIE',\n    defaultTokenValue: 'awesome',\n  },\n  backendUrls: {\n    atlasServiceUrl: '/v2/atlas/',\n    javaInspectionServiceUrl: '/v2/atlas/java/',\n    xmlInspectionServiceUrl: '/v2/atlas/xml/',\n    jsonInspectionServiceUrl: '/v2/atlas/json/',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.trace.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  ngxLoggerConfig: {\n    level: NgxLoggerLevel.TRACE,\n    disableConsoleLogging: false\n  },\n  xsrf: {\n    headerName: 'ATLASMAP-XSRF-TOKEN',\n    cookieName: 'ATLASMAP-XSRF-COOKIE',\n    defaultTokenValue: 'awesome',\n  },\n  backendUrls: {\n    atlasServiceUrl: 'http://localhost:8585/v2/atlas/',\n    javaInspectionServiceUrl: 'http://localhost:8585/v2/atlas/java/',\n    xmlInspectionServiceUrl: 'http://localhost:8585/v2/atlas/xml/',\n    jsonInspectionServiceUrl: 'http://localhost:8585/v2/atlas/json/',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.dev.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  ngxLoggerConfig: {\n    level: NgxLoggerLevel.DEBUG,\n    disableConsoleLogging: false\n  },\n  xsrf: {\n    headerName: 'ATLASMAP-XSRF-TOKEN',\n    cookieName: 'ATLASMAP-XSRF-COOKIE',\n    defaultTokenValue: 'awesome',\n  },\n  backendUrls: {\n    atlasServiceUrl: 'http://localhost:8585/v2/atlas/',\n    javaInspectionServiceUrl: 'http://localhost:8585/v2/atlas/java/',\n    xmlInspectionServiceUrl: 'http://localhost:8585/v2/atlas/xml/',\n    jsonInspectionServiceUrl: 'http://localhost:8585/v2/atlas/json/',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/app-routing.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routerModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : RouterModule.forRoot(routes)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
